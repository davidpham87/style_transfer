node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "global_step"
    }
  }
}
node {
  name: "global_step/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/Assign"
  op: "AssignVariableOp"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch"
  op: "Switch"
  input: "global_step/VarIsInitializedOp"
  input: "global_step/VarIsInitializedOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_t"
  op: "Identity"
  input: "global_step/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_f"
  op: "Identity"
  input: "global_step/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/pred_id"
  op: "Identity"
  input: "global_step/VarIsInitializedOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step/cond/Read/ReadVariableOp/Switch:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/cond/Read/ReadVariableOp/Switch"
  op: "Switch"
  input: "global_step"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Identity"
  op: "Identity"
  input: "global_step/cond/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Merge"
  op: "Merge"
  input: "global_step/cond/Switch_1"
  input: "global_step/cond/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "Add"
  input: "global_step/cond/Merge"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "input_pipeline_task0/OneShotIterator"
  op: "OneShotIterator"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_zTjIZOlRFUU"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "input_pipeline_task0/IteratorToStringHandle"
  op: "IteratorToStringHandle"
  input: "input_pipeline_task0/OneShotIterator"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "input_pipeline_task0/IteratorGetNext"
  op: "IteratorGetNext"
  input: "input_pipeline_task0/OneShotIterator"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "input_pipeline_task0/OneShotIterator_1"
  op: "OneShotIterator"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_yFWJkZd1cJs"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "input_pipeline_task0/IteratorToStringHandle_1"
  op: "IteratorToStringHandle"
  input: "input_pipeline_task0/OneShotIterator_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "input_pipeline_task0/IteratorGetNext_1"
  op: "IteratorGetNext"
  input: "input_pipeline_task0/OneShotIterator_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "input_pipeline_task0/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_pipeline_task0/IteratorGetNext"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "input_pipeline_task0/InfeedQueue/split/0/split_dim"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_pipeline_task0/IteratorGetNext"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "input_pipeline_task0/InfeedQueue/split/0"
  op: "Split"
  input: "input_pipeline_task0/InfeedQueue/split/0/split_dim"
  input: "input_pipeline_task0/IteratorGetNext"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_pipeline_task0/IteratorGetNext"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "input_pipeline_task0/Const_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_pipeline_task0/IteratorGetNext_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "input_pipeline_task0/InfeedQueue/split/1/split_dim"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_pipeline_task0/IteratorGetNext_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "input_pipeline_task0/InfeedQueue/split/1"
  op: "Split"
  input: "input_pipeline_task0/InfeedQueue/split/1/split_dim"
  input: "input_pipeline_task0/IteratorGetNext_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_pipeline_task0/IteratorGetNext_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "input_pipeline_task0/InfeedQueue/enqueue/0"
  op: "InfeedEnqueueTuple"
  input: "input_pipeline_task0/InfeedQueue/split/0"
  input: "input_pipeline_task0/InfeedQueue/split/1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "device_ordinal"
    value {
      i: 0
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "input_pipeline_task0/InfeedQueue/enqueue/1"
  op: "InfeedEnqueueTuple"
  input: "input_pipeline_task0/InfeedQueue/split/0:1"
  input: "input_pipeline_task0/InfeedQueue/split/1:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "device_ordinal"
    value {
      i: 1
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "input_pipeline_task0/InfeedQueue/enqueue/2"
  op: "InfeedEnqueueTuple"
  input: "input_pipeline_task0/InfeedQueue/split/0:2"
  input: "input_pipeline_task0/InfeedQueue/split/1:2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "device_ordinal"
    value {
      i: 2
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "input_pipeline_task0/InfeedQueue/enqueue/3"
  op: "InfeedEnqueueTuple"
  input: "input_pipeline_task0/InfeedQueue/split/0:3"
  input: "input_pipeline_task0/InfeedQueue/split/1:3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "device_ordinal"
    value {
      i: 3
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "input_pipeline_task0/InfeedQueue/enqueue/4"
  op: "InfeedEnqueueTuple"
  input: "input_pipeline_task0/InfeedQueue/split/0:4"
  input: "input_pipeline_task0/InfeedQueue/split/1:4"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "device_ordinal"
    value {
      i: 4
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "input_pipeline_task0/InfeedQueue/enqueue/5"
  op: "InfeedEnqueueTuple"
  input: "input_pipeline_task0/InfeedQueue/split/0:5"
  input: "input_pipeline_task0/InfeedQueue/split/1:5"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "device_ordinal"
    value {
      i: 5
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "input_pipeline_task0/InfeedQueue/enqueue/6"
  op: "InfeedEnqueueTuple"
  input: "input_pipeline_task0/InfeedQueue/split/0:6"
  input: "input_pipeline_task0/InfeedQueue/split/1:6"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "device_ordinal"
    value {
      i: 6
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "input_pipeline_task0/InfeedQueue/enqueue/7"
  op: "InfeedEnqueueTuple"
  input: "input_pipeline_task0/InfeedQueue/split/0:7"
  input: "input_pipeline_task0/InfeedQueue/split/1:7"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "device_ordinal"
    value {
      i: 7
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Identity"
  op: "Identity"
  input: "Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tpu_estimator/iterations_per_loop/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "tpu_estimator/iterations_per_loop"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tpu_estimator/iterations_per_loop"
    }
  }
}
node {
  name: "tpu_estimator/iterations_per_loop/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "tpu_estimator/iterations_per_loop"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tpu_estimator/iterations_per_loop/Assign"
  op: "AssignVariableOp"
  input: "tpu_estimator/iterations_per_loop"
  input: "tpu_estimator/iterations_per_loop/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tpu_estimator/iterations_per_loop/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "tpu_estimator/iterations_per_loop"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cluster/pivot"
  op: "NoOp"
}
node {
  name: "TPUReplicateMetadata"
  op: "TPUReplicateMetadata"
  input: "^cluster/pivot"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "computation_shape"
    value {
      list {
      }
    }
  }
  attr {
    key: "device_assignment"
    value {
      list {
      }
    }
  }
  attr {
    key: "host_compute_core"
    value {
      list {
      }
    }
  }
  attr {
    key: "num_cores_per_replica"
    value {
      i: 1
    }
  }
  attr {
    key: "num_replicas"
    value {
      i: 8
    }
  }
  attr {
    key: "topology"
    value {
      s: ""
    }
  }
  attr {
    key: "use_tpu"
    value {
      b: true
    }
  }
}
node {
  name: "Const"
  op: "Const"
  input: "^TPUReplicateMetadata"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  input: "^TPUReplicateMetadata"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10000000.0
      }
    }
  }
}
node {
  name: "Enter"
  op: "Enter"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Enter_1"
  op: "Enter"
  input: "Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Merge"
  op: "Merge"
  input: "Enter"
  input: "NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Merge_1"
  op: "Merge"
  input: "Enter_1"
  input: "NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Less/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Less/ReadVariableOp/Enter"
  input: "^Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Less/ReadVariableOp/Enter"
  op: "Enter"
  input: "tpu_estimator/iterations_per_loop"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Less"
  op: "Less"
  input: "Merge"
  input: "Less/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "LoopCond"
  op: "LoopCond"
  input: "Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Switch"
  op: "Switch"
  input: "Merge"
  input: "LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Switch_1"
  op: "Switch"
  input: "Merge_1"
  input: "LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Identity_1"
  op: "Identity"
  input: "Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Identity_2"
  op: "Identity"
  input: "Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "add/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "Identity_1"
  input: "add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "InfeedQueue/dequeue"
  op: "InfeedDequeueTuple"
  input: "^Identity_1"
  device: "/device:TPU_REPLICATED_CORE:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09975093603134155
      }
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09975093603134155
      }
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "vgg19_encoder/block1_conv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "vgg19_encoder/block1_conv1/kernel/Initializer/random_uniform/max"
  input: "vgg19_encoder/block1_conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "vgg19_encoder/block1_conv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "vgg19_encoder/block1_conv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "vgg19_encoder/block1_conv1/kernel/Initializer/random_uniform/mul"
  input: "vgg19_encoder/block1_conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_encoder/block1_conv1/kernel"
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block1_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv1/kernel/Assign"
  op: "AssignVariableOp"
  input: "vgg19_encoder/block1_conv1/kernel"
  input: "vgg19_encoder/block1_conv1/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block1_conv1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block1_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block1_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_encoder/block1_conv1/bias"
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block1_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv1/bias/Assign"
  op: "AssignVariableOp"
  input: "vgg19_encoder/block1_conv1/bias"
  input: "vgg19_encoder/block1_conv1/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block1_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block1_conv1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block1_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv1/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block1_conv1/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv1/Conv2D/ReadVariableOp/Enter"
  op: "Enter"
  input: "vgg19_encoder/block1_conv1/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv1/Conv2D"
  op: "Conv2D"
  input: "InfeedQueue/dequeue"
  input: "vgg19_encoder/block1_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block1_conv1/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv1/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "vgg19_encoder/block1_conv1/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv1/BiasAdd"
  op: "BiasAdd"
  input: "vgg19_encoder/block1_conv1/Conv2D"
  input: "vgg19_encoder/block1_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv1/Relu"
  op: "Relu"
  input: "vgg19_encoder/block1_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "vgg19_encoder/block1_conv2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "vgg19_encoder/block1_conv2/kernel/Initializer/random_uniform/max"
  input: "vgg19_encoder/block1_conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "vgg19_encoder/block1_conv2/kernel/Initializer/random_uniform/RandomUniform"
  input: "vgg19_encoder/block1_conv2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "vgg19_encoder/block1_conv2/kernel/Initializer/random_uniform/mul"
  input: "vgg19_encoder/block1_conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_encoder/block1_conv2/kernel"
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block1_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv2/kernel/Assign"
  op: "AssignVariableOp"
  input: "vgg19_encoder/block1_conv2/kernel"
  input: "vgg19_encoder/block1_conv2/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block1_conv2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block1_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block1_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_encoder/block1_conv2/bias"
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block1_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv2/bias/Assign"
  op: "AssignVariableOp"
  input: "vgg19_encoder/block1_conv2/bias"
  input: "vgg19_encoder/block1_conv2/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block1_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block1_conv2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block1_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv2/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block1_conv2/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv2/Conv2D/ReadVariableOp/Enter"
  op: "Enter"
  input: "vgg19_encoder/block1_conv2/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv2/Conv2D"
  op: "Conv2D"
  input: "vgg19_encoder/block1_conv1/Relu"
  input: "vgg19_encoder/block1_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block1_conv2/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv2/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "vgg19_encoder/block1_conv2/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv2/BiasAdd"
  op: "BiasAdd"
  input: "vgg19_encoder/block1_conv2/Conv2D"
  input: "vgg19_encoder/block1_conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vgg19_encoder/block1_conv2/Relu"
  op: "Relu"
  input: "vgg19_encoder/block1_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_encoder/block1_pool/MaxPool"
  op: "MaxPool"
  input: "vgg19_encoder/block1_conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0589255653321743
      }
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "vgg19_encoder/block2_conv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "vgg19_encoder/block2_conv1/kernel/Initializer/random_uniform/max"
  input: "vgg19_encoder/block2_conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "vgg19_encoder/block2_conv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "vgg19_encoder/block2_conv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "vgg19_encoder/block2_conv1/kernel/Initializer/random_uniform/mul"
  input: "vgg19_encoder/block2_conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_encoder/block2_conv1/kernel"
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block2_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv1/kernel/Assign"
  op: "AssignVariableOp"
  input: "vgg19_encoder/block2_conv1/kernel"
  input: "vgg19_encoder/block2_conv1/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block2_conv1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block2_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block2_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_encoder/block2_conv1/bias"
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block2_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv1/bias/Assign"
  op: "AssignVariableOp"
  input: "vgg19_encoder/block2_conv1/bias"
  input: "vgg19_encoder/block2_conv1/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block2_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block2_conv1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block2_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv1/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block2_conv1/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv1/Conv2D/ReadVariableOp/Enter"
  op: "Enter"
  input: "vgg19_encoder/block2_conv1/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv1/Conv2D"
  op: "Conv2D"
  input: "vgg19_encoder/block1_pool/MaxPool"
  input: "vgg19_encoder/block2_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block2_conv1/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv1/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "vgg19_encoder/block2_conv1/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv1/BiasAdd"
  op: "BiasAdd"
  input: "vgg19_encoder/block2_conv1/Conv2D"
  input: "vgg19_encoder/block2_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv1/Relu"
  op: "Relu"
  input: "vgg19_encoder/block2_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05103103816509247
      }
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "vgg19_encoder/block2_conv2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "vgg19_encoder/block2_conv2/kernel/Initializer/random_uniform/max"
  input: "vgg19_encoder/block2_conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "vgg19_encoder/block2_conv2/kernel/Initializer/random_uniform/RandomUniform"
  input: "vgg19_encoder/block2_conv2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "vgg19_encoder/block2_conv2/kernel/Initializer/random_uniform/mul"
  input: "vgg19_encoder/block2_conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_encoder/block2_conv2/kernel"
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block2_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv2/kernel/Assign"
  op: "AssignVariableOp"
  input: "vgg19_encoder/block2_conv2/kernel"
  input: "vgg19_encoder/block2_conv2/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block2_conv2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block2_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block2_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_encoder/block2_conv2/bias"
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block2_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv2/bias/Assign"
  op: "AssignVariableOp"
  input: "vgg19_encoder/block2_conv2/bias"
  input: "vgg19_encoder/block2_conv2/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block2_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block2_conv2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block2_conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv2/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block2_conv2/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv2/Conv2D/ReadVariableOp/Enter"
  op: "Enter"
  input: "vgg19_encoder/block2_conv2/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv2/Conv2D"
  op: "Conv2D"
  input: "vgg19_encoder/block2_conv1/Relu"
  input: "vgg19_encoder/block2_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block2_conv2/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv2/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "vgg19_encoder/block2_conv2/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv2/BiasAdd"
  op: "BiasAdd"
  input: "vgg19_encoder/block2_conv2/Conv2D"
  input: "vgg19_encoder/block2_conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vgg19_encoder/block2_conv2/Relu"
  op: "Relu"
  input: "vgg19_encoder/block2_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_encoder/block2_pool/MaxPool"
  op: "MaxPool"
  input: "vgg19_encoder/block2_conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "vgg19_encoder/block3_conv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "vgg19_encoder/block3_conv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084301
      }
    }
  }
}
node {
  name: "vgg19_encoder/block3_conv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "vgg19_encoder/block3_conv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "vgg19_encoder/block3_conv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "vgg19_encoder/block3_conv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "vgg19_encoder/block3_conv1/kernel/Initializer/random_uniform/max"
  input: "vgg19_encoder/block3_conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_encoder/block3_conv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "vgg19_encoder/block3_conv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "vgg19_encoder/block3_conv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_encoder/block3_conv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "vgg19_encoder/block3_conv1/kernel/Initializer/random_uniform/mul"
  input: "vgg19_encoder/block3_conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_encoder/block3_conv1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_encoder/block3_conv1/kernel"
    }
  }
}
node {
  name: "vgg19_encoder/block3_conv1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block3_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_encoder/block3_conv1/kernel/Assign"
  op: "AssignVariableOp"
  input: "vgg19_encoder/block3_conv1/kernel"
  input: "vgg19_encoder/block3_conv1/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block3_conv1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block3_conv1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block3_conv1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block3_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_encoder/block3_conv1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block3_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_encoder/block3_conv1/bias"
    }
  }
}
node {
  name: "vgg19_encoder/block3_conv1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block3_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_encoder/block3_conv1/bias/Assign"
  op: "AssignVariableOp"
  input: "vgg19_encoder/block3_conv1/bias"
  input: "vgg19_encoder/block3_conv1/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block3_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block3_conv1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block3_conv1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_encoder/block3_conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block3_conv1/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_encoder/block3_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block3_conv1/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block3_conv1/Conv2D/ReadVariableOp/Enter"
  op: "Enter"
  input: "vgg19_encoder/block3_conv1/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "vgg19_encoder/block3_conv1/Conv2D"
  op: "Conv2D"
  input: "vgg19_encoder/block2_pool/MaxPool"
  input: "vgg19_encoder/block3_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vgg19_encoder/block3_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block3_conv1/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder/block3_conv1/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "vgg19_encoder/block3_conv1/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "vgg19_encoder/block3_conv1/BiasAdd"
  op: "BiasAdd"
  input: "vgg19_encoder/block3_conv1/Conv2D"
  input: "vgg19_encoder/block3_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vgg19_encoder/block3_conv1/Relu"
  op: "Relu"
  input: "vgg19_encoder/block3_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_encoder_1/block1_conv1/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_encoder_1/block1_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block1_conv1/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder_1/block1_conv1/Conv2D"
  op: "Conv2D"
  input: "InfeedQueue/dequeue:1"
  input: "vgg19_encoder_1/block1_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vgg19_encoder_1/block1_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block1_conv1/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder_1/block1_conv1/BiasAdd"
  op: "BiasAdd"
  input: "vgg19_encoder_1/block1_conv1/Conv2D"
  input: "vgg19_encoder_1/block1_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vgg19_encoder_1/block1_conv1/Relu"
  op: "Relu"
  input: "vgg19_encoder_1/block1_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_encoder_1/block1_conv2/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_encoder_1/block1_conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block1_conv2/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder_1/block1_conv2/Conv2D"
  op: "Conv2D"
  input: "vgg19_encoder_1/block1_conv1/Relu"
  input: "vgg19_encoder_1/block1_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vgg19_encoder_1/block1_conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block1_conv2/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder_1/block1_conv2/BiasAdd"
  op: "BiasAdd"
  input: "vgg19_encoder_1/block1_conv2/Conv2D"
  input: "vgg19_encoder_1/block1_conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vgg19_encoder_1/block1_conv2/Relu"
  op: "Relu"
  input: "vgg19_encoder_1/block1_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_encoder_1/block1_pool/MaxPool"
  op: "MaxPool"
  input: "vgg19_encoder_1/block1_conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "vgg19_encoder_1/block2_conv1/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_encoder_1/block2_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block2_conv1/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder_1/block2_conv1/Conv2D"
  op: "Conv2D"
  input: "vgg19_encoder_1/block1_pool/MaxPool"
  input: "vgg19_encoder_1/block2_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vgg19_encoder_1/block2_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block2_conv1/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder_1/block2_conv1/BiasAdd"
  op: "BiasAdd"
  input: "vgg19_encoder_1/block2_conv1/Conv2D"
  input: "vgg19_encoder_1/block2_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vgg19_encoder_1/block2_conv1/Relu"
  op: "Relu"
  input: "vgg19_encoder_1/block2_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_encoder_1/block2_conv2/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_encoder_1/block2_conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block2_conv2/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder_1/block2_conv2/Conv2D"
  op: "Conv2D"
  input: "vgg19_encoder_1/block2_conv1/Relu"
  input: "vgg19_encoder_1/block2_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vgg19_encoder_1/block2_conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block2_conv2/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder_1/block2_conv2/BiasAdd"
  op: "BiasAdd"
  input: "vgg19_encoder_1/block2_conv2/Conv2D"
  input: "vgg19_encoder_1/block2_conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vgg19_encoder_1/block2_conv2/Relu"
  op: "Relu"
  input: "vgg19_encoder_1/block2_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_encoder_1/block2_pool/MaxPool"
  op: "MaxPool"
  input: "vgg19_encoder_1/block2_conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "vgg19_encoder_1/block3_conv1/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_encoder_1/block3_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block3_conv1/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder_1/block3_conv1/Conv2D"
  op: "Conv2D"
  input: "vgg19_encoder_1/block2_pool/MaxPool"
  input: "vgg19_encoder_1/block3_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vgg19_encoder_1/block3_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block3_conv1/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder_1/block3_conv1/BiasAdd"
  op: "BiasAdd"
  input: "vgg19_encoder_1/block3_conv1/Conv2D"
  input: "vgg19_encoder_1/block3_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vgg19_encoder_1/block3_conv1/Relu"
  op: "Relu"
  input: "vgg19_encoder_1/block3_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/Pad/paddings"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/Pad"
  op: "Pad"
  input: "vgg19_encoder/block3_conv1/Relu"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084301
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Initializer/random_uniform/max"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Initializer/random_uniform/mul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D"
  op: "Conv2D"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/Pad"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/BiasAdd"
  op: "BiasAdd"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Relu"
  op: "Relu"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/Pad_1/paddings"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/Pad_1"
  op: "Pad"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Relu"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/Pad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0589255653321743
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Initializer/random_uniform/max"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Initializer/random_uniform/RandomUniform"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Initializer/random_uniform/mul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D"
  op: "Conv2D"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/Pad_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/BiasAdd"
  op: "BiasAdd"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Relu"
  op: "Relu"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/Pad_2/paddings"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/Pad_2"
  op: "Pad"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Relu"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/Pad_2/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0833333358168602
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Initializer/random_uniform/max"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Initializer/random_uniform/RandomUniform"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Initializer/random_uniform"
  op: "Add"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Initializer/random_uniform/mul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D"
  op: "Conv2D"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/Pad_2"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/BiasAdd"
  op: "BiasAdd"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Relu"
  op: "Relu"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/strided_slice/stack"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/strided_slice/stack_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/strided_slice/stack_2"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/strided_slice"
  op: "StridedSlice"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/Shape"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/strided_slice/stack"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/strided_slice/stack_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/Reshape/shape/1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/Reshape/shape/2"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/Reshape/shape"
  op: "Pack"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/strided_slice"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/Reshape/shape/1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/Reshape"
  op: "Reshape"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Relu"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/moments/mean/reduction_indices"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/moments/mean"
  op: "Mean"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/Reshape"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/moments/StopGradient"
  op: "StopGradient"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/Reshape"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/moments/variance/reduction_indices"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/moments/variance"
  op: "Mean"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/moments/SquaredDifference"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batchnorm/add/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batchnorm/add"
  op: "Add"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/moments/variance"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batchnorm/mul"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/Reshape"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batchnorm/Neg"
  op: "Neg"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batchnorm/mul_1"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batchnorm/Neg"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batchnorm/add_1"
  op: "Add"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batchnorm/mul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/sub"
  op: "Sub"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/Reshape"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/truediv/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 128.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/truediv"
  op: "RealDiv"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/sub"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\000\020\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/unstack"
  op: "Unpack"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 3
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/ToFloat"
  op: "Cast"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/unstack:1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/add/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000168623835e-16
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/add"
  op: "Add"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/ToFloat"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/MatMul"
  op: "BatchMatMul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/truediv"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/truediv_1"
  op: "RealDiv"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/MatMul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10502100735902786
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10502100735902786
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Initializer/random_uniform/max"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Initializer/random_uniform/RandomUniform"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Initializer/random_uniform/mul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/transpose/perm"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/transpose"
  op: "Transpose"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/truediv_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/Reshape"
  op: "Reshape"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/transpose"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/transpose_1/perm"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/transpose_1"
  op: "Transpose"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/Reshape_1/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/Reshape_1"
  op: "Reshape"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/transpose_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/MatMul"
  op: "MatMul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/Reshape"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot"
  op: "Reshape"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/MatMul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/BiasAdd"
  op: "BiasAdd"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Relu"
  op: "Relu"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add"
  op: "Add"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/Rsqrt"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Relu"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/ReadVariableOp_1/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_2"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/ReadVariableOp_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/ReadVariableOp_2/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/ReadVariableOp_2/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/sub"
  op: "Sub"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/ReadVariableOp_2"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1"
  op: "Add"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09682458639144897
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09682458639144897
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Initializer/random_uniform/max"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Initializer/random_uniform/RandomUniform"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Initializer/random_uniform/mul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/transpose/perm"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/transpose"
  op: "Transpose"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/Reshape"
  op: "Reshape"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/transpose"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/transpose_1/perm"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/transpose_1"
  op: "Transpose"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/Reshape_1/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/transpose_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/MatMul"
  op: "MatMul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/Reshape"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot"
  op: "Reshape"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/MatMul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/BiasAdd"
  op: "BiasAdd"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Relu"
  op: "Relu"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add"
  op: "Add"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/Rsqrt"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Relu"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/ReadVariableOp_1/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_2"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/ReadVariableOp_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/ReadVariableOp_2/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/ReadVariableOp_2/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/sub"
  op: "Sub"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/ReadVariableOp_2"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1"
  op: "Add"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.19364917278289795
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.19364917278289795
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Initializer/random_uniform/max"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Initializer/random_uniform/RandomUniform"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Initializer/random_uniform"
  op: "Add"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Initializer/random_uniform/mul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/transpose/perm"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/transpose"
  op: "Transpose"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/Reshape"
  op: "Reshape"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/transpose"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/transpose_1/perm"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/transpose_1"
  op: "Transpose"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/Reshape_1/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/Reshape_1"
  op: "Reshape"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/transpose_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/MatMul"
  op: "MatMul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/Reshape"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot"
  op: "Reshape"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/MatMul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/BiasAdd"
  op: "BiasAdd"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tanh"
  op: "Tanh"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/Pad/paddings"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/Pad"
  op: "Pad"
  input: "vgg19_encoder_1/block3_conv1/Relu"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084301
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Initializer/random_uniform/max"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Initializer/random_uniform/mul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D"
  op: "Conv2D"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/Pad"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/BiasAdd"
  op: "BiasAdd"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Relu"
  op: "Relu"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/Pad_1/paddings"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/Pad_1"
  op: "Pad"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Relu"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/Pad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0589255653321743
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Initializer/random_uniform/max"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Initializer/random_uniform/RandomUniform"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Initializer/random_uniform/mul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D"
  op: "Conv2D"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/Pad_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/BiasAdd"
  op: "BiasAdd"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Relu"
  op: "Relu"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/Pad_2/paddings"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/Pad_2"
  op: "Pad"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Relu"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/Pad_2/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0833333358168602
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Initializer/random_uniform/max"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Initializer/random_uniform/RandomUniform"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Initializer/random_uniform"
  op: "Add"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Initializer/random_uniform/mul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D"
  op: "Conv2D"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/Pad_2"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/BiasAdd"
  op: "BiasAdd"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Relu"
  op: "Relu"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/strided_slice/stack"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/strided_slice/stack_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/strided_slice/stack_2"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/strided_slice"
  op: "StridedSlice"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/Shape"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/strided_slice/stack"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/strided_slice/stack_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/Reshape/shape/1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/Reshape/shape/2"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/Reshape/shape"
  op: "Pack"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/strided_slice"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/Reshape/shape/1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/Reshape"
  op: "Reshape"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Relu"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/moments/mean/reduction_indices"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/moments/mean"
  op: "Mean"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/Reshape"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/moments/StopGradient"
  op: "StopGradient"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/Reshape"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/moments/variance/reduction_indices"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/moments/variance"
  op: "Mean"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/moments/SquaredDifference"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batchnorm/add/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batchnorm/add"
  op: "Add"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/moments/variance"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batchnorm/mul"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/Reshape"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batchnorm/Neg"
  op: "Neg"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batchnorm/mul_1"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batchnorm/Neg"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batchnorm/add_1"
  op: "Add"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batchnorm/mul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/sub"
  op: "Sub"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/Reshape"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/truediv/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 128.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/truediv"
  op: "RealDiv"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/sub"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\000\020\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/unstack"
  op: "Unpack"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 3
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/ToFloat"
  op: "Cast"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/unstack:1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/add/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000168623835e-16
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/add"
  op: "Add"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/ToFloat"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/MatMul"
  op: "BatchMatMul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/truediv"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/truediv_1"
  op: "RealDiv"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/MatMul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10502100735902786
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10502100735902786
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Initializer/random_uniform/max"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Initializer/random_uniform/RandomUniform"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Initializer/random_uniform/mul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/transpose/perm"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/transpose"
  op: "Transpose"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/truediv_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/Reshape"
  op: "Reshape"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/transpose"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/transpose_1/perm"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/transpose_1"
  op: "Transpose"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/Reshape_1/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/Reshape_1"
  op: "Reshape"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/transpose_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/MatMul"
  op: "MatMul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/Reshape"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot"
  op: "Reshape"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/MatMul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/BiasAdd"
  op: "BiasAdd"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Relu"
  op: "Relu"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add"
  op: "Add"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/Rsqrt"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Relu"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/ReadVariableOp_1/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_2"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/ReadVariableOp_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/ReadVariableOp_2/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/ReadVariableOp_2/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/sub"
  op: "Sub"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/ReadVariableOp_2"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1"
  op: "Add"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09682458639144897
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09682458639144897
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Initializer/random_uniform/max"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Initializer/random_uniform/RandomUniform"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Initializer/random_uniform/mul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/transpose/perm"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/transpose"
  op: "Transpose"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/Reshape"
  op: "Reshape"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/transpose"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/transpose_1/perm"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/transpose_1"
  op: "Transpose"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/Reshape_1/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/transpose_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/MatMul"
  op: "MatMul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/Reshape"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot"
  op: "Reshape"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/MatMul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/BiasAdd"
  op: "BiasAdd"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Relu"
  op: "Relu"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add"
  op: "Add"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/Rsqrt"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Relu"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/ReadVariableOp_1/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_2"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/ReadVariableOp_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/ReadVariableOp_2/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/ReadVariableOp_2/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/sub"
  op: "Sub"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/ReadVariableOp_2"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1"
  op: "Add"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.19364917278289795
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.19364917278289795
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Initializer/random_uniform/max"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Initializer/random_uniform/RandomUniform"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Initializer/random_uniform"
  op: "Add"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Initializer/random_uniform/mul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/transpose/perm"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/transpose"
  op: "Transpose"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/Reshape"
  op: "Reshape"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/transpose"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/transpose_1/perm"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/transpose_1"
  op: "Transpose"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/Reshape_1/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/Reshape_1"
  op: "Reshape"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/transpose_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/MatMul"
  op: "MatMul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/Reshape"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot"
  op: "Reshape"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/MatMul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/BiasAdd"
  op: "BiasAdd"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tanh"
  op: "Tanh"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/einsum/transpose/perm"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/einsum/transpose"
  op: "Transpose"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tanh"
  input: "fast_style_transfer/transformation/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/einsum/transpose_1/perm"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/einsum/transpose_1"
  op: "Transpose"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tanh"
  input: "fast_style_transfer/transformation/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/einsum/MatMul"
  op: "BatchMatMul"
  input: "fast_style_transfer/transformation/einsum/transpose"
  input: "fast_style_transfer/transformation/einsum/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "fast_style_transfer/transformation/einsum/transpose_2/perm"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/einsum/transpose_2"
  op: "Transpose"
  input: "fast_style_transfer/transformation/einsum/MatMul"
  input: "fast_style_transfer/transformation/einsum/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/compressor/Pad/paddings"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/Pad"
  op: "Pad"
  input: "vgg19_encoder/block3_conv1/Relu"
  input: "fast_style_transfer/compressor/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03608439117670059
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Initializer/random_uniform/max"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Initializer/random_uniform/mul"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/compressor/compressor/conv1/kernel"
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/compressor/compressor/conv1/bias"
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/bias/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/bias"
  input: "fast_style_transfer/compressor/compressor/conv1/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/Conv2D/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/Conv2D"
  op: "Conv2D"
  input: "fast_style_transfer/compressor/Pad"
  input: "fast_style_transfer/compressor/compressor/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/compressor/compressor/conv1/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/BiasAdd"
  op: "BiasAdd"
  input: "fast_style_transfer/compressor/compressor/conv1/Conv2D"
  input: "fast_style_transfer/compressor/compressor/conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/Relu"
  op: "Relu"
  input: "fast_style_transfer/compressor/compressor/conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/compressor/Pad_1/paddings"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/Pad_1"
  op: "Pad"
  input: "fast_style_transfer/compressor/compressor/conv1/Relu"
  input: "fast_style_transfer/compressor/Pad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084301
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Initializer/random_uniform/max"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Initializer/random_uniform/RandomUniform"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Initializer/random_uniform/mul"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/compressor/compressor/conv2/kernel"
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/compressor/compressor/conv2/bias"
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/bias/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/bias"
  input: "fast_style_transfer/compressor/compressor/conv2/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/Conv2D/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/Conv2D"
  op: "Conv2D"
  input: "fast_style_transfer/compressor/Pad_1"
  input: "fast_style_transfer/compressor/compressor/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/compressor/compressor/conv2/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/BiasAdd"
  op: "BiasAdd"
  input: "fast_style_transfer/compressor/compressor/conv2/Conv2D"
  input: "fast_style_transfer/compressor/compressor/conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/Relu"
  op: "Relu"
  input: "fast_style_transfer/compressor/compressor/conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/compressor/Pad_2/paddings"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/Pad_2"
  op: "Pad"
  input: "fast_style_transfer/compressor/compressor/conv2/Relu"
  input: "fast_style_transfer/compressor/Pad_2/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06454972177743912
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06454972177743912
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Initializer/random_uniform/max"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Initializer/random_uniform/RandomUniform"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel/Initializer/random_uniform"
  op: "Add"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Initializer/random_uniform/mul"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/compressor/compressor/conv3/kernel"
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/compressor/compressor/conv3/bias"
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/bias/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/bias"
  input: "fast_style_transfer/compressor/compressor/conv3/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/Conv2D/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/Conv2D"
  op: "Conv2D"
  input: "fast_style_transfer/compressor/Pad_2"
  input: "fast_style_transfer/compressor/compressor/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/compressor/compressor/conv3/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/BiasAdd"
  op: "BiasAdd"
  input: "fast_style_transfer/compressor/compressor/conv3/Conv2D"
  input: "fast_style_transfer/compressor/compressor/conv3/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/Relu"
  op: "Relu"
  input: "fast_style_transfer/compressor/compressor/conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/compressor/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/strided_slice/stack"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/strided_slice/stack_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/strided_slice/stack_2"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/strided_slice"
  op: "StridedSlice"
  input: "fast_style_transfer/compressor/Shape"
  input: "fast_style_transfer/compressor/strided_slice/stack"
  input: "fast_style_transfer/compressor/strided_slice/stack_1"
  input: "fast_style_transfer/compressor/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "fast_style_transfer/compressor/Reshape/shape/1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/Reshape/shape/2"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/Reshape/shape"
  op: "Pack"
  input: "fast_style_transfer/compressor/strided_slice"
  input: "fast_style_transfer/compressor/Reshape/shape/1"
  input: "fast_style_transfer/compressor/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "fast_style_transfer/compressor/Reshape"
  op: "Reshape"
  input: "fast_style_transfer/compressor/compressor/conv3/Relu"
  input: "fast_style_transfer/compressor/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/Pad/paddings"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/Pad"
  op: "Pad"
  input: "vgg19_encoder_1/block3_conv1/Relu"
  input: "fast_style_transfer/compressor_1/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/compressor/conv1/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/compressor/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/compressor/conv1/Conv2D"
  op: "Conv2D"
  input: "fast_style_transfer/compressor_1/Pad"
  input: "fast_style_transfer/compressor_1/compressor/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/compressor/conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/compressor/conv1/BiasAdd"
  op: "BiasAdd"
  input: "fast_style_transfer/compressor_1/compressor/conv1/Conv2D"
  input: "fast_style_transfer/compressor_1/compressor/conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/compressor/conv1/Relu"
  op: "Relu"
  input: "fast_style_transfer/compressor_1/compressor/conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/Pad_1/paddings"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/Pad_1"
  op: "Pad"
  input: "fast_style_transfer/compressor_1/compressor/conv1/Relu"
  input: "fast_style_transfer/compressor_1/Pad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/compressor/conv2/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/compressor/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/compressor/conv2/Conv2D"
  op: "Conv2D"
  input: "fast_style_transfer/compressor_1/Pad_1"
  input: "fast_style_transfer/compressor_1/compressor/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/compressor/conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/compressor/conv2/BiasAdd"
  op: "BiasAdd"
  input: "fast_style_transfer/compressor_1/compressor/conv2/Conv2D"
  input: "fast_style_transfer/compressor_1/compressor/conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/compressor/conv2/Relu"
  op: "Relu"
  input: "fast_style_transfer/compressor_1/compressor/conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/Pad_2/paddings"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/Pad_2"
  op: "Pad"
  input: "fast_style_transfer/compressor_1/compressor/conv2/Relu"
  input: "fast_style_transfer/compressor_1/Pad_2/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/compressor/conv3/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/compressor/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/compressor/conv3/Conv2D"
  op: "Conv2D"
  input: "fast_style_transfer/compressor_1/Pad_2"
  input: "fast_style_transfer/compressor_1/compressor/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/compressor/conv3/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/compressor/conv3/BiasAdd"
  op: "BiasAdd"
  input: "fast_style_transfer/compressor_1/compressor/conv3/Conv2D"
  input: "fast_style_transfer/compressor_1/compressor/conv3/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/compressor/conv3/Relu"
  op: "Relu"
  input: "fast_style_transfer/compressor_1/compressor/conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/strided_slice/stack"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/strided_slice/stack_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/strided_slice/stack_2"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/strided_slice"
  op: "StridedSlice"
  input: "fast_style_transfer/compressor_1/Shape"
  input: "fast_style_transfer/compressor_1/strided_slice/stack"
  input: "fast_style_transfer/compressor_1/strided_slice/stack_1"
  input: "fast_style_transfer/compressor_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/Reshape/shape/1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/Reshape/shape/2"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/Reshape/shape"
  op: "Pack"
  input: "fast_style_transfer/compressor_1/strided_slice"
  input: "fast_style_transfer/compressor_1/Reshape/shape/1"
  input: "fast_style_transfer/compressor_1/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "fast_style_transfer/compressor_1/Reshape"
  op: "Reshape"
  input: "fast_style_transfer/compressor_1/compressor/conv3/Relu"
  input: "fast_style_transfer/compressor_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/moments/mean/reduction_indices"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fast_style_transfer/moments/mean"
  op: "Mean"
  input: "fast_style_transfer/compressor/Reshape"
  input: "fast_style_transfer/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fast_style_transfer/moments/StopGradient"
  op: "StopGradient"
  input: "fast_style_transfer/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "fast_style_transfer/compressor/Reshape"
  input: "fast_style_transfer/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/moments/variance/reduction_indices"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fast_style_transfer/moments/variance"
  op: "Mean"
  input: "fast_style_transfer/moments/SquaredDifference"
  input: "fast_style_transfer/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fast_style_transfer/sub"
  op: "Sub"
  input: "fast_style_transfer/compressor/Reshape"
  input: "fast_style_transfer/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/MatMul"
  op: "BatchMatMul"
  input: "fast_style_transfer/sub"
  input: "fast_style_transfer/transformation/einsum/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "fast_style_transfer/moments_1/mean/reduction_indices"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fast_style_transfer/moments_1/mean"
  op: "Mean"
  input: "fast_style_transfer/compressor_1/Reshape"
  input: "fast_style_transfer/moments_1/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fast_style_transfer/moments_1/StopGradient"
  op: "StopGradient"
  input: "fast_style_transfer/moments_1/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/moments_1/SquaredDifference"
  op: "SquaredDifference"
  input: "fast_style_transfer/compressor_1/Reshape"
  input: "fast_style_transfer/moments_1/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/moments_1/variance/reduction_indices"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fast_style_transfer/moments_1/variance"
  op: "Mean"
  input: "fast_style_transfer/moments_1/SquaredDifference"
  input: "fast_style_transfer/moments_1/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fast_style_transfer/add"
  op: "Add"
  input: "fast_style_transfer/MatMul"
  input: "fast_style_transfer/moments_1/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\000\020\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/strided_slice/stack"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "fast_style_transfer/strided_slice/stack_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fast_style_transfer/strided_slice/stack_2"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fast_style_transfer/strided_slice"
  op: "StridedSlice"
  input: "fast_style_transfer/Shape"
  input: "fast_style_transfer/strided_slice/stack"
  input: "fast_style_transfer/strided_slice/stack_1"
  input: "fast_style_transfer/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "fast_style_transfer/strided_slice_1/stack"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fast_style_transfer/strided_slice_1/stack_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "fast_style_transfer/strided_slice_1/stack_2"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fast_style_transfer/strided_slice_1"
  op: "StridedSlice"
  input: "Shape"
  input: "fast_style_transfer/strided_slice_1/stack"
  input: "fast_style_transfer/strided_slice_1/stack_1"
  input: "fast_style_transfer/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "fast_style_transfer/truediv/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "fast_style_transfer/truediv/Cast"
  op: "Cast"
  input: "fast_style_transfer/strided_slice_1"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/truediv/Cast_1"
  op: "Cast"
  input: "fast_style_transfer/truediv/y"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/truediv"
  op: "RealDiv"
  input: "fast_style_transfer/truediv/Cast"
  input: "fast_style_transfer/truediv/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/strided_slice_2/stack"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "fast_style_transfer/strided_slice_2/stack_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "fast_style_transfer/strided_slice_2/stack_2"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fast_style_transfer/strided_slice_2"
  op: "StridedSlice"
  input: "Shape"
  input: "fast_style_transfer/strided_slice_2/stack"
  input: "fast_style_transfer/strided_slice_2/stack_1"
  input: "fast_style_transfer/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "fast_style_transfer/truediv_1/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "fast_style_transfer/truediv_1/Cast"
  op: "Cast"
  input: "fast_style_transfer/strided_slice_2"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/truediv_1/Cast_1"
  op: "Cast"
  input: "fast_style_transfer/truediv_1/y"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/truediv_1"
  op: "RealDiv"
  input: "fast_style_transfer/truediv_1/Cast"
  input: "fast_style_transfer/truediv_1/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/Reshape/Cast"
  op: "Cast"
  input: "fast_style_transfer/truediv"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/Reshape/Cast_1"
  op: "Cast"
  input: "fast_style_transfer/truediv_1"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/Reshape/shape/0"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/Reshape/shape/3"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/Reshape/shape"
  op: "Pack"
  input: "fast_style_transfer/uncompressor/Reshape/shape/0"
  input: "fast_style_transfer/uncompressor/Reshape/Cast"
  input: "fast_style_transfer/uncompressor/Reshape/Cast_1"
  input: "fast_style_transfer/uncompressor/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/Reshape"
  op: "Reshape"
  input: "fast_style_transfer/add"
  input: "fast_style_transfer/uncompressor/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/Pad/paddings"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/Pad"
  op: "Pad"
  input: "fast_style_transfer/uncompressor/Reshape"
  input: "fast_style_transfer/uncompressor/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0833333358168602
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Initializer/random_uniform/max"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Initializer/random_uniform/mul"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/uncompressor/uncompressor/conv1/bias"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D"
  op: "Conv2D"
  input: "fast_style_transfer/uncompressor/Pad"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/BiasAdd"
  op: "BiasAdd"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/Relu"
  op: "Relu"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/Pad_1/paddings"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/Pad_1"
  op: "Pad"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/Relu"
  input: "fast_style_transfer/uncompressor/Pad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0589255653321743
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Initializer/random_uniform/max"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Initializer/random_uniform/RandomUniform"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Initializer/random_uniform/mul"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/uncompressor/uncompressor/conv2/bias"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D"
  op: "Conv2D"
  input: "fast_style_transfer/uncompressor/Pad_1"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/BiasAdd"
  op: "BiasAdd"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/Relu"
  op: "Relu"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/Pad_2/paddings"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/Pad_2"
  op: "Pad"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/Relu"
  input: "fast_style_transfer/uncompressor/Pad_2/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084301
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Initializer/random_uniform/max"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Initializer/random_uniform/RandomUniform"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Initializer/random_uniform"
  op: "Add"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Initializer/random_uniform/mul"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/uncompressor/uncompressor/conv3/bias"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D"
  op: "Conv2D"
  input: "fast_style_transfer/uncompressor/Pad_2"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/BiasAdd"
  op: "BiasAdd"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/Relu"
  op: "Relu"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_decoder/Pad/paddings"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_decoder/Pad"
  op: "Pad"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/Relu"
  input: "vgg19_decoder/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084301
      }
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Initializer/random_uniform/max"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Initializer/random_uniform/RandomUniform"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel/Initializer/random_uniform"
  op: "Add"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Initializer/random_uniform/mul"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block3_conv1_decoder/kernel"
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block3_conv1_decoder/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/kernel"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block3_conv1_decoder/bias"
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block3_conv1_decoder/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/bias/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/bias"
  input: "vgg19_decoder/block3_conv1_decoder/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/Conv2D/ReadVariableOp/Enter"
  op: "Enter"
  input: "vgg19_decoder/block3_conv1_decoder/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/Conv2D"
  op: "Conv2D"
  input: "vgg19_decoder/Pad"
  input: "vgg19_decoder/block3_conv1_decoder/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "vgg19_decoder/block3_conv1_decoder/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/BiasAdd"
  op: "BiasAdd"
  input: "vgg19_decoder/block3_conv1_decoder/Conv2D"
  input: "vgg19_decoder/block3_conv1_decoder/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/Relu"
  op: "Relu"
  input: "vgg19_decoder/block3_conv1_decoder/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_decoder/nearest_upsampling/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000\001\000\000\000@\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_decoder/nearest_upsampling/Reshape"
  op: "Reshape"
  input: "vgg19_decoder/block3_conv1_decoder/Relu"
  input: "vgg19_decoder/nearest_upsampling/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_decoder/nearest_upsampling/ones"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "vgg19_decoder/nearest_upsampling/mul"
  op: "Mul"
  input: "vgg19_decoder/nearest_upsampling/Reshape"
  input: "vgg19_decoder/nearest_upsampling/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 2
          }
          dim {
            size: 64
          }
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_decoder/nearest_upsampling/Reshape_1/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_decoder/nearest_upsampling/Reshape_1"
  op: "Reshape"
  input: "vgg19_decoder/nearest_upsampling/mul"
  input: "vgg19_decoder/nearest_upsampling/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_decoder/Pad_1/paddings"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_decoder/Pad_1"
  op: "Pad"
  input: "vgg19_decoder/nearest_upsampling/Reshape_1"
  input: "vgg19_decoder/Pad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 130
          }
          dim {
            size: 130
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05103103816509247
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Initializer/random_uniform/max"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Initializer/random_uniform/RandomUniform"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Initializer/random_uniform"
  op: "Add"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Initializer/random_uniform/mul"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block2_conv2_transpose_decoder/kernel"
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block2_conv2_transpose_decoder/bias"
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/Conv2D/ReadVariableOp/Enter"
  op: "Enter"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/Conv2D"
  op: "Conv2D"
  input: "vgg19_decoder/Pad_1"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/BiasAdd"
  op: "BiasAdd"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/Conv2D"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/Relu"
  op: "Relu"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_decoder/Pad_2/paddings"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_decoder/Pad_2"
  op: "Pad"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/Relu"
  input: "vgg19_decoder/Pad_2/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 130
          }
          dim {
            size: 130
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0589255653321743
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Initializer/random_uniform/max"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Initializer/random_uniform/RandomUniform"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel/Initializer/random_uniform"
  op: "Add"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Initializer/random_uniform/mul"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block2_conv1_decoder/kernel"
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv1_decoder/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/kernel"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block2_conv1_decoder/bias"
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv1_decoder/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/bias/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/bias"
  input: "vgg19_decoder/block2_conv1_decoder/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/Conv2D/ReadVariableOp/Enter"
  op: "Enter"
  input: "vgg19_decoder/block2_conv1_decoder/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/Conv2D"
  op: "Conv2D"
  input: "vgg19_decoder/Pad_2"
  input: "vgg19_decoder/block2_conv1_decoder/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "vgg19_decoder/block2_conv1_decoder/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/BiasAdd"
  op: "BiasAdd"
  input: "vgg19_decoder/block2_conv1_decoder/Conv2D"
  input: "vgg19_decoder/block2_conv1_decoder/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/Relu"
  op: "Relu"
  input: "vgg19_decoder/block2_conv1_decoder/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_decoder/nearest_upsampling_1/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\001\000\000\000\200\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_decoder/nearest_upsampling_1/Reshape"
  op: "Reshape"
  input: "vgg19_decoder/block2_conv1_decoder/Relu"
  input: "vgg19_decoder/nearest_upsampling_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_decoder/nearest_upsampling_1/ones"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "vgg19_decoder/nearest_upsampling_1/mul"
  op: "Mul"
  input: "vgg19_decoder/nearest_upsampling_1/Reshape"
  input: "vgg19_decoder/nearest_upsampling_1/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 2
          }
          dim {
            size: 128
          }
          dim {
            size: 2
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_decoder/nearest_upsampling_1/Reshape_1/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_decoder/nearest_upsampling_1/Reshape_1"
  op: "Reshape"
  input: "vgg19_decoder/nearest_upsampling_1/mul"
  input: "vgg19_decoder/nearest_upsampling_1/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_decoder/Pad_3/paddings"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_decoder/Pad_3"
  op: "Pad"
  input: "vgg19_decoder/nearest_upsampling_1/Reshape_1"
  input: "vgg19_decoder/Pad_3/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 258
          }
          dim {
            size: 258
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Initializer/random_uniform/max"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Initializer/random_uniform/RandomUniform"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Initializer/random_uniform"
  op: "Add"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Initializer/random_uniform/mul"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block1_conv2_transpose_decoder/kernel"
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block1_conv2_transpose_decoder/bias"
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/Conv2D/ReadVariableOp/Enter"
  op: "Enter"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/Conv2D"
  op: "Conv2D"
  input: "vgg19_decoder/Pad_3"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/BiasAdd"
  op: "BiasAdd"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/Conv2D"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/Relu"
  op: "Relu"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.29925280809402466
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.29925280809402466
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Initializer/random_uniform/max"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Initializer/random_uniform/RandomUniform"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/kernel/Initializer/random_uniform"
  op: "Add"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Initializer/random_uniform/mul"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block1_conv1_decoder/kernel"
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv1_decoder/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/kernel/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/kernel"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block1_conv1_decoder/bias"
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv1_decoder/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/bias/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/bias"
  input: "vgg19_decoder/block1_conv1_decoder/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/Conv2D/ReadVariableOp/Enter"
  op: "Enter"
  input: "vgg19_decoder/block1_conv1_decoder/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/Conv2D"
  op: "Conv2D"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/Relu"
  input: "vgg19_decoder/block1_conv1_decoder/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "vgg19_decoder/block1_conv1_decoder/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/BiasAdd"
  op: "BiasAdd"
  input: "vgg19_decoder/block1_conv1_decoder/Conv2D"
  input: "vgg19_decoder/block1_conv1_decoder/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/Tanh"
  op: "Tanh"
  input: "vgg19_decoder/block1_conv1_decoder/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_decoder/mul/x"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 150.0
      }
    }
  }
}
node {
  name: "vgg19_decoder/mul"
  op: "Mul"
  input: "vgg19_decoder/mul/x"
  input: "vgg19_decoder/block1_conv1_decoder/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_encoder_2/block1_conv1/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_encoder_2/block1_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block1_conv1/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder_2/block1_conv1/Conv2D"
  op: "Conv2D"
  input: "vgg19_decoder/mul"
  input: "vgg19_encoder_2/block1_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vgg19_encoder_2/block1_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block1_conv1/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder_2/block1_conv1/BiasAdd"
  op: "BiasAdd"
  input: "vgg19_encoder_2/block1_conv1/Conv2D"
  input: "vgg19_encoder_2/block1_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vgg19_encoder_2/block1_conv1/Relu"
  op: "Relu"
  input: "vgg19_encoder_2/block1_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_encoder_2/block1_conv2/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_encoder_2/block1_conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block1_conv2/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder_2/block1_conv2/Conv2D"
  op: "Conv2D"
  input: "vgg19_encoder_2/block1_conv1/Relu"
  input: "vgg19_encoder_2/block1_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vgg19_encoder_2/block1_conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block1_conv2/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder_2/block1_conv2/BiasAdd"
  op: "BiasAdd"
  input: "vgg19_encoder_2/block1_conv2/Conv2D"
  input: "vgg19_encoder_2/block1_conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vgg19_encoder_2/block1_conv2/Relu"
  op: "Relu"
  input: "vgg19_encoder_2/block1_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_encoder_2/block1_pool/MaxPool"
  op: "MaxPool"
  input: "vgg19_encoder_2/block1_conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "vgg19_encoder_2/block2_conv1/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_encoder_2/block2_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block2_conv1/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder_2/block2_conv1/Conv2D"
  op: "Conv2D"
  input: "vgg19_encoder_2/block1_pool/MaxPool"
  input: "vgg19_encoder_2/block2_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vgg19_encoder_2/block2_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block2_conv1/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder_2/block2_conv1/BiasAdd"
  op: "BiasAdd"
  input: "vgg19_encoder_2/block2_conv1/Conv2D"
  input: "vgg19_encoder_2/block2_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vgg19_encoder_2/block2_conv1/Relu"
  op: "Relu"
  input: "vgg19_encoder_2/block2_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_encoder_2/block2_conv2/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_encoder_2/block2_conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block2_conv2/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder_2/block2_conv2/Conv2D"
  op: "Conv2D"
  input: "vgg19_encoder_2/block2_conv1/Relu"
  input: "vgg19_encoder_2/block2_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vgg19_encoder_2/block2_conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block2_conv2/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder_2/block2_conv2/BiasAdd"
  op: "BiasAdd"
  input: "vgg19_encoder_2/block2_conv2/Conv2D"
  input: "vgg19_encoder_2/block2_conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vgg19_encoder_2/block2_conv2/Relu"
  op: "Relu"
  input: "vgg19_encoder_2/block2_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "vgg19_encoder_2/block2_pool/MaxPool"
  op: "MaxPool"
  input: "vgg19_encoder_2/block2_conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "vgg19_encoder_2/block3_conv1/dilation_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_encoder_2/block3_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block3_conv1/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder_2/block3_conv1/Conv2D"
  op: "Conv2D"
  input: "vgg19_encoder_2/block2_pool/MaxPool"
  input: "vgg19_encoder_2/block3_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vgg19_encoder_2/block3_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_encoder/block3_conv1/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_encoder_2/block3_conv1/BiasAdd"
  op: "BiasAdd"
  input: "vgg19_encoder_2/block3_conv1/Conv2D"
  input: "vgg19_encoder_2/block3_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vgg19_encoder_2/block3_conv1/Relu"
  op: "Relu"
  input: "vgg19_encoder_2/block3_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "sub"
  op: "Sub"
  input: "vgg19_encoder/block3_conv1/Relu"
  input: "vgg19_encoder_2/block3_conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Square"
  op: "Square"
  input: "sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "Square"
  input: "Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul/x"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "mul/x"
  input: "Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "unstack"
  op: "Unpack"
  input: "Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 4
    }
  }
}
node {
  name: "mul_1"
  op: "Mul"
  input: "unstack:1"
  input: "unstack:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "ToFloat"
  op: "Cast"
  input: "mul_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "add_1/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000168623835e-16
      }
    }
  }
}
node {
  name: "add_1"
  op: "Add"
  input: "ToFloat"
  input: "add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "mul_2"
  op: "Mul"
  input: "unstack:1"
  input: "unstack:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "stack"
  op: "Pack"
  input: "unstack"
  input: "mul_2"
  input: "unstack:3"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "vgg19_encoder_1/block1_conv1/Relu"
  input: "stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 65536
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "MatMul"
  op: "BatchMatMul"
  input: "Reshape"
  input: "Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "truediv"
  op: "RealDiv"
  input: "MatMul"
  input: "add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "mul_3/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_3"
  op: "Mul"
  input: "truediv"
  input: "mul_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Shape_2"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "unstack_1"
  op: "Unpack"
  input: "Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 4
    }
  }
}
node {
  name: "mul_4"
  op: "Mul"
  input: "unstack_1:1"
  input: "unstack_1:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "ToFloat_1"
  op: "Cast"
  input: "mul_4"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "add_2/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000168623835e-16
      }
    }
  }
}
node {
  name: "add_2"
  op: "Add"
  input: "ToFloat_1"
  input: "add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "mul_5"
  op: "Mul"
  input: "unstack_1:1"
  input: "unstack_1:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "stack_1"
  op: "Pack"
  input: "unstack_1"
  input: "mul_5"
  input: "unstack_1:3"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "vgg19_encoder_2/block1_conv1/Relu"
  input: "stack_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 65536
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "MatMul_1"
  op: "BatchMatMul"
  input: "Reshape_1"
  input: "Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "truediv_1"
  op: "RealDiv"
  input: "MatMul_1"
  input: "add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "mul_6/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_6"
  op: "Mul"
  input: "truediv_1"
  input: "mul_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Shape_3"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice/stack"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice/stack_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice/stack_2"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "Shape_3"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_1/stack"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_2"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_1"
  op: "StridedSlice"
  input: "Shape_3"
  input: "strided_slice_1/stack"
  input: "strided_slice_1/stack_1"
  input: "strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "mul_7"
  op: "Mul"
  input: "strided_slice"
  input: "strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "mul_7"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "sub_1"
  op: "Sub"
  input: "mul_3"
  input: "mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Square_1"
  op: "Square"
  input: "sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Sum"
  op: "Sum"
  input: "Square_1"
  input: "Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "truediv_2"
  op: "RealDiv"
  input: "Sum"
  input: "Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "mul_8/x"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1428571492433548
      }
    }
  }
}
node {
  name: "mul_8"
  op: "Mul"
  input: "mul_8/x"
  input: "truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Shape_4"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "unstack_2"
  op: "Unpack"
  input: "Shape_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 4
    }
  }
}
node {
  name: "mul_9"
  op: "Mul"
  input: "unstack_2:1"
  input: "unstack_2:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "ToFloat_2"
  op: "Cast"
  input: "mul_9"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "add_3/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000168623835e-16
      }
    }
  }
}
node {
  name: "add_3"
  op: "Add"
  input: "ToFloat_2"
  input: "add_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "mul_10"
  op: "Mul"
  input: "unstack_2:1"
  input: "unstack_2:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "stack_2"
  op: "Pack"
  input: "unstack_2"
  input: "mul_10"
  input: "unstack_2:3"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_2"
  op: "Reshape"
  input: "vgg19_encoder_1/block2_conv1/Relu"
  input: "stack_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16384
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "MatMul_2"
  op: "BatchMatMul"
  input: "Reshape_2"
  input: "Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "truediv_3"
  op: "RealDiv"
  input: "MatMul_2"
  input: "add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "mul_11/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_11"
  op: "Mul"
  input: "truediv_3"
  input: "mul_11/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Shape_5"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "unstack_3"
  op: "Unpack"
  input: "Shape_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 4
    }
  }
}
node {
  name: "mul_12"
  op: "Mul"
  input: "unstack_3:1"
  input: "unstack_3:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "ToFloat_3"
  op: "Cast"
  input: "mul_12"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "add_4/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000168623835e-16
      }
    }
  }
}
node {
  name: "add_4"
  op: "Add"
  input: "ToFloat_3"
  input: "add_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "mul_13"
  op: "Mul"
  input: "unstack_3:1"
  input: "unstack_3:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "stack_3"
  op: "Pack"
  input: "unstack_3"
  input: "mul_13"
  input: "unstack_3:3"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_3"
  op: "Reshape"
  input: "vgg19_encoder_2/block2_conv1/Relu"
  input: "stack_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16384
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "MatMul_3"
  op: "BatchMatMul"
  input: "Reshape_3"
  input: "Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "truediv_4"
  op: "RealDiv"
  input: "MatMul_3"
  input: "add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "mul_14/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_14"
  op: "Mul"
  input: "truediv_4"
  input: "mul_14/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Shape_6"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_2/stack"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice_2/stack_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_2/stack_2"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_2"
  op: "StridedSlice"
  input: "Shape_6"
  input: "strided_slice_2/stack"
  input: "strided_slice_2/stack_1"
  input: "strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_3/stack"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_3/stack_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "strided_slice_3/stack_2"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_3"
  op: "StridedSlice"
  input: "Shape_6"
  input: "strided_slice_3/stack"
  input: "strided_slice_3/stack_1"
  input: "strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "mul_15"
  op: "Mul"
  input: "strided_slice_2"
  input: "strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Cast_1"
  op: "Cast"
  input: "mul_15"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "sub_2"
  op: "Sub"
  input: "mul_11"
  input: "mul_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Square_2"
  op: "Square"
  input: "sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Sum_1"
  op: "Sum"
  input: "Square_2"
  input: "Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "truediv_5"
  op: "RealDiv"
  input: "Sum_1"
  input: "Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "mul_16/x"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1428571492433548
      }
    }
  }
}
node {
  name: "mul_16"
  op: "Mul"
  input: "mul_16/x"
  input: "truediv_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Shape_7"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "unstack_4"
  op: "Unpack"
  input: "Shape_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 4
    }
  }
}
node {
  name: "mul_17"
  op: "Mul"
  input: "unstack_4:1"
  input: "unstack_4:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "ToFloat_4"
  op: "Cast"
  input: "mul_17"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "add_5/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000168623835e-16
      }
    }
  }
}
node {
  name: "add_5"
  op: "Add"
  input: "ToFloat_4"
  input: "add_5/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "mul_18"
  op: "Mul"
  input: "unstack_4:1"
  input: "unstack_4:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "stack_4"
  op: "Pack"
  input: "unstack_4"
  input: "mul_18"
  input: "unstack_4:3"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_4"
  op: "Reshape"
  input: "vgg19_encoder_1/block3_conv1/Relu"
  input: "stack_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "MatMul_4"
  op: "BatchMatMul"
  input: "Reshape_4"
  input: "Reshape_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "truediv_6"
  op: "RealDiv"
  input: "MatMul_4"
  input: "add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "mul_19/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_19"
  op: "Mul"
  input: "truediv_6"
  input: "mul_19/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Shape_8"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "unstack_5"
  op: "Unpack"
  input: "Shape_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 4
    }
  }
}
node {
  name: "mul_20"
  op: "Mul"
  input: "unstack_5:1"
  input: "unstack_5:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "ToFloat_5"
  op: "Cast"
  input: "mul_20"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "add_6/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000168623835e-16
      }
    }
  }
}
node {
  name: "add_6"
  op: "Add"
  input: "ToFloat_5"
  input: "add_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "mul_21"
  op: "Mul"
  input: "unstack_5:1"
  input: "unstack_5:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "stack_5"
  op: "Pack"
  input: "unstack_5"
  input: "mul_21"
  input: "unstack_5:3"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_5"
  op: "Reshape"
  input: "vgg19_encoder_2/block3_conv1/Relu"
  input: "stack_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "MatMul_5"
  op: "BatchMatMul"
  input: "Reshape_5"
  input: "Reshape_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "truediv_7"
  op: "RealDiv"
  input: "MatMul_5"
  input: "add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "mul_22/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_22"
  op: "Mul"
  input: "truediv_7"
  input: "mul_22/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Shape_9"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_4/stack"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice_4/stack_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_4/stack_2"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_4"
  op: "StridedSlice"
  input: "Shape_9"
  input: "strided_slice_4/stack"
  input: "strided_slice_4/stack_1"
  input: "strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_5/stack"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_5/stack_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "strided_slice_5/stack_2"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_5"
  op: "StridedSlice"
  input: "Shape_9"
  input: "strided_slice_5/stack"
  input: "strided_slice_5/stack_1"
  input: "strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "mul_23"
  op: "Mul"
  input: "strided_slice_4"
  input: "strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Cast_2"
  op: "Cast"
  input: "mul_23"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "sub_3"
  op: "Sub"
  input: "mul_19"
  input: "mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Square_3"
  op: "Square"
  input: "sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Const_5"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Sum_2"
  op: "Sum"
  input: "Square_3"
  input: "Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "truediv_8"
  op: "RealDiv"
  input: "Sum_2"
  input: "Cast_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "mul_24/x"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.7142857313156128
      }
    }
  }
}
node {
  name: "mul_24"
  op: "Mul"
  input: "mul_24/x"
  input: "truediv_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Rank/packed"
  op: "Pack"
  input: "mul_8"
  input: "mul_16"
  input: "mul_24"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Rank"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "range/start"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "range/delta"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "range"
  op: "Range"
  input: "range/start"
  input: "Rank"
  input: "range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Sum_3/input"
  op: "Pack"
  input: "mul_8"
  input: "mul_16"
  input: "mul_24"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Sum_3"
  op: "Sum"
  input: "Sum_3/input"
  input: "range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_25/x"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 15.0
      }
    }
  }
}
node {
  name: "mul_25"
  op: "Mul"
  input: "mul_25/x"
  input: "Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "total_variation/strided_slice/stack"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "total_variation/strided_slice/stack_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "total_variation/strided_slice/stack_2"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "total_variation/strided_slice"
  op: "StridedSlice"
  input: "vgg19_decoder/mul"
  input: "total_variation/strided_slice/stack"
  input: "total_variation/strided_slice/stack_1"
  input: "total_variation/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 255
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "total_variation/strided_slice_1/stack"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "total_variation/strided_slice_1/stack_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "total_variation/strided_slice_1/stack_2"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "total_variation/strided_slice_1"
  op: "StridedSlice"
  input: "vgg19_decoder/mul"
  input: "total_variation/strided_slice_1/stack"
  input: "total_variation/strided_slice_1/stack_1"
  input: "total_variation/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 255
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "total_variation/sub"
  op: "Sub"
  input: "total_variation/strided_slice"
  input: "total_variation/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 255
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "total_variation/strided_slice_2/stack"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "total_variation/strided_slice_2/stack_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "total_variation/strided_slice_2/stack_2"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "total_variation/strided_slice_2"
  op: "StridedSlice"
  input: "vgg19_decoder/mul"
  input: "total_variation/strided_slice_2/stack"
  input: "total_variation/strided_slice_2/stack_1"
  input: "total_variation/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 255
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "total_variation/strided_slice_3/stack"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "total_variation/strided_slice_3/stack_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\377\377\377\377\000\000\000\000"
      }
    }
  }
}
node {
  name: "total_variation/strided_slice_3/stack_2"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "total_variation/strided_slice_3"
  op: "StridedSlice"
  input: "vgg19_decoder/mul"
  input: "total_variation/strided_slice_3/stack"
  input: "total_variation/strided_slice_3/stack_1"
  input: "total_variation/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 255
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "total_variation/sub_1"
  op: "Sub"
  input: "total_variation/strided_slice_2"
  input: "total_variation/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 255
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "total_variation/Abs"
  op: "Abs"
  input: "total_variation/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 255
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "total_variation/Sum/reduction_indices"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "total_variation/Sum"
  op: "Sum"
  input: "total_variation/Abs"
  input: "total_variation/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "total_variation/Abs_1"
  op: "Abs"
  input: "total_variation/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 255
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "total_variation/Sum_1/reduction_indices"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "total_variation/Sum_1"
  op: "Sum"
  input: "total_variation/Abs_1"
  input: "total_variation/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "total_variation/add"
  op: "Add"
  input: "total_variation/Sum"
  input: "total_variation/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Const_6"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_1"
  op: "Mean"
  input: "total_variation/add"
  input: "Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_26/x"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_26"
  op: "Mul"
  input: "mul_26/x"
  input: "Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "add_7"
  op: "Add"
  input: "mul"
  input: "mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "add_8"
  op: "Add"
  input: "add_7"
  input: "mul_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "NaturalExpDecay/learning_rate"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "NaturalExpDecay/Cast/x"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 200000.0
      }
    }
  }
}
node {
  name: "NaturalExpDecay/Cast_1/x"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "NaturalExpDecay/Cast_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "NaturalExpDecay/Cast_2/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "NaturalExpDecay/Cast_2/ReadVariableOp/Enter"
  op: "Enter"
  input: "global_step"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "NaturalExpDecay/Cast_2"
  op: "Cast"
  input: "NaturalExpDecay/Cast_2/ReadVariableOp"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "NaturalExpDecay/truediv"
  op: "RealDiv"
  input: "NaturalExpDecay/Cast_2"
  input: "NaturalExpDecay/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "NaturalExpDecay/Floor"
  op: "Floor"
  input: "NaturalExpDecay/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "NaturalExpDecay/Neg"
  op: "Neg"
  input: "NaturalExpDecay/Cast_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "NaturalExpDecay/Mul"
  op: "Mul"
  input: "NaturalExpDecay/Neg"
  input: "NaturalExpDecay/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "NaturalExpDecay/Exp"
  op: "Exp"
  input: "NaturalExpDecay/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "NaturalExpDecay"
  op: "Mul"
  input: "NaturalExpDecay/learning_rate"
  input: "NaturalExpDecay/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "mul_27/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "mul_27"
  op: "Mul"
  input: "add_8"
  input: "mul_27/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_27_grad/Mul"
  op: "Mul"
  input: "gradients/Fill"
  input: "mul_27/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_27_grad/Mul_1"
  op: "Mul"
  input: "gradients/Fill"
  input: "add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_27_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_27_grad/Mul"
  input: "^gradients/mul_27_grad/Mul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_27_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_27_grad/Mul"
  input: "^gradients/mul_27_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_27_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_27_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_27_grad/Mul_1"
  input: "^gradients/mul_27_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_27_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/add_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_27_grad/tuple/control_dependency"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/add_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_27_grad/tuple/control_dependency"
  input: "^gradients/add_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_27_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/add_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_27_grad/tuple/control_dependency"
  input: "^gradients/add_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_27_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/add_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_8_grad/tuple/control_dependency"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/add_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_8_grad/tuple/control_dependency"
  input: "^gradients/add_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_27_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/add_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_8_grad/tuple/control_dependency"
  input: "^gradients/add_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_27_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_26_grad/Mul"
  op: "Mul"
  input: "gradients/add_8_grad/tuple/control_dependency_1"
  input: "Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_26_grad/Mul_1"
  op: "Mul"
  input: "gradients/add_8_grad/tuple/control_dependency_1"
  input: "mul_26/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_26_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_26_grad/Mul"
  input: "^gradients/mul_26_grad/Mul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_26_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_26_grad/Mul"
  input: "^gradients/mul_26_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_26_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_26_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_26_grad/Mul_1"
  input: "^gradients/mul_26_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_26_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_grad/Mul"
  op: "Mul"
  input: "gradients/add_7_grad/tuple/control_dependency"
  input: "Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/add_7_grad/tuple/control_dependency"
  input: "mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_grad/Mul"
  input: "^gradients/mul_grad/Mul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_grad/Mul"
  input: "^gradients/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_grad/Mul_1"
  input: "^gradients/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_25_grad/Mul"
  op: "Mul"
  input: "gradients/add_7_grad/tuple/control_dependency_1"
  input: "Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_25_grad/Mul_1"
  op: "Mul"
  input: "gradients/add_7_grad/tuple/control_dependency_1"
  input: "mul_25/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_25_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_25_grad/Mul"
  input: "^gradients/mul_25_grad/Mul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_25_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_25_grad/Mul"
  input: "^gradients/mul_25_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_25_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_25_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_25_grad/Mul_1"
  input: "^gradients/mul_25_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_25_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Mean_1_grad/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Mean_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_26_grad/tuple/control_dependency_1"
  input: "gradients/Mean_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Mean_1_grad/Const"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "gradients/Mean_1_grad/Tile"
  op: "Tile"
  input: "gradients/Mean_1_grad/Reshape"
  input: "gradients/Mean_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Mean_1_grad/Const_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16.0
      }
    }
  }
}
node {
  name: "gradients/Mean_1_grad/truediv"
  op: "RealDiv"
  input: "gradients/Mean_1_grad/Tile"
  input: "gradients/Mean_1_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Mean_grad/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "gradients/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Mean_grad/Const"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/Mean_grad/Reshape"
  input: "gradients/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Mean_grad/Const_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16777216.0
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/Mean_grad/Tile"
  input: "gradients/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Sum_3_grad/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Sum_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_25_grad/tuple/control_dependency_1"
  input: "gradients/Sum_3_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Sum_3_grad/Const"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/Sum_3_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_3_grad/Reshape"
  input: "gradients/Sum_3_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Mean_1_grad/truediv"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Mean_1_grad/truediv"
  input: "^gradients/total_variation/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Mean_1_grad/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Mean_1_grad/truediv"
  input: "^gradients/total_variation/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Mean_1_grad/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Square_grad/Const"
  op: "Const"
  input: "^gradients/Mean_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/Square_grad/Mul"
  op: "Mul"
  input: "sub"
  input: "gradients/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Square_grad/Mul_1"
  op: "Mul"
  input: "gradients/Mean_grad/truediv"
  input: "gradients/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Sum_3/input_grad/unstack"
  op: "Unpack"
  input: "gradients/Sum_3_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 3
    }
  }
}
node {
  name: "gradients/Sum_3/input_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Sum_3/input_grad/unstack"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Sum_3/input_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Sum_3/input_grad/unstack"
  input: "^gradients/Sum_3/input_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_3/input_grad/unstack"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Sum_3/input_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Sum_3/input_grad/unstack:1"
  input: "^gradients/Sum_3/input_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_3/input_grad/unstack"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Sum_3/input_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/Sum_3/input_grad/unstack:2"
  input: "^gradients/Sum_3/input_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sum_3/input_grad/unstack"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/Sum_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\377\000\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/total_variation/Sum_grad/Size"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/total_variation/Sum_grad/add"
  op: "Add"
  input: "total_variation/Sum/reduction_indices"
  input: "gradients/total_variation/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients/total_variation/Sum_grad/add"
  input: "gradients/total_variation/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/Sum_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/total_variation/Sum_grad/range/start"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/total_variation/Sum_grad/range/delta"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/total_variation/Sum_grad/range"
  op: "Range"
  input: "gradients/total_variation/Sum_grad/range/start"
  input: "gradients/total_variation/Sum_grad/Size"
  input: "gradients/total_variation/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/Sum_grad/Fill/value"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/total_variation/Sum_grad/Fill"
  op: "Fill"
  input: "gradients/total_variation/Sum_grad/Shape_1"
  input: "gradients/total_variation/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/total_variation/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/total_variation/Sum_grad/range"
  input: "gradients/total_variation/Sum_grad/mod"
  input: "gradients/total_variation/Sum_grad/Shape"
  input: "gradients/total_variation/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/Sum_grad/Maximum/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/total_variation/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients/total_variation/Sum_grad/DynamicStitch"
  input: "gradients/total_variation/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/total_variation/Sum_grad/Shape"
  input: "gradients/total_variation/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/total_variation/add_grad/tuple/control_dependency"
  input: "gradients/total_variation/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/total_variation/Sum_grad/Reshape"
  input: "gradients/total_variation/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 255
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/Sum_1_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\377\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/total_variation/Sum_1_grad/Size"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/total_variation/Sum_1_grad/add"
  op: "Add"
  input: "total_variation/Sum_1/reduction_indices"
  input: "gradients/total_variation/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/Sum_1_grad/mod"
  op: "FloorMod"
  input: "gradients/total_variation/Sum_1_grad/add"
  input: "gradients/total_variation/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/Sum_1_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/total_variation/Sum_1_grad/range/start"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/total_variation/Sum_1_grad/range/delta"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/total_variation/Sum_1_grad/range"
  op: "Range"
  input: "gradients/total_variation/Sum_1_grad/range/start"
  input: "gradients/total_variation/Sum_1_grad/Size"
  input: "gradients/total_variation/Sum_1_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/Sum_1_grad/Fill/value"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/total_variation/Sum_1_grad/Fill"
  op: "Fill"
  input: "gradients/total_variation/Sum_1_grad/Shape_1"
  input: "gradients/total_variation/Sum_1_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/total_variation/Sum_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/total_variation/Sum_1_grad/range"
  input: "gradients/total_variation/Sum_1_grad/mod"
  input: "gradients/total_variation/Sum_1_grad/Shape"
  input: "gradients/total_variation/Sum_1_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/Sum_1_grad/Maximum/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/total_variation/Sum_1_grad/Maximum"
  op: "Maximum"
  input: "gradients/total_variation/Sum_1_grad/DynamicStitch"
  input: "gradients/total_variation/Sum_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/Sum_1_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/total_variation/Sum_1_grad/Shape"
  input: "gradients/total_variation/Sum_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/total_variation/add_grad/tuple/control_dependency_1"
  input: "gradients/total_variation/Sum_1_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients/total_variation/Sum_1_grad/Reshape"
  input: "gradients/total_variation/Sum_1_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 255
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/sub_grad/Neg"
  op: "Neg"
  input: "gradients/Square_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Square_grad/Mul_1"
  input: "^gradients/sub_grad/Neg"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Square_grad/Mul_1"
  input: "^gradients/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Square_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_grad/Neg"
  input: "^gradients/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_8_grad/Mul"
  op: "Mul"
  input: "gradients/Sum_3/input_grad/tuple/control_dependency"
  input: "truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_8_grad/Mul_1"
  op: "Mul"
  input: "gradients/Sum_3/input_grad/tuple/control_dependency"
  input: "mul_8/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_8_grad/Mul"
  input: "^gradients/mul_8_grad/Mul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_8_grad/Mul"
  input: "^gradients/mul_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_8_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_8_grad/Mul_1"
  input: "^gradients/mul_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_8_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_16_grad/Mul"
  op: "Mul"
  input: "gradients/Sum_3/input_grad/tuple/control_dependency_1"
  input: "truediv_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_16_grad/Mul_1"
  op: "Mul"
  input: "gradients/Sum_3/input_grad/tuple/control_dependency_1"
  input: "mul_16/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_16_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_16_grad/Mul"
  input: "^gradients/mul_16_grad/Mul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_16_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_16_grad/Mul"
  input: "^gradients/mul_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_16_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_16_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_16_grad/Mul_1"
  input: "^gradients/mul_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_16_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_24_grad/Mul"
  op: "Mul"
  input: "gradients/Sum_3/input_grad/tuple/control_dependency_2"
  input: "truediv_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_24_grad/Mul_1"
  op: "Mul"
  input: "gradients/Sum_3/input_grad/tuple/control_dependency_2"
  input: "mul_24/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_24_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_24_grad/Mul"
  input: "^gradients/mul_24_grad/Mul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_24_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_24_grad/Mul"
  input: "^gradients/mul_24_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_24_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_24_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_24_grad/Mul_1"
  input: "^gradients/mul_24_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_24_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/Abs_grad/Sign"
  op: "Sign"
  input: "total_variation/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 255
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/Abs_grad/mul"
  op: "Mul"
  input: "gradients/total_variation/Sum_grad/Tile"
  input: "gradients/total_variation/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 255
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/Abs_1_grad/Sign"
  op: "Sign"
  input: "total_variation/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 255
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/Abs_1_grad/mul"
  op: "Mul"
  input: "gradients/total_variation/Sum_1_grad/Tile"
  input: "gradients/total_variation/Abs_1_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 255
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_2_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_2_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/truediv_2_grad/Shape"
  input: "gradients/truediv_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_2_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/mul_8_grad/tuple/control_dependency_1"
  input: "Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_2_grad/Sum"
  op: "Sum"
  input: "gradients/truediv_2_grad/RealDiv"
  input: "gradients/truediv_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_2_grad/Sum"
  input: "gradients/truediv_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_2_grad/Neg"
  op: "Neg"
  input: "Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_2_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/truediv_2_grad/Neg"
  input: "Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_2_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/truediv_2_grad/RealDiv_1"
  input: "Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_2_grad/mul"
  op: "Mul"
  input: "gradients/mul_8_grad/tuple/control_dependency_1"
  input: "gradients/truediv_2_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/truediv_2_grad/mul"
  input: "gradients/truediv_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/truediv_2_grad/Sum_1"
  input: "gradients/truediv_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/truediv_2_grad/Reshape"
  input: "^gradients/truediv_2_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/truediv_2_grad/Reshape"
  input: "^gradients/truediv_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/truediv_2_grad/Reshape_1"
  input: "^gradients/truediv_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_5_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_5_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/truediv_5_grad/Shape"
  input: "gradients/truediv_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_5_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/mul_16_grad/tuple/control_dependency_1"
  input: "Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_5_grad/Sum"
  op: "Sum"
  input: "gradients/truediv_5_grad/RealDiv"
  input: "gradients/truediv_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_5_grad/Sum"
  input: "gradients/truediv_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_5_grad/Neg"
  op: "Neg"
  input: "Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_5_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/truediv_5_grad/Neg"
  input: "Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_5_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/truediv_5_grad/RealDiv_1"
  input: "Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_5_grad/mul"
  op: "Mul"
  input: "gradients/mul_16_grad/tuple/control_dependency_1"
  input: "gradients/truediv_5_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/truediv_5_grad/mul"
  input: "gradients/truediv_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/truediv_5_grad/Sum_1"
  input: "gradients/truediv_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/truediv_5_grad/Reshape"
  input: "^gradients/truediv_5_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/truediv_5_grad/Reshape"
  input: "^gradients/truediv_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_5_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/truediv_5_grad/Reshape_1"
  input: "^gradients/truediv_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_5_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_8_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_8_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_8_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/truediv_8_grad/Shape"
  input: "gradients/truediv_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_8_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/mul_24_grad/tuple/control_dependency_1"
  input: "Cast_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_8_grad/Sum"
  op: "Sum"
  input: "gradients/truediv_8_grad/RealDiv"
  input: "gradients/truediv_8_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_8_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_8_grad/Sum"
  input: "gradients/truediv_8_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_8_grad/Neg"
  op: "Neg"
  input: "Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_8_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/truediv_8_grad/Neg"
  input: "Cast_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_8_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/truediv_8_grad/RealDiv_1"
  input: "Cast_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_8_grad/mul"
  op: "Mul"
  input: "gradients/mul_24_grad/tuple/control_dependency_1"
  input: "gradients/truediv_8_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_8_grad/Sum_1"
  op: "Sum"
  input: "gradients/truediv_8_grad/mul"
  input: "gradients/truediv_8_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_8_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/truediv_8_grad/Sum_1"
  input: "gradients/truediv_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/truediv_8_grad/Reshape"
  input: "^gradients/truediv_8_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/truediv_8_grad/Reshape"
  input: "^gradients/truediv_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_8_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/truediv_8_grad/Reshape_1"
  input: "^gradients/truediv_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_8_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/sub_grad/Neg"
  op: "Neg"
  input: "gradients/total_variation/Abs_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 255
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/total_variation/Abs_grad/mul"
  input: "^gradients/total_variation/sub_grad/Neg"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/total_variation/Abs_grad/mul"
  input: "^gradients/total_variation/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/Abs_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 255
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/total_variation/sub_grad/Neg"
  input: "^gradients/total_variation/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 255
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/sub_1_grad/Neg"
  op: "Neg"
  input: "gradients/total_variation/Abs_1_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 255
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/total_variation/Abs_1_grad/mul"
  input: "^gradients/total_variation/sub_1_grad/Neg"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/total_variation/Abs_1_grad/mul"
  input: "^gradients/total_variation/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/Abs_1_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 255
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/total_variation/sub_1_grad/Neg"
  input: "^gradients/total_variation/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/sub_1_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 255
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Sum_grad/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_2_grad/tuple/control_dependency"
  input: "gradients/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Sum_grad/Const"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_grad/Reshape"
  input: "gradients/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Sum_1_grad/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_5_grad/tuple/control_dependency"
  input: "gradients/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Sum_1_grad/Const"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_1_grad/Reshape"
  input: "gradients/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Sum_2_grad/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_8_grad/tuple/control_dependency"
  input: "gradients/Sum_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Sum_2_grad/Const"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_2_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_2_grad/Reshape"
  input: "gradients/Sum_2_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/total_variation/strided_slice_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/total_variation/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/total_variation/strided_slice_grad/Shape"
  input: "total_variation/strided_slice/stack"
  input: "total_variation/strided_slice/stack_1"
  input: "total_variation/strided_slice/stack_2"
  input: "gradients/total_variation/sub_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/total_variation/strided_slice_1_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/total_variation/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/total_variation/strided_slice_1_grad/Shape"
  input: "total_variation/strided_slice_1/stack"
  input: "total_variation/strided_slice_1/stack_1"
  input: "total_variation/strided_slice_1/stack_2"
  input: "gradients/total_variation/sub_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/total_variation/strided_slice_2_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/total_variation/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/total_variation/strided_slice_2_grad/Shape"
  input: "total_variation/strided_slice_2/stack"
  input: "total_variation/strided_slice_2/stack_1"
  input: "total_variation/strided_slice_2/stack_2"
  input: "gradients/total_variation/sub_1_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/total_variation/strided_slice_3_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/total_variation/strided_slice_3_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/total_variation/strided_slice_3_grad/Shape"
  input: "total_variation/strided_slice_3/stack"
  input: "total_variation/strided_slice_3/stack_1"
  input: "total_variation/strided_slice_3/stack_2"
  input: "gradients/total_variation/sub_1_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Square_1_grad/Const"
  op: "Const"
  input: "^gradients/Sum_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/Square_1_grad/Mul"
  op: "Mul"
  input: "sub_1"
  input: "gradients/Square_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Square_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/Sum_grad/Tile"
  input: "gradients/Square_1_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Square_2_grad/Const"
  op: "Const"
  input: "^gradients/Sum_1_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/Square_2_grad/Mul"
  op: "Mul"
  input: "sub_2"
  input: "gradients/Square_2_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Square_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/Sum_1_grad/Tile"
  input: "gradients/Square_2_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Square_3_grad/Const"
  op: "Const"
  input: "^gradients/Sum_2_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/Square_3_grad/Mul"
  op: "Mul"
  input: "sub_3"
  input: "gradients/Square_3_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Square_3_grad/Mul_1"
  op: "Mul"
  input: "gradients/Sum_2_grad/Tile"
  input: "gradients/Square_3_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/sub_1_grad/Neg"
  op: "Neg"
  input: "gradients/Square_1_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Square_1_grad/Mul_1"
  input: "^gradients/sub_1_grad/Neg"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Square_1_grad/Mul_1"
  input: "^gradients/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Square_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_1_grad/Neg"
  input: "^gradients/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_1_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/sub_2_grad/Neg"
  op: "Neg"
  input: "gradients/Square_2_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/sub_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Square_2_grad/Mul_1"
  input: "^gradients/sub_2_grad/Neg"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/sub_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Square_2_grad/Mul_1"
  input: "^gradients/sub_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Square_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/sub_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_2_grad/Neg"
  input: "^gradients/sub_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_2_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/sub_3_grad/Neg"
  op: "Neg"
  input: "gradients/Square_3_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/sub_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Square_3_grad/Mul_1"
  input: "^gradients/sub_3_grad/Neg"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/sub_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Square_3_grad/Mul_1"
  input: "^gradients/sub_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Square_3_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/sub_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_3_grad/Neg"
  input: "^gradients/sub_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_3_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_6_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_6_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_6_grad/Shape"
  input: "gradients/mul_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_6_grad/Mul"
  op: "Mul"
  input: "gradients/sub_1_grad/tuple/control_dependency_1"
  input: "mul_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_6_grad/Sum"
  op: "Sum"
  input: "gradients/mul_6_grad/Mul"
  input: "gradients/mul_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_6_grad/Sum"
  input: "gradients/mul_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_6_grad/Mul_1"
  op: "Mul"
  input: "truediv_1"
  input: "gradients/sub_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_6_grad/Sum_1"
  op: "Sum"
  input: "gradients/mul_6_grad/Mul_1"
  input: "gradients/mul_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mul_6_grad/Sum_1"
  input: "gradients/mul_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_6_grad/Reshape"
  input: "^gradients/mul_6_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_6_grad/Reshape"
  input: "^gradients/mul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_6_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_6_grad/Reshape_1"
  input: "^gradients/mul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_6_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_14_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_14_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_14_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_14_grad/Shape"
  input: "gradients/mul_14_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_14_grad/Mul"
  op: "Mul"
  input: "gradients/sub_2_grad/tuple/control_dependency_1"
  input: "mul_14/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_14_grad/Sum"
  op: "Sum"
  input: "gradients/mul_14_grad/Mul"
  input: "gradients/mul_14_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_14_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_14_grad/Sum"
  input: "gradients/mul_14_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_14_grad/Mul_1"
  op: "Mul"
  input: "truediv_4"
  input: "gradients/sub_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_14_grad/Sum_1"
  op: "Sum"
  input: "gradients/mul_14_grad/Mul_1"
  input: "gradients/mul_14_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_14_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mul_14_grad/Sum_1"
  input: "gradients/mul_14_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_14_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_14_grad/Reshape"
  input: "^gradients/mul_14_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_14_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_14_grad/Reshape"
  input: "^gradients/mul_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_14_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_14_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_14_grad/Reshape_1"
  input: "^gradients/mul_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_14_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_22_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_22_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_22_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_22_grad/Shape"
  input: "gradients/mul_22_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_22_grad/Mul"
  op: "Mul"
  input: "gradients/sub_3_grad/tuple/control_dependency_1"
  input: "mul_22/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_22_grad/Sum"
  op: "Sum"
  input: "gradients/mul_22_grad/Mul"
  input: "gradients/mul_22_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_22_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_22_grad/Sum"
  input: "gradients/mul_22_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_22_grad/Mul_1"
  op: "Mul"
  input: "truediv_7"
  input: "gradients/sub_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_22_grad/Sum_1"
  op: "Sum"
  input: "gradients/mul_22_grad/Mul_1"
  input: "gradients/mul_22_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_22_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mul_22_grad/Sum_1"
  input: "gradients/mul_22_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_22_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_22_grad/Reshape"
  input: "^gradients/mul_22_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_22_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_22_grad/Reshape"
  input: "^gradients/mul_22_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_22_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/mul_22_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_22_grad/Reshape_1"
  input: "^gradients/mul_22_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_22_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_1_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/truediv_1_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/truediv_1_grad/Shape"
  input: "gradients/truediv_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_1_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/mul_6_grad/tuple/control_dependency"
  input: "add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_1_grad/Sum"
  op: "Sum"
  input: "gradients/truediv_1_grad/RealDiv"
  input: "gradients/truediv_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_1_grad/Sum"
  input: "gradients/truediv_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_1_grad/Neg"
  op: "Neg"
  input: "MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_1_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/truediv_1_grad/Neg"
  input: "add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_1_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/truediv_1_grad/RealDiv_1"
  input: "add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_1_grad/mul"
  op: "Mul"
  input: "gradients/mul_6_grad/tuple/control_dependency"
  input: "gradients/truediv_1_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/truediv_1_grad/mul"
  input: "gradients/truediv_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/truediv_1_grad/Sum_1"
  input: "gradients/truediv_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/truediv_1_grad/Reshape"
  input: "^gradients/truediv_1_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/truediv_1_grad/Reshape"
  input: "^gradients/truediv_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/truediv_1_grad/Reshape_1"
  input: "^gradients/truediv_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_4_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/truediv_4_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/truediv_4_grad/Shape"
  input: "gradients/truediv_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_4_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/mul_14_grad/tuple/control_dependency"
  input: "add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_4_grad/Sum"
  op: "Sum"
  input: "gradients/truediv_4_grad/RealDiv"
  input: "gradients/truediv_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_4_grad/Sum"
  input: "gradients/truediv_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_4_grad/Neg"
  op: "Neg"
  input: "MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_4_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/truediv_4_grad/Neg"
  input: "add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_4_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/truediv_4_grad/RealDiv_1"
  input: "add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_4_grad/mul"
  op: "Mul"
  input: "gradients/mul_14_grad/tuple/control_dependency"
  input: "gradients/truediv_4_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/truediv_4_grad/mul"
  input: "gradients/truediv_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/truediv_4_grad/Sum_1"
  input: "gradients/truediv_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/truediv_4_grad/Reshape"
  input: "^gradients/truediv_4_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/truediv_4_grad/Reshape"
  input: "^gradients/truediv_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_4_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/truediv_4_grad/Reshape_1"
  input: "^gradients/truediv_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_4_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_7_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/truediv_7_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/truediv_7_grad/Shape"
  input: "gradients/truediv_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_7_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/mul_22_grad/tuple/control_dependency"
  input: "add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_7_grad/Sum"
  op: "Sum"
  input: "gradients/truediv_7_grad/RealDiv"
  input: "gradients/truediv_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_7_grad/Sum"
  input: "gradients/truediv_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_7_grad/Neg"
  op: "Neg"
  input: "MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_7_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/truediv_7_grad/Neg"
  input: "add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_7_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/truediv_7_grad/RealDiv_1"
  input: "add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_7_grad/mul"
  op: "Mul"
  input: "gradients/mul_22_grad/tuple/control_dependency"
  input: "gradients/truediv_7_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_7_grad/Sum_1"
  op: "Sum"
  input: "gradients/truediv_7_grad/mul"
  input: "gradients/truediv_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/truediv_7_grad/Sum_1"
  input: "gradients/truediv_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/truediv_7_grad/Reshape"
  input: "^gradients/truediv_7_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/truediv_7_grad/Reshape"
  input: "^gradients/truediv_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_7_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/truediv_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/truediv_7_grad/Reshape_1"
  input: "^gradients/truediv_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_7_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/MatMul"
  op: "BatchMatMul"
  input: "Reshape_1"
  input: "gradients/truediv_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 65536
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/MatMul_1"
  op: "BatchMatMul"
  input: "Reshape_1"
  input: "gradients/truediv_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 65536
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MatMul_1_grad/MatMul"
  input: "^gradients/MatMul_1_grad/MatMul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MatMul_1_grad/MatMul"
  input: "^gradients/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 65536
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MatMul_1_grad/MatMul_1"
  input: "^gradients/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 65536
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/MatMul_3_grad/MatMul"
  op: "BatchMatMul"
  input: "Reshape_3"
  input: "gradients/truediv_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16384
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MatMul_3_grad/MatMul_1"
  op: "BatchMatMul"
  input: "Reshape_3"
  input: "gradients/truediv_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16384
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/MatMul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MatMul_3_grad/MatMul"
  input: "^gradients/MatMul_3_grad/MatMul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/MatMul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MatMul_3_grad/MatMul"
  input: "^gradients/MatMul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_3_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16384
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/MatMul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MatMul_3_grad/MatMul_1"
  input: "^gradients/MatMul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_3_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16384
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/MatMul_5_grad/MatMul"
  op: "BatchMatMul"
  input: "Reshape_5"
  input: "gradients/truediv_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MatMul_5_grad/MatMul_1"
  op: "BatchMatMul"
  input: "Reshape_5"
  input: "gradients/truediv_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/MatMul_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MatMul_5_grad/MatMul"
  input: "^gradients/MatMul_5_grad/MatMul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/MatMul_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MatMul_5_grad/MatMul"
  input: "^gradients/MatMul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_5_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/MatMul_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MatMul_5_grad/MatMul_1"
  input: "^gradients/MatMul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_5_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/MatMul_1_grad/tuple/control_dependency"
  input: "gradients/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 65536
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Reshape_1_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN"
  input: "gradients/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/MatMul_3_grad/tuple/control_dependency"
  input: "gradients/MatMul_3_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_3_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16384
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Reshape_3_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Reshape_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_1"
  input: "gradients/Reshape_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/MatMul_5_grad/tuple/control_dependency"
  input: "gradients/MatMul_5_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_5_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/Reshape_5_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Reshape_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_2"
  input: "gradients/Reshape_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/sub_grad/tuple/control_dependency_1"
  input: "gradients/Reshape_5_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block3_conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_3"
  input: "vgg19_encoder_2/block3_conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block3_conv1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/vgg19_encoder_2/block3_conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block3_conv1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/vgg19_encoder_2/block3_conv1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/vgg19_encoder_2/block3_conv1/Relu_grad/ReluGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block3_conv1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/vgg19_encoder_2/block3_conv1/Relu_grad/ReluGrad"
  input: "^gradients/vgg19_encoder_2/block3_conv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_encoder_2/block3_conv1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block3_conv1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/vgg19_encoder_2/block3_conv1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/vgg19_encoder_2/block3_conv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_encoder_2/block3_conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block3_conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "vgg19_encoder_2/block2_pool/MaxPool"
  input: "vgg19_encoder_2/block3_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block3_conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/vgg19_encoder_2/block3_conv1/Conv2D_grad/ShapeN"
  input: "vgg19_encoder_2/block3_conv1/Conv2D/ReadVariableOp"
  input: "gradients/vgg19_encoder_2/block3_conv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block3_conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "vgg19_encoder_2/block2_pool/MaxPool"
  input: "gradients/vgg19_encoder_2/block3_conv1/Conv2D_grad/ShapeN:1"
  input: "gradients/vgg19_encoder_2/block3_conv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block3_conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/vgg19_encoder_2/block3_conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/vgg19_encoder_2/block3_conv1/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block3_conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/vgg19_encoder_2/block3_conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/vgg19_encoder_2/block3_conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_encoder_2/block3_conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block3_conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/vgg19_encoder_2/block3_conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/vgg19_encoder_2/block3_conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_encoder_2/block3_conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block2_pool/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "vgg19_encoder_2/block2_conv2/Relu"
  input: "vgg19_encoder_2/block2_pool/MaxPool"
  input: "gradients/vgg19_encoder_2/block3_conv1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block2_conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/vgg19_encoder_2/block2_pool/MaxPool_grad/MaxPoolGrad"
  input: "vgg19_encoder_2/block2_conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block2_conv2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/vgg19_encoder_2/block2_conv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block2_conv2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/vgg19_encoder_2/block2_conv2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/vgg19_encoder_2/block2_conv2/Relu_grad/ReluGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block2_conv2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/vgg19_encoder_2/block2_conv2/Relu_grad/ReluGrad"
  input: "^gradients/vgg19_encoder_2/block2_conv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_encoder_2/block2_conv2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block2_conv2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/vgg19_encoder_2/block2_conv2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/vgg19_encoder_2/block2_conv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_encoder_2/block2_conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block2_conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "vgg19_encoder_2/block2_conv1/Relu"
  input: "vgg19_encoder_2/block2_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block2_conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/vgg19_encoder_2/block2_conv2/Conv2D_grad/ShapeN"
  input: "vgg19_encoder_2/block2_conv2/Conv2D/ReadVariableOp"
  input: "gradients/vgg19_encoder_2/block2_conv2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block2_conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "vgg19_encoder_2/block2_conv1/Relu"
  input: "gradients/vgg19_encoder_2/block2_conv2/Conv2D_grad/ShapeN:1"
  input: "gradients/vgg19_encoder_2/block2_conv2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block2_conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/vgg19_encoder_2/block2_conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/vgg19_encoder_2/block2_conv2/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block2_conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/vgg19_encoder_2/block2_conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/vgg19_encoder_2/block2_conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_encoder_2/block2_conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block2_conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/vgg19_encoder_2/block2_conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/vgg19_encoder_2/block2_conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_encoder_2/block2_conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/Reshape_3_grad/Reshape"
  input: "gradients/vgg19_encoder_2/block2_conv2/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Reshape_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block2_conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_4"
  input: "vgg19_encoder_2/block2_conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block2_conv1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/vgg19_encoder_2/block2_conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block2_conv1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/vgg19_encoder_2/block2_conv1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/vgg19_encoder_2/block2_conv1/Relu_grad/ReluGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block2_conv1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/vgg19_encoder_2/block2_conv1/Relu_grad/ReluGrad"
  input: "^gradients/vgg19_encoder_2/block2_conv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_encoder_2/block2_conv1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block2_conv1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/vgg19_encoder_2/block2_conv1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/vgg19_encoder_2/block2_conv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_encoder_2/block2_conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block2_conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "vgg19_encoder_2/block1_pool/MaxPool"
  input: "vgg19_encoder_2/block2_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block2_conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/vgg19_encoder_2/block2_conv1/Conv2D_grad/ShapeN"
  input: "vgg19_encoder_2/block2_conv1/Conv2D/ReadVariableOp"
  input: "gradients/vgg19_encoder_2/block2_conv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block2_conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "vgg19_encoder_2/block1_pool/MaxPool"
  input: "gradients/vgg19_encoder_2/block2_conv1/Conv2D_grad/ShapeN:1"
  input: "gradients/vgg19_encoder_2/block2_conv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block2_conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/vgg19_encoder_2/block2_conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/vgg19_encoder_2/block2_conv1/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block2_conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/vgg19_encoder_2/block2_conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/vgg19_encoder_2/block2_conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_encoder_2/block2_conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block2_conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/vgg19_encoder_2/block2_conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/vgg19_encoder_2/block2_conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_encoder_2/block2_conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block1_pool/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "vgg19_encoder_2/block1_conv2/Relu"
  input: "vgg19_encoder_2/block1_pool/MaxPool"
  input: "gradients/vgg19_encoder_2/block2_conv1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block1_conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/vgg19_encoder_2/block1_pool/MaxPool_grad/MaxPoolGrad"
  input: "vgg19_encoder_2/block1_conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block1_conv2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/vgg19_encoder_2/block1_conv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block1_conv2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/vgg19_encoder_2/block1_conv2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/vgg19_encoder_2/block1_conv2/Relu_grad/ReluGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block1_conv2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/vgg19_encoder_2/block1_conv2/Relu_grad/ReluGrad"
  input: "^gradients/vgg19_encoder_2/block1_conv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_encoder_2/block1_conv2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block1_conv2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/vgg19_encoder_2/block1_conv2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/vgg19_encoder_2/block1_conv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_encoder_2/block1_conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block1_conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "vgg19_encoder_2/block1_conv1/Relu"
  input: "vgg19_encoder_2/block1_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block1_conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/vgg19_encoder_2/block1_conv2/Conv2D_grad/ShapeN"
  input: "vgg19_encoder_2/block1_conv2/Conv2D/ReadVariableOp"
  input: "gradients/vgg19_encoder_2/block1_conv2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block1_conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "vgg19_encoder_2/block1_conv1/Relu"
  input: "gradients/vgg19_encoder_2/block1_conv2/Conv2D_grad/ShapeN:1"
  input: "gradients/vgg19_encoder_2/block1_conv2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block1_conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/vgg19_encoder_2/block1_conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/vgg19_encoder_2/block1_conv2/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block1_conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/vgg19_encoder_2/block1_conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/vgg19_encoder_2/block1_conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_encoder_2/block1_conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block1_conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/vgg19_encoder_2/block1_conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/vgg19_encoder_2/block1_conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_encoder_2/block1_conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/Reshape_1_grad/Reshape"
  input: "gradients/vgg19_encoder_2/block1_conv2/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Reshape_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block1_conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_5"
  input: "vgg19_encoder_2/block1_conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block1_conv1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/vgg19_encoder_2/block1_conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block1_conv1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/vgg19_encoder_2/block1_conv1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/vgg19_encoder_2/block1_conv1/Relu_grad/ReluGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block1_conv1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/vgg19_encoder_2/block1_conv1/Relu_grad/ReluGrad"
  input: "^gradients/vgg19_encoder_2/block1_conv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_encoder_2/block1_conv1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block1_conv1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/vgg19_encoder_2/block1_conv1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/vgg19_encoder_2/block1_conv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_encoder_2/block1_conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block1_conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "vgg19_decoder/mul"
  input: "vgg19_encoder_2/block1_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block1_conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/vgg19_encoder_2/block1_conv1/Conv2D_grad/ShapeN"
  input: "vgg19_encoder_2/block1_conv1/Conv2D/ReadVariableOp"
  input: "gradients/vgg19_encoder_2/block1_conv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block1_conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "vgg19_decoder/mul"
  input: "gradients/vgg19_encoder_2/block1_conv1/Conv2D_grad/ShapeN:1"
  input: "gradients/vgg19_encoder_2/block1_conv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block1_conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/vgg19_encoder_2/block1_conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/vgg19_encoder_2/block1_conv1/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block1_conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/vgg19_encoder_2/block1_conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/vgg19_encoder_2/block1_conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_encoder_2/block1_conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_encoder_2/block1_conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/vgg19_encoder_2/block1_conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/vgg19_encoder_2/block1_conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_encoder_2/block1_conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/total_variation/strided_slice_grad/StridedSliceGrad"
  input: "gradients/total_variation/strided_slice_1_grad/StridedSliceGrad"
  input: "gradients/total_variation/strided_slice_2_grad/StridedSliceGrad"
  input: "gradients/total_variation/strided_slice_3_grad/StridedSliceGrad"
  input: "gradients/vgg19_encoder_2/block1_conv1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_variation/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/mul_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/mul_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/vgg19_decoder/mul_grad/Shape"
  input: "gradients/vgg19_decoder/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_6"
  input: "vgg19_decoder/block1_conv1_decoder/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/mul_grad/Sum"
  op: "Sum"
  input: "gradients/vgg19_decoder/mul_grad/Mul"
  input: "gradients/vgg19_decoder/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/vgg19_decoder/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/vgg19_decoder/mul_grad/Sum"
  input: "gradients/vgg19_decoder/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/mul_grad/Mul_1"
  op: "Mul"
  input: "vgg19_decoder/mul/x"
  input: "gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/vgg19_decoder/mul_grad/Mul_1"
  input: "gradients/vgg19_decoder/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/vgg19_decoder/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/vgg19_decoder/mul_grad/Sum_1"
  input: "gradients/vgg19_decoder/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/vgg19_decoder/mul_grad/Reshape"
  input: "^gradients/vgg19_decoder/mul_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/vgg19_decoder/mul_grad/Reshape"
  input: "^gradients/vgg19_decoder/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/vgg19_decoder/mul_grad/Reshape_1"
  input: "^gradients/vgg19_decoder/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block1_conv1_decoder/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "vgg19_decoder/block1_conv1_decoder/Tanh"
  input: "gradients/vgg19_decoder/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block1_conv1_decoder/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/vgg19_decoder/block1_conv1_decoder/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block1_conv1_decoder/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/vgg19_decoder/block1_conv1_decoder/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/vgg19_decoder/block1_conv1_decoder/Tanh_grad/TanhGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block1_conv1_decoder/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/vgg19_decoder/block1_conv1_decoder/Tanh_grad/TanhGrad"
  input: "^gradients/vgg19_decoder/block1_conv1_decoder/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block1_conv1_decoder/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block1_conv1_decoder/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/vgg19_decoder/block1_conv1_decoder/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/vgg19_decoder/block1_conv1_decoder/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block1_conv1_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block1_conv1_decoder/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/Relu"
  input: "vgg19_decoder/block1_conv1_decoder/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block1_conv1_decoder/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/vgg19_decoder/block1_conv1_decoder/Conv2D_grad/ShapeN"
  input: "vgg19_decoder/block1_conv1_decoder/Conv2D/ReadVariableOp"
  input: "gradients/vgg19_decoder/block1_conv1_decoder/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block1_conv1_decoder/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/Relu"
  input: "gradients/vgg19_decoder/block1_conv1_decoder/Conv2D_grad/ShapeN:1"
  input: "gradients/vgg19_decoder/block1_conv1_decoder/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block1_conv1_decoder/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/vgg19_decoder/block1_conv1_decoder/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/vgg19_decoder/block1_conv1_decoder/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block1_conv1_decoder/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/vgg19_decoder/block1_conv1_decoder/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/vgg19_decoder/block1_conv1_decoder/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block1_conv1_decoder/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block1_conv1_decoder/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/vgg19_decoder/block1_conv1_decoder/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/vgg19_decoder/block1_conv1_decoder/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block1_conv1_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block1_conv2_transpose_decoder/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/vgg19_decoder/block1_conv1_decoder/Conv2D_grad/tuple/control_dependency"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block1_conv2_transpose_decoder/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/vgg19_decoder/block1_conv2_transpose_decoder/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block1_conv2_transpose_decoder/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/vgg19_decoder/block1_conv2_transpose_decoder/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/vgg19_decoder/block1_conv2_transpose_decoder/Relu_grad/ReluGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block1_conv2_transpose_decoder/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/vgg19_decoder/block1_conv2_transpose_decoder/Relu_grad/ReluGrad"
  input: "^gradients/vgg19_decoder/block1_conv2_transpose_decoder/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block1_conv2_transpose_decoder/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block1_conv2_transpose_decoder/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/vgg19_decoder/block1_conv2_transpose_decoder/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/vgg19_decoder/block1_conv2_transpose_decoder/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block1_conv2_transpose_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block1_conv2_transpose_decoder/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "vgg19_decoder/Pad_3"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block1_conv2_transpose_decoder/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/vgg19_decoder/block1_conv2_transpose_decoder/Conv2D_grad/ShapeN"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/Conv2D/ReadVariableOp"
  input: "gradients/vgg19_decoder/block1_conv2_transpose_decoder/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 258
          }
          dim {
            size: 258
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block1_conv2_transpose_decoder/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "vgg19_decoder/Pad_3"
  input: "gradients/vgg19_decoder/block1_conv2_transpose_decoder/Conv2D_grad/ShapeN:1"
  input: "gradients/vgg19_decoder/block1_conv2_transpose_decoder/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block1_conv2_transpose_decoder/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/vgg19_decoder/block1_conv2_transpose_decoder/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/vgg19_decoder/block1_conv2_transpose_decoder/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block1_conv2_transpose_decoder/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/vgg19_decoder/block1_conv2_transpose_decoder/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/vgg19_decoder/block1_conv2_transpose_decoder/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block1_conv2_transpose_decoder/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 258
          }
          dim {
            size: 258
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block1_conv2_transpose_decoder/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/vgg19_decoder/block1_conv2_transpose_decoder/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/vgg19_decoder/block1_conv2_transpose_decoder/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block1_conv2_transpose_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_3_grad/Rank"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_3_grad/stack/1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_3_grad/stack"
  op: "Pack"
  input: "gradients/vgg19_decoder/Pad_3_grad/Rank"
  input: "gradients/vgg19_decoder/Pad_3_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_3_grad/Slice/begin"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_3_grad/Slice"
  op: "Slice"
  input: "vgg19_decoder/Pad_3/paddings"
  input: "gradients/vgg19_decoder/Pad_3_grad/Slice/begin"
  input: "gradients/vgg19_decoder/Pad_3_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_3_grad/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/vgg19_decoder/Pad_3_grad/Slice"
  input: "gradients/vgg19_decoder/Pad_3_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_3_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_3_grad/Slice_1"
  op: "Slice"
  input: "gradients/vgg19_decoder/block1_conv2_transpose_decoder/Conv2D_grad/tuple/control_dependency"
  input: "gradients/vgg19_decoder/Pad_3_grad/Reshape"
  input: "gradients/vgg19_decoder/Pad_3_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling_1/Reshape_1_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\002\000\000\000\200\000\000\000\002\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling_1/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/vgg19_decoder/Pad_3_grad/Slice_1"
  input: "gradients/vgg19_decoder/nearest_upsampling_1/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 2
          }
          dim {
            size: 128
          }
          dim {
            size: 2
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\001\000\000\000\200\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\002\000\000\000\001\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/Shape"
  input: "gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/Mul"
  op: "Mul"
  input: "gradients/vgg19_decoder/nearest_upsampling_1/Reshape_1_grad/Reshape"
  input: "vgg19_decoder/nearest_upsampling_1/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 2
          }
          dim {
            size: 128
          }
          dim {
            size: 2
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/Sum"
  op: "Sum"
  input: "gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/Mul"
  input: "gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/Sum"
  input: "gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/Mul_1"
  op: "Mul"
  input: "vgg19_decoder/nearest_upsampling_1/Reshape"
  input: "gradients/vgg19_decoder/nearest_upsampling_1/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 2
          }
          dim {
            size: 128
          }
          dim {
            size: 2
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/Mul_1"
  input: "gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/Sum_1"
  input: "gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/Reshape"
  input: "^gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/Reshape"
  input: "^gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/Reshape_1"
  input: "^gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling_1/Reshape_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/vgg19_decoder/nearest_upsampling_1/mul_grad/tuple/control_dependency"
  input: "gradients/vgg19_decoder/nearest_upsampling_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block2_conv1_decoder/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/vgg19_decoder/nearest_upsampling_1/Reshape_grad/Reshape"
  input: "vgg19_decoder/block2_conv1_decoder/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block2_conv1_decoder/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/vgg19_decoder/block2_conv1_decoder/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block2_conv1_decoder/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/vgg19_decoder/block2_conv1_decoder/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/vgg19_decoder/block2_conv1_decoder/Relu_grad/ReluGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block2_conv1_decoder/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/vgg19_decoder/block2_conv1_decoder/Relu_grad/ReluGrad"
  input: "^gradients/vgg19_decoder/block2_conv1_decoder/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block2_conv1_decoder/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block2_conv1_decoder/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/vgg19_decoder/block2_conv1_decoder/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/vgg19_decoder/block2_conv1_decoder/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block2_conv1_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block2_conv1_decoder/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "vgg19_decoder/Pad_2"
  input: "vgg19_decoder/block2_conv1_decoder/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block2_conv1_decoder/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/vgg19_decoder/block2_conv1_decoder/Conv2D_grad/ShapeN"
  input: "vgg19_decoder/block2_conv1_decoder/Conv2D/ReadVariableOp"
  input: "gradients/vgg19_decoder/block2_conv1_decoder/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 130
          }
          dim {
            size: 130
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block2_conv1_decoder/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "vgg19_decoder/Pad_2"
  input: "gradients/vgg19_decoder/block2_conv1_decoder/Conv2D_grad/ShapeN:1"
  input: "gradients/vgg19_decoder/block2_conv1_decoder/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block2_conv1_decoder/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/vgg19_decoder/block2_conv1_decoder/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/vgg19_decoder/block2_conv1_decoder/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block2_conv1_decoder/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/vgg19_decoder/block2_conv1_decoder/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/vgg19_decoder/block2_conv1_decoder/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block2_conv1_decoder/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 130
          }
          dim {
            size: 130
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block2_conv1_decoder/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/vgg19_decoder/block2_conv1_decoder/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/vgg19_decoder/block2_conv1_decoder/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block2_conv1_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_2_grad/Rank"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_2_grad/stack/1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_2_grad/stack"
  op: "Pack"
  input: "gradients/vgg19_decoder/Pad_2_grad/Rank"
  input: "gradients/vgg19_decoder/Pad_2_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_2_grad/Slice/begin"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_2_grad/Slice"
  op: "Slice"
  input: "vgg19_decoder/Pad_2/paddings"
  input: "gradients/vgg19_decoder/Pad_2_grad/Slice/begin"
  input: "gradients/vgg19_decoder/Pad_2_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_2_grad/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/vgg19_decoder/Pad_2_grad/Slice"
  input: "gradients/vgg19_decoder/Pad_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_2_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_2_grad/Slice_1"
  op: "Slice"
  input: "gradients/vgg19_decoder/block2_conv1_decoder/Conv2D_grad/tuple/control_dependency"
  input: "gradients/vgg19_decoder/Pad_2_grad/Reshape"
  input: "gradients/vgg19_decoder/Pad_2_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block2_conv2_transpose_decoder/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/vgg19_decoder/Pad_2_grad/Slice_1"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block2_conv2_transpose_decoder/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/vgg19_decoder/block2_conv2_transpose_decoder/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block2_conv2_transpose_decoder/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/vgg19_decoder/block2_conv2_transpose_decoder/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/vgg19_decoder/block2_conv2_transpose_decoder/Relu_grad/ReluGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block2_conv2_transpose_decoder/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/vgg19_decoder/block2_conv2_transpose_decoder/Relu_grad/ReluGrad"
  input: "^gradients/vgg19_decoder/block2_conv2_transpose_decoder/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block2_conv2_transpose_decoder/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block2_conv2_transpose_decoder/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/vgg19_decoder/block2_conv2_transpose_decoder/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/vgg19_decoder/block2_conv2_transpose_decoder/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block2_conv2_transpose_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block2_conv2_transpose_decoder/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "vgg19_decoder/Pad_1"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block2_conv2_transpose_decoder/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/vgg19_decoder/block2_conv2_transpose_decoder/Conv2D_grad/ShapeN"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/Conv2D/ReadVariableOp"
  input: "gradients/vgg19_decoder/block2_conv2_transpose_decoder/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 130
          }
          dim {
            size: 130
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block2_conv2_transpose_decoder/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "vgg19_decoder/Pad_1"
  input: "gradients/vgg19_decoder/block2_conv2_transpose_decoder/Conv2D_grad/ShapeN:1"
  input: "gradients/vgg19_decoder/block2_conv2_transpose_decoder/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block2_conv2_transpose_decoder/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/vgg19_decoder/block2_conv2_transpose_decoder/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/vgg19_decoder/block2_conv2_transpose_decoder/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block2_conv2_transpose_decoder/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/vgg19_decoder/block2_conv2_transpose_decoder/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/vgg19_decoder/block2_conv2_transpose_decoder/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block2_conv2_transpose_decoder/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 130
          }
          dim {
            size: 130
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block2_conv2_transpose_decoder/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/vgg19_decoder/block2_conv2_transpose_decoder/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/vgg19_decoder/block2_conv2_transpose_decoder/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block2_conv2_transpose_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_1_grad/Rank"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_1_grad/stack/1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_1_grad/stack"
  op: "Pack"
  input: "gradients/vgg19_decoder/Pad_1_grad/Rank"
  input: "gradients/vgg19_decoder/Pad_1_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_1_grad/Slice/begin"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_1_grad/Slice"
  op: "Slice"
  input: "vgg19_decoder/Pad_1/paddings"
  input: "gradients/vgg19_decoder/Pad_1_grad/Slice/begin"
  input: "gradients/vgg19_decoder/Pad_1_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_1_grad/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/vgg19_decoder/Pad_1_grad/Slice"
  input: "gradients/vgg19_decoder/Pad_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_1_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_1_grad/Slice_1"
  op: "Slice"
  input: "gradients/vgg19_decoder/block2_conv2_transpose_decoder/Conv2D_grad/tuple/control_dependency"
  input: "gradients/vgg19_decoder/Pad_1_grad/Reshape"
  input: "gradients/vgg19_decoder/Pad_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling/Reshape_1_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000\002\000\000\000@\000\000\000\002\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/vgg19_decoder/Pad_1_grad/Slice_1"
  input: "gradients/vgg19_decoder/nearest_upsampling/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 2
          }
          dim {
            size: 64
          }
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling/mul_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000\001\000\000\000@\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling/mul_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\002\000\000\000\001\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/vgg19_decoder/nearest_upsampling/mul_grad/Shape"
  input: "gradients/vgg19_decoder/nearest_upsampling/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling/mul_grad/Mul"
  op: "Mul"
  input: "gradients/vgg19_decoder/nearest_upsampling/Reshape_1_grad/Reshape"
  input: "vgg19_decoder/nearest_upsampling/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 2
          }
          dim {
            size: 64
          }
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling/mul_grad/Sum"
  op: "Sum"
  input: "gradients/vgg19_decoder/nearest_upsampling/mul_grad/Mul"
  input: "gradients/vgg19_decoder/nearest_upsampling/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/vgg19_decoder/nearest_upsampling/mul_grad/Sum"
  input: "gradients/vgg19_decoder/nearest_upsampling/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling/mul_grad/Mul_1"
  op: "Mul"
  input: "vgg19_decoder/nearest_upsampling/Reshape"
  input: "gradients/vgg19_decoder/nearest_upsampling/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 2
          }
          dim {
            size: 64
          }
          dim {
            size: 2
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/vgg19_decoder/nearest_upsampling/mul_grad/Mul_1"
  input: "gradients/vgg19_decoder/nearest_upsampling/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/vgg19_decoder/nearest_upsampling/mul_grad/Sum_1"
  input: "gradients/vgg19_decoder/nearest_upsampling/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/vgg19_decoder/nearest_upsampling/mul_grad/Reshape"
  input: "^gradients/vgg19_decoder/nearest_upsampling/mul_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/vgg19_decoder/nearest_upsampling/mul_grad/Reshape"
  input: "^gradients/vgg19_decoder/nearest_upsampling/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/nearest_upsampling/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/vgg19_decoder/nearest_upsampling/mul_grad/Reshape_1"
  input: "^gradients/vgg19_decoder/nearest_upsampling/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/nearest_upsampling/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling/Reshape_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/nearest_upsampling/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/vgg19_decoder/nearest_upsampling/mul_grad/tuple/control_dependency"
  input: "gradients/vgg19_decoder/nearest_upsampling/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block3_conv1_decoder/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/vgg19_decoder/nearest_upsampling/Reshape_grad/Reshape"
  input: "vgg19_decoder/block3_conv1_decoder/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block3_conv1_decoder/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/vgg19_decoder/block3_conv1_decoder/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block3_conv1_decoder/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/vgg19_decoder/block3_conv1_decoder/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/vgg19_decoder/block3_conv1_decoder/Relu_grad/ReluGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block3_conv1_decoder/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/vgg19_decoder/block3_conv1_decoder/Relu_grad/ReluGrad"
  input: "^gradients/vgg19_decoder/block3_conv1_decoder/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block3_conv1_decoder/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block3_conv1_decoder/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/vgg19_decoder/block3_conv1_decoder/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/vgg19_decoder/block3_conv1_decoder/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block3_conv1_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block3_conv1_decoder/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "vgg19_decoder/Pad"
  input: "vgg19_decoder/block3_conv1_decoder/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block3_conv1_decoder/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/vgg19_decoder/block3_conv1_decoder/Conv2D_grad/ShapeN"
  input: "vgg19_decoder/block3_conv1_decoder/Conv2D/ReadVariableOp"
  input: "gradients/vgg19_decoder/block3_conv1_decoder/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block3_conv1_decoder/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "vgg19_decoder/Pad"
  input: "gradients/vgg19_decoder/block3_conv1_decoder/Conv2D_grad/ShapeN:1"
  input: "gradients/vgg19_decoder/block3_conv1_decoder/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block3_conv1_decoder/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/vgg19_decoder/block3_conv1_decoder/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/vgg19_decoder/block3_conv1_decoder/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block3_conv1_decoder/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/vgg19_decoder/block3_conv1_decoder/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/vgg19_decoder/block3_conv1_decoder/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block3_conv1_decoder/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/block3_conv1_decoder/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/vgg19_decoder/block3_conv1_decoder/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/vgg19_decoder/block3_conv1_decoder/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block3_conv1_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_grad/Rank"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_grad/stack/1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_grad/stack"
  op: "Pack"
  input: "gradients/vgg19_decoder/Pad_grad/Rank"
  input: "gradients/vgg19_decoder/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_grad/Slice/begin"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_grad/Slice"
  op: "Slice"
  input: "vgg19_decoder/Pad/paddings"
  input: "gradients/vgg19_decoder/Pad_grad/Slice/begin"
  input: "gradients/vgg19_decoder/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_grad/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_grad/Reshape"
  op: "Reshape"
  input: "gradients/vgg19_decoder/Pad_grad/Slice"
  input: "gradients/vgg19_decoder/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/vgg19_decoder/Pad_grad/Slice_1"
  op: "Slice"
  input: "gradients/vgg19_decoder/block3_conv1_decoder/Conv2D_grad/tuple/control_dependency"
  input: "gradients/vgg19_decoder/Pad_grad/Reshape"
  input: "gradients/vgg19_decoder/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/vgg19_decoder/Pad_grad/Slice_1"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/uncompressor/uncompressor/conv3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Relu_grad/ReluGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Relu_grad/ReluGrad"
  input: "^gradients/fast_style_transfer/uncompressor/uncompressor/conv3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/uncompressor/uncompressor/conv3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "fast_style_transfer/uncompressor/Pad_2"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D_grad/ShapeN"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D/ReadVariableOp"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fast_style_transfer/uncompressor/Pad_2"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D_grad/ShapeN:1"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Pad_2_grad/Rank"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Pad_2_grad/stack/1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Pad_2_grad/stack"
  op: "Pack"
  input: "gradients/fast_style_transfer/uncompressor/Pad_2_grad/Rank"
  input: "gradients/fast_style_transfer/uncompressor/Pad_2_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Pad_2_grad/Slice/begin"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Pad_2_grad/Slice"
  op: "Slice"
  input: "fast_style_transfer/uncompressor/Pad_2/paddings"
  input: "gradients/fast_style_transfer/uncompressor/Pad_2_grad/Slice/begin"
  input: "gradients/fast_style_transfer/uncompressor/Pad_2_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Pad_2_grad/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Pad_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/uncompressor/Pad_2_grad/Slice"
  input: "gradients/fast_style_transfer/uncompressor/Pad_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Pad_2_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Pad_2_grad/Slice_1"
  op: "Slice"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/uncompressor/Pad_2_grad/Reshape"
  input: "gradients/fast_style_transfer/uncompressor/Pad_2_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fast_style_transfer/uncompressor/Pad_2_grad/Slice_1"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/uncompressor/uncompressor/conv2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Relu_grad/ReluGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Relu_grad/ReluGrad"
  input: "^gradients/fast_style_transfer/uncompressor/uncompressor/conv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/uncompressor/uncompressor/conv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "fast_style_transfer/uncompressor/Pad_1"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D_grad/ShapeN"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D/ReadVariableOp"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fast_style_transfer/uncompressor/Pad_1"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D_grad/ShapeN:1"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Pad_1_grad/Rank"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Pad_1_grad/stack/1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Pad_1_grad/stack"
  op: "Pack"
  input: "gradients/fast_style_transfer/uncompressor/Pad_1_grad/Rank"
  input: "gradients/fast_style_transfer/uncompressor/Pad_1_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Pad_1_grad/Slice/begin"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Pad_1_grad/Slice"
  op: "Slice"
  input: "fast_style_transfer/uncompressor/Pad_1/paddings"
  input: "gradients/fast_style_transfer/uncompressor/Pad_1_grad/Slice/begin"
  input: "gradients/fast_style_transfer/uncompressor/Pad_1_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Pad_1_grad/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Pad_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/uncompressor/Pad_1_grad/Slice"
  input: "gradients/fast_style_transfer/uncompressor/Pad_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Pad_1_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Pad_1_grad/Slice_1"
  op: "Slice"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/uncompressor/Pad_1_grad/Reshape"
  input: "gradients/fast_style_transfer/uncompressor/Pad_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fast_style_transfer/uncompressor/Pad_1_grad/Slice_1"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/uncompressor/uncompressor/conv1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Relu_grad/ReluGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Relu_grad/ReluGrad"
  input: "^gradients/fast_style_transfer/uncompressor/uncompressor/conv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/uncompressor/uncompressor/conv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "fast_style_transfer/uncompressor/Pad"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D_grad/ShapeN"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D/ReadVariableOp"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fast_style_transfer/uncompressor/Pad"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D_grad/ShapeN:1"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Pad_grad/Rank"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Pad_grad/stack/1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Pad_grad/stack"
  op: "Pack"
  input: "gradients/fast_style_transfer/uncompressor/Pad_grad/Rank"
  input: "gradients/fast_style_transfer/uncompressor/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Pad_grad/Slice/begin"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Pad_grad/Slice"
  op: "Slice"
  input: "fast_style_transfer/uncompressor/Pad/paddings"
  input: "gradients/fast_style_transfer/uncompressor/Pad_grad/Slice/begin"
  input: "gradients/fast_style_transfer/uncompressor/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Pad_grad/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Pad_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/uncompressor/Pad_grad/Slice"
  input: "gradients/fast_style_transfer/uncompressor/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Pad_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Pad_grad/Slice_1"
  op: "Slice"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/uncompressor/Pad_grad/Reshape"
  input: "gradients/fast_style_transfer/uncompressor/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Reshape_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\000\020\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/uncompressor/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/uncompressor/Pad_grad/Slice_1"
  input: "gradients/fast_style_transfer/uncompressor/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/add_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\000\020\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/add_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fast_style_transfer/add_grad/Shape"
  input: "gradients/fast_style_transfer/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/add_grad/Sum"
  op: "Sum"
  input: "gradients/fast_style_transfer/uncompressor/Reshape_grad/Reshape"
  input: "gradients/fast_style_transfer/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/add_grad/Sum"
  input: "gradients/fast_style_transfer/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/fast_style_transfer/uncompressor/Reshape_grad/Reshape"
  input: "gradients/fast_style_transfer/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fast_style_transfer/add_grad/Sum_1"
  input: "gradients/fast_style_transfer/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/add_grad/Reshape"
  input: "^gradients/fast_style_transfer/add_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/add_grad/Reshape"
  input: "^gradients/fast_style_transfer/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/add_grad/Reshape_1"
  input: "^gradients/fast_style_transfer/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/MatMul_grad/MatMul"
  op: "BatchMatMul"
  input: "gradients/fast_style_transfer/add_grad/tuple/control_dependency"
  input: "fast_style_transfer/transformation/einsum/transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/MatMul_grad/MatMul_1"
  op: "BatchMatMul"
  input: "fast_style_transfer/sub"
  input: "gradients/fast_style_transfer/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/MatMul_grad/MatMul"
  input: "^gradients/fast_style_transfer/MatMul_grad/MatMul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/MatMul_grad/MatMul"
  input: "^gradients/fast_style_transfer/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/MatMul_grad/MatMul_1"
  input: "^gradients/fast_style_transfer/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments_1/mean_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\000\020\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments_1/mean_grad/Size"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/moments_1/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments_1/mean_grad/add"
  op: "Add"
  input: "fast_style_transfer/moments_1/mean/reduction_indices"
  input: "gradients/fast_style_transfer/moments_1/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/moments_1/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments_1/mean_grad/mod"
  op: "FloorMod"
  input: "gradients/fast_style_transfer/moments_1/mean_grad/add"
  input: "gradients/fast_style_transfer/moments_1/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/moments_1/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments_1/mean_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/moments_1/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments_1/mean_grad/range/start"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/moments_1/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments_1/mean_grad/range/delta"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/moments_1/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments_1/mean_grad/range"
  op: "Range"
  input: "gradients/fast_style_transfer/moments_1/mean_grad/range/start"
  input: "gradients/fast_style_transfer/moments_1/mean_grad/Size"
  input: "gradients/fast_style_transfer/moments_1/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/moments_1/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments_1/mean_grad/Fill/value"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/moments_1/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments_1/mean_grad/Fill"
  op: "Fill"
  input: "gradients/fast_style_transfer/moments_1/mean_grad/Shape_1"
  input: "gradients/fast_style_transfer/moments_1/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/moments_1/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments_1/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/fast_style_transfer/moments_1/mean_grad/range"
  input: "gradients/fast_style_transfer/moments_1/mean_grad/mod"
  input: "gradients/fast_style_transfer/moments_1/mean_grad/Shape"
  input: "gradients/fast_style_transfer/moments_1/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/moments_1/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments_1/mean_grad/Maximum/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/moments_1/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments_1/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/fast_style_transfer/moments_1/mean_grad/DynamicStitch"
  input: "gradients/fast_style_transfer/moments_1/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/moments_1/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments_1/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/fast_style_transfer/moments_1/mean_grad/Shape"
  input: "gradients/fast_style_transfer/moments_1/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/moments_1/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments_1/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/add_grad/tuple/control_dependency_1"
  input: "gradients/fast_style_transfer/moments_1/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments_1/mean_grad/Tile"
  op: "Tile"
  input: "gradients/fast_style_transfer/moments_1/mean_grad/Reshape"
  input: "gradients/fast_style_transfer/moments_1/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments_1/mean_grad/Const"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4096.0
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments_1/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/fast_style_transfer/moments_1/mean_grad/Tile"
  input: "gradients/fast_style_transfer/moments_1/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/sub_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\000\020\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/sub_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fast_style_transfer/sub_grad/Shape"
  input: "gradients/fast_style_transfer/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/sub_grad/Sum"
  op: "Sum"
  input: "gradients/fast_style_transfer/MatMul_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/sub_grad/Sum"
  input: "gradients/fast_style_transfer/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/fast_style_transfer/MatMul_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/sub_grad/Neg"
  op: "Neg"
  input: "gradients/fast_style_transfer/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fast_style_transfer/sub_grad/Neg"
  input: "gradients/fast_style_transfer/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/sub_grad/Reshape"
  input: "^gradients/fast_style_transfer/sub_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/sub_grad/Reshape"
  input: "^gradients/fast_style_transfer/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/sub_grad/Reshape_1"
  input: "^gradients/fast_style_transfer/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/einsum/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "fast_style_transfer/transformation/einsum/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/einsum/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/fast_style_transfer/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/fast_style_transfer/transformation/einsum/transpose_2_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/Reshape_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/moments_1/mean_grad/truediv"
  input: "gradients/fast_style_transfer/compressor_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments/mean_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\000\020\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments/mean_grad/Size"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments/mean_grad/add"
  op: "Add"
  input: "fast_style_transfer/moments/mean/reduction_indices"
  input: "gradients/fast_style_transfer/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients/fast_style_transfer/moments/mean_grad/add"
  input: "gradients/fast_style_transfer/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments/mean_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments/mean_grad/range/start"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments/mean_grad/range/delta"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments/mean_grad/range"
  op: "Range"
  input: "gradients/fast_style_transfer/moments/mean_grad/range/start"
  input: "gradients/fast_style_transfer/moments/mean_grad/Size"
  input: "gradients/fast_style_transfer/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments/mean_grad/Fill/value"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients/fast_style_transfer/moments/mean_grad/Shape_1"
  input: "gradients/fast_style_transfer/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/fast_style_transfer/moments/mean_grad/range"
  input: "gradients/fast_style_transfer/moments/mean_grad/mod"
  input: "gradients/fast_style_transfer/moments/mean_grad/Shape"
  input: "gradients/fast_style_transfer/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments/mean_grad/Maximum/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/fast_style_transfer/moments/mean_grad/DynamicStitch"
  input: "gradients/fast_style_transfer/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/fast_style_transfer/moments/mean_grad/Shape"
  input: "gradients/fast_style_transfer/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/sub_grad/tuple/control_dependency_1"
  input: "gradients/fast_style_transfer/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/fast_style_transfer/moments/mean_grad/Reshape"
  input: "gradients/fast_style_transfer/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments/mean_grad/Const"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4096.0
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/fast_style_transfer/moments/mean_grad/Tile"
  input: "gradients/fast_style_transfer/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/einsum/MatMul_grad/MatMul"
  op: "BatchMatMul"
  input: "gradients/fast_style_transfer/transformation/einsum/transpose_2_grad/transpose"
  input: "fast_style_transfer/transformation/einsum/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/einsum/MatMul_grad/MatMul_1"
  op: "BatchMatMul"
  input: "fast_style_transfer/transformation/einsum/transpose"
  input: "gradients/fast_style_transfer/transformation/einsum/transpose_2_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/einsum/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/einsum/MatMul_grad/MatMul"
  input: "^gradients/fast_style_transfer/transformation/einsum/MatMul_grad/MatMul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/einsum/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/einsum/MatMul_grad/MatMul"
  input: "^gradients/fast_style_transfer/transformation/einsum/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/einsum/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/einsum/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/einsum/MatMul_grad/MatMul_1"
  input: "^gradients/fast_style_transfer/transformation/einsum/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/einsum/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fast_style_transfer/compressor_1/Reshape_grad/Reshape"
  input: "fast_style_transfer/compressor_1/compressor/conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/fast_style_transfer/sub_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/Reshape_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_7"
  input: "gradients/fast_style_transfer/compressor/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/einsum/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "fast_style_transfer/transformation/einsum/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/einsum/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/fast_style_transfer/transformation/einsum/MatMul_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/transformation/einsum/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/einsum/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "fast_style_transfer/transformation/einsum/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/einsum/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/fast_style_transfer/transformation/einsum/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/fast_style_transfer/transformation/einsum/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/compressor_1/compressor/conv3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/compressor_1/compressor/conv3/Relu_grad/ReluGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv3/Relu_grad/ReluGrad"
  input: "^gradients/fast_style_transfer/compressor_1/compressor/conv3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv3/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/compressor_1/compressor/conv3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fast_style_transfer/compressor/Reshape_grad/Reshape"
  input: "fast_style_transfer/compressor/compressor/conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tanh"
  input: "gradients/fast_style_transfer/transformation/einsum/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tanh"
  input: "gradients/fast_style_transfer/transformation/einsum/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "fast_style_transfer/compressor_1/Pad_2"
  input: "fast_style_transfer/compressor_1/compressor/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv3/Conv2D_grad/ShapeN"
  input: "fast_style_transfer/compressor_1/compressor/conv3/Conv2D/ReadVariableOp"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fast_style_transfer/compressor_1/Pad_2"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv3/Conv2D_grad/ShapeN:1"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/compressor_1/compressor/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/compressor_1/compressor/conv3/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/fast_style_transfer/compressor_1/compressor/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/compressor_1/compressor/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/fast_style_transfer/compressor/compressor/conv3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/compressor/compressor/conv3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/compressor/compressor/conv3/Relu_grad/ReluGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/compressor/compressor/conv3/Relu_grad/ReluGrad"
  input: "^gradients/fast_style_transfer/compressor/compressor/conv3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor/compressor/conv3/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/compressor/compressor/conv3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/compressor/compressor/conv3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor/compressor/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tanh_grad/TanhGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tanh_grad/TanhGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tanh_grad/TanhGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tanh_grad/TanhGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/Pad_2_grad/Rank"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/Pad_2_grad/stack/1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/Pad_2_grad/stack"
  op: "Pack"
  input: "gradients/fast_style_transfer/compressor_1/Pad_2_grad/Rank"
  input: "gradients/fast_style_transfer/compressor_1/Pad_2_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/Pad_2_grad/Slice/begin"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/Pad_2_grad/Slice"
  op: "Slice"
  input: "fast_style_transfer/compressor_1/Pad_2/paddings"
  input: "gradients/fast_style_transfer/compressor_1/Pad_2_grad/Slice/begin"
  input: "gradients/fast_style_transfer/compressor_1/Pad_2_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/Pad_2_grad/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/Pad_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/compressor_1/Pad_2_grad/Slice"
  input: "gradients/fast_style_transfer/compressor_1/Pad_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/Pad_2_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/Pad_2_grad/Slice_1"
  op: "Slice"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv3/Conv2D_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/compressor_1/Pad_2_grad/Reshape"
  input: "gradients/fast_style_transfer/compressor_1/Pad_2_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "fast_style_transfer/compressor/Pad_2"
  input: "fast_style_transfer/compressor/compressor/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/fast_style_transfer/compressor/compressor/conv3/Conv2D_grad/ShapeN"
  input: "fast_style_transfer/compressor/compressor/conv3/Conv2D/ReadVariableOp"
  input: "gradients/fast_style_transfer/compressor/compressor/conv3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fast_style_transfer/compressor/Pad_2"
  input: "gradients/fast_style_transfer/compressor/compressor/conv3/Conv2D_grad/ShapeN:1"
  input: "gradients/fast_style_transfer/compressor/compressor/conv3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/compressor/compressor/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/compressor/compressor/conv3/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/compressor/compressor/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/fast_style_transfer/compressor/compressor/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor/compressor/conv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/compressor/compressor/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/compressor/compressor/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor/compressor/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fast_style_transfer/compressor_1/Pad_2_grad/Slice_1"
  input: "fast_style_transfer/compressor_1/compressor/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/Pad_2_grad/Rank"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/Pad_2_grad/stack/1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/Pad_2_grad/stack"
  op: "Pack"
  input: "gradients/fast_style_transfer/compressor/Pad_2_grad/Rank"
  input: "gradients/fast_style_transfer/compressor/Pad_2_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/Pad_2_grad/Slice/begin"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/Pad_2_grad/Slice"
  op: "Slice"
  input: "fast_style_transfer/compressor/Pad_2/paddings"
  input: "gradients/fast_style_transfer/compressor/Pad_2_grad/Slice/begin"
  input: "gradients/fast_style_transfer/compressor/Pad_2_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/Pad_2_grad/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/Pad_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/compressor/Pad_2_grad/Slice"
  input: "gradients/fast_style_transfer/compressor/Pad_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/Pad_2_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/Pad_2_grad/Slice_1"
  op: "Slice"
  input: "gradients/fast_style_transfer/compressor/compressor/conv3/Conv2D_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/compressor/Pad_2_grad/Reshape"
  input: "gradients/fast_style_transfer/compressor/Pad_2_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv3/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/fast_style_transfer/compressor/compressor/conv3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot_grad/Reshape"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/MatMul_grad/MatMul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot_grad/Reshape"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/MatMul_grad/MatMul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/compressor_1/compressor/conv2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/compressor_1/compressor/conv2/Relu_grad/ReluGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv2/Relu_grad/ReluGrad"
  input: "^gradients/fast_style_transfer/compressor_1/compressor/conv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/compressor_1/compressor/conv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fast_style_transfer/compressor/Pad_2_grad/Slice_1"
  input: "fast_style_transfer/compressor/compressor/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv3/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/fast_style_transfer/compressor/compressor/conv3/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/Reshape_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/Reshape_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "fast_style_transfer/compressor_1/Pad_1"
  input: "fast_style_transfer/compressor_1/compressor/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv2/Conv2D_grad/ShapeN"
  input: "fast_style_transfer/compressor_1/compressor/conv2/Conv2D/ReadVariableOp"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fast_style_transfer/compressor_1/Pad_1"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv2/Conv2D_grad/ShapeN:1"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/compressor_1/compressor/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/compressor_1/compressor/conv2/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/fast_style_transfer/compressor_1/compressor/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/compressor_1/compressor/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/fast_style_transfer/compressor/compressor/conv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/compressor/compressor/conv2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/compressor/compressor/conv2/Relu_grad/ReluGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/compressor/compressor/conv2/Relu_grad/ReluGrad"
  input: "^gradients/fast_style_transfer/compressor/compressor/conv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor/compressor/conv2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/compressor/compressor/conv2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/compressor/compressor/conv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor/compressor/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/Reshape_grad/Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/Reshape_grad/Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/Pad_1_grad/Rank"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/Pad_1_grad/stack/1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/Pad_1_grad/stack"
  op: "Pack"
  input: "gradients/fast_style_transfer/compressor_1/Pad_1_grad/Rank"
  input: "gradients/fast_style_transfer/compressor_1/Pad_1_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/Pad_1_grad/Slice/begin"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/Pad_1_grad/Slice"
  op: "Slice"
  input: "fast_style_transfer/compressor_1/Pad_1/paddings"
  input: "gradients/fast_style_transfer/compressor_1/Pad_1_grad/Slice/begin"
  input: "gradients/fast_style_transfer/compressor_1/Pad_1_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/Pad_1_grad/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/Pad_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/compressor_1/Pad_1_grad/Slice"
  input: "gradients/fast_style_transfer/compressor_1/Pad_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/Pad_1_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/Pad_1_grad/Slice_1"
  op: "Slice"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv2/Conv2D_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/compressor_1/Pad_1_grad/Reshape"
  input: "gradients/fast_style_transfer/compressor_1/Pad_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "fast_style_transfer/compressor/Pad_1"
  input: "fast_style_transfer/compressor/compressor/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/fast_style_transfer/compressor/compressor/conv2/Conv2D_grad/ShapeN"
  input: "fast_style_transfer/compressor/compressor/conv2/Conv2D/ReadVariableOp"
  input: "gradients/fast_style_transfer/compressor/compressor/conv2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fast_style_transfer/compressor/Pad_1"
  input: "gradients/fast_style_transfer/compressor/compressor/conv2/Conv2D_grad/ShapeN:1"
  input: "gradients/fast_style_transfer/compressor/compressor/conv2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/compressor/compressor/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/compressor/compressor/conv2/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/compressor/compressor/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/fast_style_transfer/compressor/compressor/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor/compressor/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/compressor/compressor/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/compressor/compressor/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor/compressor/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/Shape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/transpose_grad/transpose"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/transpose_grad/transpose"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/Sum_1"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/Shape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/transpose_grad/transpose"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/transpose_grad/transpose"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/Sum_1"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fast_style_transfer/compressor_1/Pad_1_grad/Slice_1"
  input: "fast_style_transfer/compressor_1/compressor/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/Pad_1_grad/Rank"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/Pad_1_grad/stack/1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/Pad_1_grad/stack"
  op: "Pack"
  input: "gradients/fast_style_transfer/compressor/Pad_1_grad/Rank"
  input: "gradients/fast_style_transfer/compressor/Pad_1_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/Pad_1_grad/Slice/begin"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/Pad_1_grad/Slice"
  op: "Slice"
  input: "fast_style_transfer/compressor/Pad_1/paddings"
  input: "gradients/fast_style_transfer/compressor/Pad_1_grad/Slice/begin"
  input: "gradients/fast_style_transfer/compressor/Pad_1_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/Pad_1_grad/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/Pad_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/compressor/Pad_1_grad/Slice"
  input: "gradients/fast_style_transfer/compressor/Pad_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/Pad_1_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/Pad_1_grad/Slice_1"
  op: "Slice"
  input: "gradients/fast_style_transfer/compressor/compressor/conv2/Conv2D_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/compressor/Pad_1_grad/Reshape"
  input: "gradients/fast_style_transfer/compressor/Pad_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv2/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/fast_style_transfer/compressor/compressor/conv2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Shape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/tuple/control_dependency"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Relu"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Sum_1"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Reshape_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/sub_grad/Neg"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/sub_grad/Neg"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Shape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/tuple/control_dependency"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Relu"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Sum_1"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Reshape_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/sub_grad/Neg"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/sub_grad/Neg"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/compressor_1/compressor/conv1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/compressor_1/compressor/conv1/Relu_grad/ReluGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv1/Relu_grad/ReluGrad"
  input: "^gradients/fast_style_transfer/compressor_1/compressor/conv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/compressor_1/compressor/conv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fast_style_transfer/compressor/Pad_1_grad/Slice_1"
  input: "fast_style_transfer/compressor/compressor/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv2/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/fast_style_transfer/compressor/compressor/conv2/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_2_grad/Mul"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_2_grad/Mul"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_2_grad/Mul_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_2_grad/Mul"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_2_grad/Mul"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_2_grad/Mul_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "fast_style_transfer/compressor_1/Pad"
  input: "fast_style_transfer/compressor_1/compressor/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv1/Conv2D_grad/ShapeN"
  input: "fast_style_transfer/compressor_1/compressor/conv1/Conv2D/ReadVariableOp"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fast_style_transfer/compressor_1/Pad"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv1/Conv2D_grad/ShapeN:1"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/compressor_1/compressor/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/compressor_1/compressor/conv1/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/fast_style_transfer/compressor_1/compressor/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor_1/compressor/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/compressor_1/compressor/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/fast_style_transfer/compressor/compressor/conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/compressor/compressor/conv1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/compressor/compressor/conv1/Relu_grad/ReluGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/compressor/compressor/conv1/Relu_grad/ReluGrad"
  input: "^gradients/fast_style_transfer/compressor/compressor/conv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor/compressor/conv1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/compressor/compressor/conv1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/compressor/compressor/conv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor/compressor/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Relu_grad/ReluGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Relu_grad/ReluGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_12"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_12"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_grad/Mul"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_grad/Mul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_grad/Mul"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_grad/Mul_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Relu_grad/ReluGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Relu_grad/ReluGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_13"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_13"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_grad/Mul"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_grad/Mul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_grad/Mul"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_grad/Mul_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "fast_style_transfer/compressor/Pad"
  input: "fast_style_transfer/compressor/compressor/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/fast_style_transfer/compressor/compressor/conv1/Conv2D_grad/ShapeN"
  input: "fast_style_transfer/compressor/compressor/conv1/Conv2D/ReadVariableOp"
  input: "gradients/fast_style_transfer/compressor/compressor/conv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fast_style_transfer/compressor/Pad"
  input: "gradients/fast_style_transfer/compressor/compressor/conv1/Conv2D_grad/ShapeN:1"
  input: "gradients/fast_style_transfer/compressor/compressor/conv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/compressor/compressor/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/compressor/compressor/conv1/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/compressor/compressor/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/fast_style_transfer/compressor/compressor/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor/compressor/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/compressor/compressor/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/compressor/compressor/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/compressor/compressor/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor/compressor/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/Rsqrt"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/Rsqrt"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv1/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/fast_style_transfer/compressor/compressor/conv1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot_grad/Reshape"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/MatMul_grad/MatMul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/Shape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/Sum_1"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/Reshape_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot_grad/Reshape"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/MatMul_grad/MatMul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/Shape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/Sum_1"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/Reshape_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/AddN_15"
  op: "AddN"
  input: "gradients/fast_style_transfer/compressor_1/compressor/conv1/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/fast_style_transfer/compressor/compressor/conv1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/Reshape_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/Reshape_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/Reshape_grad/Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/Reshape_grad/Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/Shape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/transpose_grad/transpose"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/transpose_grad/transpose"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/Sum_1"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/Shape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/transpose_grad/transpose"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/transpose_grad/transpose"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/Sum_1"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/Shape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/tuple/control_dependency"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Relu"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/Sum_1"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/Reshape_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/sub_grad/Neg"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/sub_grad/Neg"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/Shape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/tuple/control_dependency"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Relu"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/Sum_1"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/Reshape_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/sub_grad/Neg"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/sub_grad/Neg"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_2_grad/Mul"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_2_grad/Mul"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_2_grad/Mul_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_2_grad/Mul"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_2_grad/Mul"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_2_grad/Mul_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Relu_grad/ReluGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Relu_grad/ReluGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/AddN_16"
  op: "AddN"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_16"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_16"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_grad/Mul"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_grad/Mul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_grad/Mul"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_grad/Mul_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Relu_grad/ReluGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Relu_grad/ReluGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/AddN_17"
  op: "AddN"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_17"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_17"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_grad/Mul"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_grad/Mul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_grad/Mul"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_grad/Mul_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/Rsqrt"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/Rsqrt"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot_grad/Reshape"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/MatMul_grad/MatMul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/Shape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/Sum_1"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/Reshape_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot_grad/Reshape"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/MatMul_grad/MatMul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/Shape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/Sum_1"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/Reshape_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/Reshape_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/Reshape_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/Reshape_grad/Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/Reshape_grad/Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/Shape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/transpose_grad/transpose"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/Sum"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/RealDiv"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/Neg"
  op: "Neg"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/Neg"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/RealDiv_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/mul"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/transpose_grad/transpose"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/Sum_1"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/Reshape_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/Shape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/transpose_grad/transpose"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/Sum"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/RealDiv"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/Neg"
  op: "Neg"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/Neg"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/RealDiv_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/mul"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/transpose_grad/transpose"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/Sum_1"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/Reshape_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/MatMul_grad/MatMul"
  op: "BatchMatMul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/truediv"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/MatMul_grad/MatMul_1"
  op: "BatchMatMul"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/truediv"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/MatMul_grad/MatMul"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/MatMul_grad/MatMul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/MatMul_grad/MatMul"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/MatMul_grad/MatMul_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/MatMul_grad/MatMul"
  op: "BatchMatMul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/truediv"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/MatMul_grad/MatMul_1"
  op: "BatchMatMul"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/truediv"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/MatMul_grad/MatMul"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/MatMul_grad/MatMul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/MatMul_grad/MatMul"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/MatMul_grad/MatMul_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/AddN_18"
  op: "AddN"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/MatMul_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\000\020\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/Shape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/AddN_18"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/Sum"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/RealDiv"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/Neg"
  op: "Neg"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/Neg"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/RealDiv_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/mul"
  op: "Mul"
  input: "gradients/AddN_18"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/Sum_1"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/Sum_1"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/Reshape_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/AddN_19"
  op: "AddN"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/MatMul_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\000\020\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/Shape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/AddN_19"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/Sum"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/RealDiv"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/Neg"
  op: "Neg"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/Neg"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/RealDiv_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/mul"
  op: "Mul"
  input: "gradients/AddN_19"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/Sum_1"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/Sum_1"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/Reshape_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\000\020\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/Shape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/Sum"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/truediv_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/Neg"
  op: "Neg"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/Neg"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/Reshape_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\000\020\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/Shape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/Sum"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/truediv_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/Neg"
  op: "Neg"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/Neg"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/Reshape"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/Reshape_1"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\000\020\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Size"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/add"
  op: "Add"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/moments/mean/reduction_indices"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/add"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/range/start"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/range/delta"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/range"
  op: "Range"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/range/start"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Size"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Fill/value"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Shape_1"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/range"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/mod"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Shape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Maximum/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/DynamicStitch"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Shape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/tuple/control_dependency_1"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Const"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4096.0
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Tile"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\000\020\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Size"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/add"
  op: "Add"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/moments/mean/reduction_indices"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/add"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Shape_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/range/start"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/range/delta"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/range"
  op: "Range"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/range/start"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Size"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Fill/value"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Shape_1"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/range"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/mod"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Shape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Maximum/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/DynamicStitch"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Shape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/tuple/control_dependency_1"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Const"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4096.0
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Tile"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/AddN_20"
  op: "AddN"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Reshape_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_20"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/AddN_21"
  op: "AddN"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 4096
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Reshape_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_21"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Reshape_grad/Reshape"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Reshape_grad/Reshape"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Relu_grad/ReluGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Relu_grad/ReluGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Relu_grad/ReluGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Relu_grad/ReluGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/Pad_2"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D_grad/ShapeN"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D/ReadVariableOp"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/Pad_2"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D_grad/ShapeN:1"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/Pad_2"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D_grad/ShapeN"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D/ReadVariableOp"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/Pad_2"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D_grad/ShapeN:1"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_2_grad/Rank"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_2_grad/stack/1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_2_grad/stack"
  op: "Pack"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_2_grad/Rank"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_2_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_2_grad/Slice/begin"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_2_grad/Slice"
  op: "Slice"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/Pad_2/paddings"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_2_grad/Slice/begin"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_2_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_2_grad/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_2_grad/Slice"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_2_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_2_grad/Slice_1"
  op: "Slice"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_2_grad/Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_2_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_2_grad/Rank"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_2_grad/stack/1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_2_grad/stack"
  op: "Pack"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_2_grad/Rank"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_2_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_2_grad/Slice/begin"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_2_grad/Slice"
  op: "Slice"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/Pad_2/paddings"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_2_grad/Slice/begin"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_2_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_2_grad/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_2_grad/Slice"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_2_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_2_grad/Slice_1"
  op: "Slice"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_2_grad/Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_2_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_2_grad/Slice_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_2_grad/Slice_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Relu_grad/ReluGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Relu_grad/ReluGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Relu_grad/ReluGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Relu_grad/ReluGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/Pad_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D_grad/ShapeN"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D/ReadVariableOp"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/Pad_1"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D_grad/ShapeN:1"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/Pad_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D_grad/ShapeN"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D/ReadVariableOp"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/Pad_1"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D_grad/ShapeN:1"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_1_grad/Rank"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_1_grad/stack/1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_1_grad/stack"
  op: "Pack"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_1_grad/Rank"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_1_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_1_grad/Slice/begin"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_1_grad/Slice"
  op: "Slice"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/Pad_1/paddings"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_1_grad/Slice/begin"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_1_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_1_grad/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_1_grad/Slice"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_1_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_1_grad/Slice_1"
  op: "Slice"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_1_grad/Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_1_grad/Rank"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_1_grad/stack/1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_1_grad/stack"
  op: "Pack"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_1_grad/Rank"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_1_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_1_grad/Slice/begin"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_1_grad/Slice"
  op: "Slice"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/Pad_1/paddings"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_1_grad/Slice/begin"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_1_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_1_grad/Reshape/shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_1_grad/Slice"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_1_grad/Shape"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_1_grad/Slice_1"
  op: "Slice"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D_grad/tuple/control_dependency"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_1_grad/Reshape"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/Pad_1_grad/Slice_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/Pad_1_grad/Slice_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Relu_grad/ReluGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Relu_grad/ReluGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Relu_grad/ReluGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Relu_grad/ReluGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/Pad"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D_grad/ShapeN"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D/ReadVariableOp"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/Pad"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D_grad/ShapeN:1"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/Pad"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D_grad/ShapeN"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D/ReadVariableOp"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/Pad"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D_grad/ShapeN:1"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_1"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_2"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_3"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_4"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_5"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_6"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_7"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_8"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_9"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_10"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_11"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_12"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_13"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_14"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_15"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_16"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_17"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_18"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_19"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_20"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_21"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_22"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_23"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_24"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_25"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_26"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_27"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_28"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_29"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_30"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_31"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_32"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_33"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_34"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_35"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_36"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_37"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_38"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_39"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_40"
  op: "L2Loss"
  input: "gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_41"
  op: "L2Loss"
  input: "gradients/AddN_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_42"
  op: "L2Loss"
  input: "gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_43"
  op: "L2Loss"
  input: "gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_44"
  op: "L2Loss"
  input: "gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_45"
  op: "L2Loss"
  input: "gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_46"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_47"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_48"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_49"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_50"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_51"
  op: "L2Loss"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_52"
  op: "L2Loss"
  input: "gradients/vgg19_decoder/block3_conv1_decoder/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block3_conv1_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_53"
  op: "L2Loss"
  input: "gradients/vgg19_decoder/block3_conv1_decoder/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block3_conv1_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_54"
  op: "L2Loss"
  input: "gradients/vgg19_decoder/block2_conv2_transpose_decoder/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block2_conv2_transpose_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_55"
  op: "L2Loss"
  input: "gradients/vgg19_decoder/block2_conv2_transpose_decoder/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block2_conv2_transpose_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_56"
  op: "L2Loss"
  input: "gradients/vgg19_decoder/block2_conv1_decoder/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block2_conv1_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_57"
  op: "L2Loss"
  input: "gradients/vgg19_decoder/block2_conv1_decoder/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block2_conv1_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_58"
  op: "L2Loss"
  input: "gradients/vgg19_decoder/block1_conv2_transpose_decoder/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block1_conv2_transpose_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_59"
  op: "L2Loss"
  input: "gradients/vgg19_decoder/block1_conv2_transpose_decoder/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block1_conv2_transpose_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_60"
  op: "L2Loss"
  input: "gradients/vgg19_decoder/block1_conv1_decoder/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block1_conv1_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/L2Loss_61"
  op: "L2Loss"
  input: "gradients/vgg19_decoder/block1_conv1_decoder/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block1_conv1_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/stack"
  op: "Pack"
  input: "global_norm/L2Loss"
  input: "global_norm/L2Loss_1"
  input: "global_norm/L2Loss_2"
  input: "global_norm/L2Loss_3"
  input: "global_norm/L2Loss_4"
  input: "global_norm/L2Loss_5"
  input: "global_norm/L2Loss_6"
  input: "global_norm/L2Loss_7"
  input: "global_norm/L2Loss_8"
  input: "global_norm/L2Loss_9"
  input: "global_norm/L2Loss_10"
  input: "global_norm/L2Loss_11"
  input: "global_norm/L2Loss_12"
  input: "global_norm/L2Loss_13"
  input: "global_norm/L2Loss_14"
  input: "global_norm/L2Loss_15"
  input: "global_norm/L2Loss_16"
  input: "global_norm/L2Loss_17"
  input: "global_norm/L2Loss_18"
  input: "global_norm/L2Loss_19"
  input: "global_norm/L2Loss_20"
  input: "global_norm/L2Loss_21"
  input: "global_norm/L2Loss_22"
  input: "global_norm/L2Loss_23"
  input: "global_norm/L2Loss_24"
  input: "global_norm/L2Loss_25"
  input: "global_norm/L2Loss_26"
  input: "global_norm/L2Loss_27"
  input: "global_norm/L2Loss_28"
  input: "global_norm/L2Loss_29"
  input: "global_norm/L2Loss_30"
  input: "global_norm/L2Loss_31"
  input: "global_norm/L2Loss_32"
  input: "global_norm/L2Loss_33"
  input: "global_norm/L2Loss_34"
  input: "global_norm/L2Loss_35"
  input: "global_norm/L2Loss_36"
  input: "global_norm/L2Loss_37"
  input: "global_norm/L2Loss_38"
  input: "global_norm/L2Loss_39"
  input: "global_norm/L2Loss_40"
  input: "global_norm/L2Loss_41"
  input: "global_norm/L2Loss_42"
  input: "global_norm/L2Loss_43"
  input: "global_norm/L2Loss_44"
  input: "global_norm/L2Loss_45"
  input: "global_norm/L2Loss_46"
  input: "global_norm/L2Loss_47"
  input: "global_norm/L2Loss_48"
  input: "global_norm/L2Loss_49"
  input: "global_norm/L2Loss_50"
  input: "global_norm/L2Loss_51"
  input: "global_norm/L2Loss_52"
  input: "global_norm/L2Loss_53"
  input: "global_norm/L2Loss_54"
  input: "global_norm/L2Loss_55"
  input: "global_norm/L2Loss_56"
  input: "global_norm/L2Loss_57"
  input: "global_norm/L2Loss_58"
  input: "global_norm/L2Loss_59"
  input: "global_norm/L2Loss_60"
  input: "global_norm/L2Loss_61"
  attr {
    key: "N"
    value {
      i: 62
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "global_norm/Const"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/stack"
  input: "global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/Const_1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "global_norm/Sum"
  input: "global_norm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "VerifyFinite/CheckNumerics"
  op: "CheckNumerics"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_norm/global_norm"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "message"
    value {
      s: "Found Inf or NaN global norm."
    }
  }
}
node {
  name: "VerifyFinite/control_dependency"
  op: "Identity"
  input: "global_norm/global_norm"
  input: "^VerifyFinite/CheckNumerics"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_norm/global_norm"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "RealDiv"
  input: "clip_by_global_norm/truediv/x"
  input: "VerifyFinite/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv_1/y"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv_1"
  op: "RealDiv"
  input: "clip_by_global_norm/Const"
  input: "clip_by_global_norm/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_6"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_7"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/transpose_1_grad/transpose"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_7"
  op: "Identity"
  input: "clip_by_global_norm/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_8"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_8"
  op: "Identity"
  input: "clip_by_global_norm/mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_9"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_9"
  op: "Identity"
  input: "clip_by_global_norm/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_10"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/sub_grad/tuple/control_dependency"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_10"
  op: "Identity"
  input: "clip_by_global_norm/mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_11"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_11"
  op: "Identity"
  input: "clip_by_global_norm/mul_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_12"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/tuple/control_dependency"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_12"
  op: "Identity"
  input: "clip_by_global_norm/mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_13"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/transpose_1_grad/transpose"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_13"
  op: "Identity"
  input: "clip_by_global_norm/mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_14"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_14"
  op: "Identity"
  input: "clip_by_global_norm/mul_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_15"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_15"
  op: "Identity"
  input: "clip_by_global_norm/mul_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_16"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/sub_grad/tuple/control_dependency"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_16"
  op: "Identity"
  input: "clip_by_global_norm/mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_17"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_17"
  op: "Identity"
  input: "clip_by_global_norm/mul_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_18"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/tuple/control_dependency"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_18"
  op: "Identity"
  input: "clip_by_global_norm/mul_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_19"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/transpose_1_grad/transpose"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_19"
  op: "Identity"
  input: "clip_by_global_norm/mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_20"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_20"
  op: "Identity"
  input: "clip_by_global_norm/mul_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_21"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_21"
  op: "Identity"
  input: "clip_by_global_norm/mul_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_22"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_22"
  op: "Identity"
  input: "clip_by_global_norm/mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_23"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_23"
  op: "Identity"
  input: "clip_by_global_norm/mul_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_24"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_24"
  op: "Identity"
  input: "clip_by_global_norm/mul_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_25"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_25"
  op: "Identity"
  input: "clip_by_global_norm/mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_26"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_26"
  op: "Identity"
  input: "clip_by_global_norm/mul_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_27"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/transpose_1_grad/transpose"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_27"
  op: "Identity"
  input: "clip_by_global_norm/mul_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_28"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_28"
  op: "Identity"
  input: "clip_by_global_norm/mul_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_29"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_29"
  op: "Identity"
  input: "clip_by_global_norm/mul_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_30"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/sub_grad/tuple/control_dependency"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_30"
  op: "Identity"
  input: "clip_by_global_norm/mul_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_31"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_31"
  op: "Identity"
  input: "clip_by_global_norm/mul_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_32"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/tuple/control_dependency"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_32"
  op: "Identity"
  input: "clip_by_global_norm/mul_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_33"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/transpose_1_grad/transpose"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_33"
  op: "Identity"
  input: "clip_by_global_norm/mul_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_34"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_34"
  op: "Identity"
  input: "clip_by_global_norm/mul_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_35"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_35"
  op: "Identity"
  input: "clip_by_global_norm/mul_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_36"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/sub_grad/tuple/control_dependency"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_36"
  op: "Identity"
  input: "clip_by_global_norm/mul_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_37"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_37"
  op: "Identity"
  input: "clip_by_global_norm/mul_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_38"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/tuple/control_dependency"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_38"
  op: "Identity"
  input: "clip_by_global_norm/mul_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_39"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/transpose_1_grad/transpose"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_39"
  op: "Identity"
  input: "clip_by_global_norm/mul_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_40"
  op: "Mul"
  input: "gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_40"
  op: "Identity"
  input: "clip_by_global_norm/mul_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_41"
  op: "Mul"
  input: "gradients/AddN_15"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_41"
  op: "Identity"
  input: "clip_by_global_norm/mul_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_42"
  op: "Mul"
  input: "gradients/AddN_14"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_42"
  op: "Identity"
  input: "clip_by_global_norm/mul_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_43"
  op: "Mul"
  input: "gradients/AddN_11"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_43"
  op: "Identity"
  input: "clip_by_global_norm/mul_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_44"
  op: "Mul"
  input: "gradients/AddN_10"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_44"
  op: "Identity"
  input: "clip_by_global_norm/mul_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_45"
  op: "Mul"
  input: "gradients/AddN_9"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_45"
  op: "Identity"
  input: "clip_by_global_norm/mul_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_46"
  op: "Mul"
  input: "gradients/AddN_8"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_46"
  op: "Identity"
  input: "clip_by_global_norm/mul_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_47"
  op: "Mul"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_47"
  op: "Identity"
  input: "clip_by_global_norm/mul_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_48"
  op: "Mul"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv1/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_48"
  op: "Identity"
  input: "clip_by_global_norm/mul_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_49"
  op: "Mul"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_49"
  op: "Identity"
  input: "clip_by_global_norm/mul_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_50"
  op: "Mul"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv2/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_50"
  op: "Identity"
  input: "clip_by_global_norm/mul_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_51"
  op: "Mul"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_51"
  op: "Identity"
  input: "clip_by_global_norm/mul_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_52"
  op: "Mul"
  input: "gradients/fast_style_transfer/uncompressor/uncompressor/conv3/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_52"
  op: "Identity"
  input: "clip_by_global_norm/mul_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_53"
  op: "Mul"
  input: "gradients/vgg19_decoder/block3_conv1_decoder/Conv2D_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block3_conv1_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_53"
  op: "Identity"
  input: "clip_by_global_norm/mul_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block3_conv1_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_54"
  op: "Mul"
  input: "gradients/vgg19_decoder/block3_conv1_decoder/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block3_conv1_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_54"
  op: "Identity"
  input: "clip_by_global_norm/mul_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block3_conv1_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_55"
  op: "Mul"
  input: "gradients/vgg19_decoder/block2_conv2_transpose_decoder/Conv2D_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block2_conv2_transpose_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_55"
  op: "Identity"
  input: "clip_by_global_norm/mul_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block2_conv2_transpose_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_56"
  op: "Mul"
  input: "gradients/vgg19_decoder/block2_conv2_transpose_decoder/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block2_conv2_transpose_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_56"
  op: "Identity"
  input: "clip_by_global_norm/mul_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block2_conv2_transpose_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_57"
  op: "Mul"
  input: "gradients/vgg19_decoder/block2_conv1_decoder/Conv2D_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block2_conv1_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_57"
  op: "Identity"
  input: "clip_by_global_norm/mul_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block2_conv1_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_58"
  op: "Mul"
  input: "gradients/vgg19_decoder/block2_conv1_decoder/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block2_conv1_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_58"
  op: "Identity"
  input: "clip_by_global_norm/mul_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block2_conv1_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_59"
  op: "Mul"
  input: "gradients/vgg19_decoder/block1_conv2_transpose_decoder/Conv2D_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block1_conv2_transpose_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_59"
  op: "Identity"
  input: "clip_by_global_norm/mul_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block1_conv2_transpose_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_60"
  op: "Mul"
  input: "gradients/vgg19_decoder/block1_conv2_transpose_decoder/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block1_conv2_transpose_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_60"
  op: "Identity"
  input: "clip_by_global_norm/mul_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block1_conv2_transpose_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_61"
  op: "Mul"
  input: "gradients/vgg19_decoder/block1_conv1_decoder/Conv2D_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block1_conv1_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_61"
  op: "Identity"
  input: "clip_by_global_norm/mul_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block1_conv1_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/mul_62"
  op: "Mul"
  input: "gradients/vgg19_decoder/block1_conv1_decoder/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block1_conv1_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_62"
  op: "Identity"
  input: "clip_by_global_norm/mul_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block1_conv1_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  input: "CrossReplicaSum/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_1/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_1"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  input: "CrossReplicaSum_1/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_2/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_2"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  input: "CrossReplicaSum_2/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_3/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_3"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  input: "CrossReplicaSum_3/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_4/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_4"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  input: "CrossReplicaSum_4/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_5/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_5"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_6"
  input: "CrossReplicaSum_5/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_6/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_6"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_7"
  input: "CrossReplicaSum_6/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_7/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_7"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_8"
  input: "CrossReplicaSum_7/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_8/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_8"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_9"
  input: "CrossReplicaSum_8/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_9/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_9"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_10"
  input: "CrossReplicaSum_9/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_10/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_10"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_11"
  input: "CrossReplicaSum_10/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_11/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_11"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_12"
  input: "CrossReplicaSum_11/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_12/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_12"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_13"
  input: "CrossReplicaSum_12/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_13/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_13"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_14"
  input: "CrossReplicaSum_13/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_14/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_14"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_15"
  input: "CrossReplicaSum_14/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_15/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_15"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_16"
  input: "CrossReplicaSum_15/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_16/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_16"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_17"
  input: "CrossReplicaSum_16/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_17/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_17"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_18"
  input: "CrossReplicaSum_17/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_18/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_18"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_19"
  input: "CrossReplicaSum_18/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_19/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_19"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_20"
  input: "CrossReplicaSum_19/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_20/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_20"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_21"
  input: "CrossReplicaSum_20/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_21/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_21"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_22"
  input: "CrossReplicaSum_21/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_22/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_22"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_23"
  input: "CrossReplicaSum_22/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_23/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_23"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_24"
  input: "CrossReplicaSum_23/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_24/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_24"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_25"
  input: "CrossReplicaSum_24/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_25/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_25"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_26"
  input: "CrossReplicaSum_25/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_26/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_26"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_27"
  input: "CrossReplicaSum_26/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_27/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_27"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_28"
  input: "CrossReplicaSum_27/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_28/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_28"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_29"
  input: "CrossReplicaSum_28/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_29/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_29"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_30"
  input: "CrossReplicaSum_29/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_30/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_30"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_31"
  input: "CrossReplicaSum_30/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_31/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_31"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_32"
  input: "CrossReplicaSum_31/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_32/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_32"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_33"
  input: "CrossReplicaSum_32/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_33/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_33"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_34"
  input: "CrossReplicaSum_33/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_34/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_34"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_35"
  input: "CrossReplicaSum_34/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_35/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_35"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_36"
  input: "CrossReplicaSum_35/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_36/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_36"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_37"
  input: "CrossReplicaSum_36/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_37/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_37"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_38"
  input: "CrossReplicaSum_37/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_38/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_38"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_39"
  input: "CrossReplicaSum_38/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_39/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_39"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_40"
  input: "CrossReplicaSum_39/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_40/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_40"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_41"
  input: "CrossReplicaSum_40/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_41/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_41"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_42"
  input: "CrossReplicaSum_41/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_42/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_42"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_43"
  input: "CrossReplicaSum_42/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_43/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_43"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_44"
  input: "CrossReplicaSum_43/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_44/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_44"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_45"
  input: "CrossReplicaSum_44/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_45/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_45"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_46"
  input: "CrossReplicaSum_45/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/compressor_1/compressor/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_46/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_46"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_47"
  input: "CrossReplicaSum_46/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_47/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_47"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_48"
  input: "CrossReplicaSum_47/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_48/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_48"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_49"
  input: "CrossReplicaSum_48/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_49/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_49"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_50"
  input: "CrossReplicaSum_49/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_50/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_50"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_51"
  input: "CrossReplicaSum_50/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_51/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_51"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_52"
  input: "CrossReplicaSum_51/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fast_style_transfer/uncompressor/uncompressor/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_52/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block3_conv1_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_52"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_53"
  input: "CrossReplicaSum_52/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block3_conv1_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_53/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block3_conv1_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_53"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_54"
  input: "CrossReplicaSum_53/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block3_conv1_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_54/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block2_conv2_transpose_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_54"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_55"
  input: "CrossReplicaSum_54/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block2_conv2_transpose_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_55/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block2_conv2_transpose_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_55"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_56"
  input: "CrossReplicaSum_55/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block2_conv2_transpose_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_56/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block2_conv1_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_56"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_57"
  input: "CrossReplicaSum_56/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block2_conv1_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_57/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block2_conv1_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_57"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_58"
  input: "CrossReplicaSum_57/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block2_conv1_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_58/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block1_conv2_transpose_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_58"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_59"
  input: "CrossReplicaSum_58/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block1_conv2_transpose_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_59/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block1_conv2_transpose_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_59"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_60"
  input: "CrossReplicaSum_59/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block1_conv2_transpose_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_60/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block1_conv1_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_60"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_61"
  input: "CrossReplicaSum_60/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block1_conv1_decoder/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "CrossReplicaSum_61/group_assignment"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block1_conv1_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "CrossReplicaSum_61"
  op: "CrossReplicaSum"
  input: "clip_by_global_norm/clip_by_global_norm/_62"
  input: "CrossReplicaSum_61/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/vgg19_decoder/block1_conv1_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_3"
  op: "Identity"
  input: "Read_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "beta1_power/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_1/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_1/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "beta1_power"
    }
  }
}
node {
  name: "beta1_power/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_1/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "AssignVariableOp"
  input: "beta1_power"
  input: "beta1_power/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_1/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_1/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Read_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_4"
  op: "Identity"
  input: "Read_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "beta2_power/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_2/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_2/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "beta2_power"
    }
  }
}
node {
  name: "beta2_power/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_2/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "AssignVariableOp"
  input: "beta2_power"
  input: "beta2_power/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_2/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Read_2/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam_1"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam_1"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/bias/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/compressor/compressor/conv1/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/compressor/compressor/conv1/bias/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/bias/Adam"
  input: "fast_style_transfer/compressor/compressor/conv1/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/bias/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/compressor/compressor/conv1/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/compressor/compressor/conv1/bias/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/bias/Adam_1"
  input: "fast_style_transfer/compressor/compressor/conv1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv1/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/bias/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/compressor/compressor/conv2/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/compressor/compressor/conv2/bias/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/bias/Adam"
  input: "fast_style_transfer/compressor/compressor/conv2/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/bias/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/compressor/compressor/conv2/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/compressor/compressor/conv2/bias/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/bias/Adam_1"
  input: "fast_style_transfer/compressor/compressor/conv2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv2/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/bias/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/compressor/compressor/conv3/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/compressor/compressor/conv3/bias/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv3/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/bias/Adam"
  input: "fast_style_transfer/compressor/compressor/conv3/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/bias/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/compressor/compressor/conv3/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/compressor/compressor/conv3/bias/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv3/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/bias/Adam_1"
  input: "fast_style_transfer/compressor/compressor/conv3/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/compressor/compressor/conv3/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/compressor/compressor/conv3/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam_1"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam_1"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam/Identity"
  op: "Identity"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam_1/Identity"
  op: "Identity"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam_1"
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam_1"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel/Adam/Identity"
  op: "Identity"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block3_conv1_decoder/kernel/Adam"
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Adam"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel/Adam_1/Identity"
  op: "Identity"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block3_conv1_decoder/kernel/Adam_1"
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Adam_1"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/bias/Adam/Identity"
  op: "Identity"
  input: "vgg19_decoder/block3_conv1_decoder/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block3_conv1_decoder/bias/Adam"
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block3_conv1_decoder/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/bias/Adam"
  input: "vgg19_decoder/block3_conv1_decoder/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/bias/Adam_1/Identity"
  op: "Identity"
  input: "vgg19_decoder/block3_conv1_decoder/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block3_conv1_decoder/bias/Adam_1"
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block3_conv1_decoder/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/bias/Adam_1"
  input: "vgg19_decoder/block3_conv1_decoder/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block3_conv1_decoder/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block3_conv1_decoder/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam/Identity"
  op: "Identity"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam"
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1/Identity"
  op: "Identity"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1"
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam/Identity"
  op: "Identity"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam"
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam_1/Identity"
  op: "Identity"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam_1"
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam_1"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel/Adam/Identity"
  op: "Identity"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block2_conv1_decoder/kernel/Adam"
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Adam"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel/Adam_1/Identity"
  op: "Identity"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block2_conv1_decoder/kernel/Adam_1"
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Adam_1"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/bias/Adam/Identity"
  op: "Identity"
  input: "vgg19_decoder/block2_conv1_decoder/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block2_conv1_decoder/bias/Adam"
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv1_decoder/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/bias/Adam"
  input: "vgg19_decoder/block2_conv1_decoder/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/bias/Adam_1/Identity"
  op: "Identity"
  input: "vgg19_decoder/block2_conv1_decoder/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block2_conv1_decoder/bias/Adam_1"
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv1_decoder/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/bias/Adam_1"
  input: "vgg19_decoder/block2_conv1_decoder/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block2_conv1_decoder/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block2_conv1_decoder/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam/Identity"
  op: "Identity"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam"
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1/Identity"
  op: "Identity"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1"
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam/Identity"
  op: "Identity"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam"
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam_1/Identity"
  op: "Identity"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam_1"
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam_1"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/kernel/Adam/Identity"
  op: "Identity"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block1_conv1_decoder/kernel/Adam"
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Adam"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/kernel/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/kernel/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/kernel/Adam_1/Identity"
  op: "Identity"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block1_conv1_decoder/kernel/Adam_1"
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Adam_1"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/kernel/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/kernel/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/bias/Adam/Identity"
  op: "Identity"
  input: "vgg19_decoder/block1_conv1_decoder/bias/Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block1_conv1_decoder/bias/Adam"
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv1_decoder/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/bias/Adam"
  input: "vgg19_decoder/block1_conv1_decoder/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/bias/Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/bias/Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/bias/Adam_1/Identity"
  op: "Identity"
  input: "vgg19_decoder/block1_conv1_decoder/bias/Adam_1/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vgg19_decoder/block1_conv1_decoder/bias/Adam_1"
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv1_decoder/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/bias/Adam_1"
  input: "vgg19_decoder/block1_conv1_decoder/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vgg19_decoder/block1_conv1_decoder/bias/Adam_1/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vgg19_decoder/block1_conv1_decoder/bias/Adam_1/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  op: "Enter"
  input: "beta1_power"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  op: "Enter"
  input: "beta2_power"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/Conv2D/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/BiasAdd/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/Conv2D/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/BiasAdd/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/Conv2D/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/BiasAdd/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/Tensordot/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/BiasAdd/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/mul/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/ReadVariableOp_2/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/ReadVariableOp_2/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/ReadVariableOp_1/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/batchnorm/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/Tensordot/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/BiasAdd/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/mul/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/ReadVariableOp_2/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/ReadVariableOp_2/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/ReadVariableOp_1/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/batchnorm/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/Tensordot/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/BiasAdd/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/Conv2D/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/BiasAdd/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/Conv2D/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/BiasAdd/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/Conv2D/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/BiasAdd/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/Tensordot/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/BiasAdd/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/mul/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/ReadVariableOp_2/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/ReadVariableOp_2/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/ReadVariableOp_1/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/batchnorm/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/Tensordot/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/BiasAdd/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/mul/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/ReadVariableOp_2/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/ReadVariableOp_2/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/ReadVariableOp_1/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/batchnorm/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/Tensordot/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/BiasAdd/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv1/kernel/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv1/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv1/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv1/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/compressor/compressor/conv1/Conv2D/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv1/kernel/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv1/kernel/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv1/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/compressor/compressor/conv1/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv1/kernel/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/compressor/compressor/conv1/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv1/kernel/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/compressor/compressor/conv1/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv1/bias/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv1/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv1/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv1/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv1/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/compressor/compressor/conv1/BiasAdd/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv1/bias/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv1/bias/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv1/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv1/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/compressor/compressor/conv1/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv1/bias/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/compressor/compressor/conv1/bias/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/compressor/compressor/conv1/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv1/bias/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/compressor/compressor/conv1/bias/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/compressor/compressor/conv1/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv2/kernel/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv2/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv2/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv2/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/compressor/compressor/conv2/Conv2D/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv2/kernel/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv2/kernel/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv2/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/compressor/compressor/conv2/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv2/kernel/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/compressor/compressor/conv2/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv2/kernel/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/compressor/compressor/conv2/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv2/bias/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv2/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv2/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv2/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv2/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/compressor/compressor/conv2/BiasAdd/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv2/bias/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv2/bias/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv2/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv2/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/compressor/compressor/conv2/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv2/bias/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/compressor/compressor/conv2/bias/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/compressor/compressor/conv2/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv2/bias/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/compressor/compressor/conv2/bias/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/compressor/compressor/conv2/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv3/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv3/kernel/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv3/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv3/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv3/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv3/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/compressor/compressor/conv3/Conv2D/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv3/kernel/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv3/kernel/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv3/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv3/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/compressor/compressor/conv3/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv3/kernel/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/compressor/compressor/conv3/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv3/kernel/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/compressor/compressor/conv3/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv3/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv3/bias/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv3/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv3/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv3/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv3/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/compressor/compressor/conv3/BiasAdd/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv3/bias/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv3/bias/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv3/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/compressor/compressor/conv3/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/compressor/compressor/conv3/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv3/bias/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/compressor/compressor/conv3/bias/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/compressor/compressor/conv3/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/compressor/compressor/conv3/bias/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/compressor/compressor/conv3/bias/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/compressor/compressor/conv3/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/Conv2D/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/kernel/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/kernel/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/kernel/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/kernel/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/bias/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/BiasAdd/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/bias/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/bias/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/bias/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/bias/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/Conv2D/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/kernel/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/kernel/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/kernel/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/kernel/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/bias/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/BiasAdd/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/bias/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/bias/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/bias/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/bias/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/Conv2D/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/kernel/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/kernel/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/kernel/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/kernel/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/bias/Identity"
  op: "Identity"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/BiasAdd/ReadVariableOp/Enter"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/bias/ResourceApplyAdam/Enter"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/bias/ResourceApplyAdam/Enter_1"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/bias/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/bias/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block3_conv1_decoder/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block3_conv1_decoder/kernel/Identity"
  op: "Identity"
  input: "Adam/update_vgg19_decoder/block3_conv1_decoder/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block3_conv1_decoder/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block3_conv1_decoder/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block3_conv1_decoder/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "vgg19_decoder/block3_conv1_decoder/Conv2D/ReadVariableOp/Enter"
  input: "Adam/update_vgg19_decoder/block3_conv1_decoder/kernel/ResourceApplyAdam/Enter"
  input: "Adam/update_vgg19_decoder/block3_conv1_decoder/kernel/ResourceApplyAdam/Enter_1"
  input: "Adam/update_vgg19_decoder/block3_conv1_decoder/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_vgg19_decoder/block3_conv1_decoder/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block3_conv1_decoder/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block3_conv1_decoder/kernel/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block3_conv1_decoder/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block3_conv1_decoder/kernel/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block3_conv1_decoder/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block3_conv1_decoder/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block3_conv1_decoder/bias/Identity"
  op: "Identity"
  input: "Adam/update_vgg19_decoder/block3_conv1_decoder/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block3_conv1_decoder/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block3_conv1_decoder/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block3_conv1_decoder/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "vgg19_decoder/block3_conv1_decoder/BiasAdd/ReadVariableOp/Enter"
  input: "Adam/update_vgg19_decoder/block3_conv1_decoder/bias/ResourceApplyAdam/Enter"
  input: "Adam/update_vgg19_decoder/block3_conv1_decoder/bias/ResourceApplyAdam/Enter_1"
  input: "Adam/update_vgg19_decoder/block3_conv1_decoder/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_vgg19_decoder/block3_conv1_decoder/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block3_conv1_decoder/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block3_conv1_decoder/bias/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "vgg19_decoder/block3_conv1_decoder/bias/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block3_conv1_decoder/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block3_conv1_decoder/bias/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "vgg19_decoder/block3_conv1_decoder/bias/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block3_conv1_decoder/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/kernel/Identity"
  op: "Identity"
  input: "Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/Conv2D/ReadVariableOp/Enter"
  input: "Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/kernel/ResourceApplyAdam/Enter"
  input: "Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/kernel/ResourceApplyAdam/Enter_1"
  input: "Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/kernel/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/kernel/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/bias/Identity"
  op: "Identity"
  input: "Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/BiasAdd/ReadVariableOp/Enter"
  input: "Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/bias/ResourceApplyAdam/Enter"
  input: "Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/bias/ResourceApplyAdam/Enter_1"
  input: "Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/bias/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/bias/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block2_conv1_decoder/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block2_conv1_decoder/kernel/Identity"
  op: "Identity"
  input: "Adam/update_vgg19_decoder/block2_conv1_decoder/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block2_conv1_decoder/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block2_conv1_decoder/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block2_conv1_decoder/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "vgg19_decoder/block2_conv1_decoder/Conv2D/ReadVariableOp/Enter"
  input: "Adam/update_vgg19_decoder/block2_conv1_decoder/kernel/ResourceApplyAdam/Enter"
  input: "Adam/update_vgg19_decoder/block2_conv1_decoder/kernel/ResourceApplyAdam/Enter_1"
  input: "Adam/update_vgg19_decoder/block2_conv1_decoder/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_vgg19_decoder/block2_conv1_decoder/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block2_conv1_decoder/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block2_conv1_decoder/kernel/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block2_conv1_decoder/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block2_conv1_decoder/kernel/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block2_conv1_decoder/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block2_conv1_decoder/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block2_conv1_decoder/bias/Identity"
  op: "Identity"
  input: "Adam/update_vgg19_decoder/block2_conv1_decoder/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block2_conv1_decoder/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block2_conv1_decoder/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block2_conv1_decoder/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "vgg19_decoder/block2_conv1_decoder/BiasAdd/ReadVariableOp/Enter"
  input: "Adam/update_vgg19_decoder/block2_conv1_decoder/bias/ResourceApplyAdam/Enter"
  input: "Adam/update_vgg19_decoder/block2_conv1_decoder/bias/ResourceApplyAdam/Enter_1"
  input: "Adam/update_vgg19_decoder/block2_conv1_decoder/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_vgg19_decoder/block2_conv1_decoder/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block2_conv1_decoder/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block2_conv1_decoder/bias/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "vgg19_decoder/block2_conv1_decoder/bias/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block2_conv1_decoder/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block2_conv1_decoder/bias/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "vgg19_decoder/block2_conv1_decoder/bias/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block2_conv1_decoder/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/kernel/Identity"
  op: "Identity"
  input: "Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/Conv2D/ReadVariableOp/Enter"
  input: "Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/kernel/ResourceApplyAdam/Enter"
  input: "Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/kernel/ResourceApplyAdam/Enter_1"
  input: "Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/kernel/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/kernel/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/bias/Identity"
  op: "Identity"
  input: "Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/BiasAdd/ReadVariableOp/Enter"
  input: "Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/bias/ResourceApplyAdam/Enter"
  input: "Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/bias/ResourceApplyAdam/Enter_1"
  input: "Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/bias/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/bias/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block1_conv1_decoder/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/Conv2D/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block1_conv1_decoder/kernel/Identity"
  op: "Identity"
  input: "Adam/update_vgg19_decoder/block1_conv1_decoder/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block1_conv1_decoder/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block1_conv1_decoder/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block1_conv1_decoder/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "vgg19_decoder/block1_conv1_decoder/Conv2D/ReadVariableOp/Enter"
  input: "Adam/update_vgg19_decoder/block1_conv1_decoder/kernel/ResourceApplyAdam/Enter"
  input: "Adam/update_vgg19_decoder/block1_conv1_decoder/kernel/ResourceApplyAdam/Enter_1"
  input: "Adam/update_vgg19_decoder/block1_conv1_decoder/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_vgg19_decoder/block1_conv1_decoder/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block1_conv1_decoder/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block1_conv1_decoder/kernel/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block1_conv1_decoder/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block1_conv1_decoder/kernel/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block1_conv1_decoder/kernel/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block1_conv1_decoder/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block1_conv1_decoder/bias/Identity"
  op: "Identity"
  input: "Adam/update_vgg19_decoder/block1_conv1_decoder/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block1_conv1_decoder/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block1_conv1_decoder/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block1_conv1_decoder/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "vgg19_decoder/block1_conv1_decoder/BiasAdd/ReadVariableOp/Enter"
  input: "Adam/update_vgg19_decoder/block1_conv1_decoder/bias/ResourceApplyAdam/Enter"
  input: "Adam/update_vgg19_decoder/block1_conv1_decoder/bias/ResourceApplyAdam/Enter_1"
  input: "Adam/update_vgg19_decoder/block1_conv1_decoder/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_vgg19_decoder/block1_conv1_decoder/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "NaturalExpDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "CrossReplicaSum_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block1_conv1_decoder/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block1_conv1_decoder/bias/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "vgg19_decoder/block1_conv1_decoder/bias/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block1_conv1_decoder/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/update_vgg19_decoder/block1_conv1_decoder/bias/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "vgg19_decoder/block1_conv1_decoder/bias/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/update_vgg19_decoder/block1_conv1_decoder/bias/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block1_conv1_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block1_conv1_decoder/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block2_conv1_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block2_conv1_decoder/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block3_conv1_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block3_conv1_decoder/kernel/ResourceApplyAdam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/Identity"
  op: "Identity"
  input: "Adam/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block1_conv1_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block1_conv1_decoder/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block2_conv1_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block2_conv1_decoder/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block3_conv1_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block3_conv1_decoder/kernel/ResourceApplyAdam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/AssignVariableOp"
  op: "AssignVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "Adam/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^Adam/AssignVariableOp"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block1_conv1_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block1_conv1_decoder/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block2_conv1_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block2_conv1_decoder/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block3_conv1_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block3_conv1_decoder/kernel/ResourceApplyAdam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block1_conv1_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block1_conv1_decoder/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block2_conv1_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block2_conv1_decoder/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block3_conv1_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block3_conv1_decoder/kernel/ResourceApplyAdam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "Adam/ReadVariableOp_2"
  input: "Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "Adam/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^Adam/AssignVariableOp_1"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block1_conv1_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block1_conv1_decoder/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block2_conv1_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block2_conv1_decoder/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block3_conv1_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block3_conv1_decoder/kernel/ResourceApplyAdam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/Read/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update"
  op: "NoOp"
  input: "^Adam/ReadVariableOp_1"
  input: "^Adam/ReadVariableOp_3"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/compressor/compressor/conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv1/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv2/kernel/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/bias/ResourceApplyAdam"
  input: "^Adam/update_fast_style_transfer/uncompressor/uncompressor/conv3/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block1_conv1_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block1_conv1_decoder/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block1_conv2_transpose_decoder/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block2_conv1_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block2_conv1_decoder/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block2_conv2_transpose_decoder/kernel/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block3_conv1_decoder/bias/ResourceApplyAdam"
  input: "^Adam/update_vgg19_decoder/block3_conv1_decoder/kernel/ResourceApplyAdam"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "NaturalExpDecay/Cast_2/ReadVariableOp/Enter"
  input: "^Adam/update"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Adam/Identity_1"
  op: "Identity"
  input: "Adam/Read_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Adam/Const"
  op: "Const"
  input: "^Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/Read_1/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "Adam"
  op: "AssignAddVariableOp"
  input: "NaturalExpDecay/Cast_2/ReadVariableOp/Enter"
  input: "Adam/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/Read_1/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Identity_5"
  op: "Identity"
  input: "add_8"
  input: "^Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "NextIteration"
  op: "NextIteration"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "NextIteration_1"
  op: "NextIteration"
  input: "Identity_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Exit"
  op: "Exit"
  input: "Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Exit_1"
  op: "Exit"
  input: "Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "NoOp"
  op: "NoOp"
  input: "^cluster/pivot"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Identity_6"
  op: "Identity"
  input: "Exit_1"
  device: "/device:TPU_REPLICATED_CORE:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "output0"
  op: "TPUReplicatedOutput"
  input: "Identity_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "num_replicas"
    value {
      i: 8
    }
  }
}
node {
  name: "TPUCompilationResult"
  op: "TPUCompilationResult"
  input: "^TPUReplicateMetadata"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_compilation_status"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "output_0_shard_0"
  op: "Identity"
  input: "output0"
  input: "^NoOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "output_0_shard_1"
  op: "Identity"
  input: "output0:1"
  input: "^NoOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "output_0_shard_2"
  op: "Identity"
  input: "output0:2"
  input: "^NoOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "output_0_shard_3"
  op: "Identity"
  input: "output0:3"
  input: "^NoOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "output_0_shard_4"
  op: "Identity"
  input: "output0:4"
  input: "^NoOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "output_0_shard_5"
  op: "Identity"
  input: "output0:5"
  input: "^NoOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "output_0_shard_6"
  op: "Identity"
  input: "output0:6"
  input: "^NoOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "output_0_shard_7"
  op: "Identity"
  input: "output0:7"
  input: "^NoOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Identity_7/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Identity_7"
  op: "Identity"
  input: "Identity_7/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Identity_8"
  op: "Identity"
  input: "output_0_shard_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "output_0_shard_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Read_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_9"
  op: "Identity"
  input: "Read_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics"
  op: "CheckNumerics"
  input: "Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel:0 is NaN"
    }
  }
}
node {
  name: "Read_4/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_10"
  op: "Identity"
  input: "Read_4/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_1"
  op: "CheckNumerics"
  input: "Identity_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias:0 is NaN"
    }
  }
}
node {
  name: "Read_5/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_11"
  op: "Identity"
  input: "Read_5/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_2"
  op: "CheckNumerics"
  input: "Identity_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel:0 is NaN"
    }
  }
}
node {
  name: "Read_6/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_12"
  op: "Identity"
  input: "Read_6/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_3"
  op: "CheckNumerics"
  input: "Identity_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias:0 is NaN"
    }
  }
}
node {
  name: "Read_7/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_13"
  op: "Identity"
  input: "Read_7/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_4"
  op: "CheckNumerics"
  input: "Identity_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel:0 is NaN"
    }
  }
}
node {
  name: "Read_8/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_14"
  op: "Identity"
  input: "Read_8/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_5"
  op: "CheckNumerics"
  input: "Identity_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias:0 is NaN"
    }
  }
}
node {
  name: "Read_9/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_15"
  op: "Identity"
  input: "Read_9/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_6"
  op: "CheckNumerics"
  input: "Identity_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel:0 is NaN"
    }
  }
}
node {
  name: "Read_10/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_16"
  op: "Identity"
  input: "Read_10/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_7"
  op: "CheckNumerics"
  input: "Identity_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias:0 is NaN"
    }
  }
}
node {
  name: "Read_11/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_17"
  op: "Identity"
  input: "Read_11/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_8"
  op: "CheckNumerics"
  input: "Identity_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma:0 is NaN"
    }
  }
}
node {
  name: "Read_12/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_18"
  op: "Identity"
  input: "Read_12/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_9"
  op: "CheckNumerics"
  input: "Identity_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta:0 is NaN"
    }
  }
}
node {
  name: "Read_13/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_19"
  op: "Identity"
  input: "Read_13/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_10"
  op: "CheckNumerics"
  input: "Identity_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel:0 is NaN"
    }
  }
}
node {
  name: "Read_14/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_20"
  op: "Identity"
  input: "Read_14/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_11"
  op: "CheckNumerics"
  input: "Identity_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias:0 is NaN"
    }
  }
}
node {
  name: "Read_15/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_21"
  op: "Identity"
  input: "Read_15/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_12"
  op: "CheckNumerics"
  input: "Identity_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma:0 is NaN"
    }
  }
}
node {
  name: "Read_16/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_22"
  op: "Identity"
  input: "Read_16/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_13"
  op: "CheckNumerics"
  input: "Identity_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta:0 is NaN"
    }
  }
}
node {
  name: "Read_17/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_23"
  op: "Identity"
  input: "Read_17/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_14"
  op: "CheckNumerics"
  input: "Identity_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel:0 is NaN"
    }
  }
}
node {
  name: "Read_18/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_24"
  op: "Identity"
  input: "Read_18/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_15"
  op: "CheckNumerics"
  input: "Identity_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias:0 is NaN"
    }
  }
}
node {
  name: "Read_19/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_25"
  op: "Identity"
  input: "Read_19/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_16"
  op: "CheckNumerics"
  input: "Identity_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel:0 is NaN"
    }
  }
}
node {
  name: "Read_20/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_26"
  op: "Identity"
  input: "Read_20/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_17"
  op: "CheckNumerics"
  input: "Identity_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias:0 is NaN"
    }
  }
}
node {
  name: "Read_21/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_27"
  op: "Identity"
  input: "Read_21/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_18"
  op: "CheckNumerics"
  input: "Identity_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel:0 is NaN"
    }
  }
}
node {
  name: "Read_22/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_28"
  op: "Identity"
  input: "Read_22/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_19"
  op: "CheckNumerics"
  input: "Identity_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias:0 is NaN"
    }
  }
}
node {
  name: "Read_23/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_29"
  op: "Identity"
  input: "Read_23/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_20"
  op: "CheckNumerics"
  input: "Identity_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel:0 is NaN"
    }
  }
}
node {
  name: "Read_24/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_30"
  op: "Identity"
  input: "Read_24/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_21"
  op: "CheckNumerics"
  input: "Identity_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias:0 is NaN"
    }
  }
}
node {
  name: "Read_25/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_31"
  op: "Identity"
  input: "Read_25/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_22"
  op: "CheckNumerics"
  input: "Identity_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel:0 is NaN"
    }
  }
}
node {
  name: "Read_26/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_32"
  op: "Identity"
  input: "Read_26/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_23"
  op: "CheckNumerics"
  input: "Identity_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias:0 is NaN"
    }
  }
}
node {
  name: "Read_27/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_33"
  op: "Identity"
  input: "Read_27/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_24"
  op: "CheckNumerics"
  input: "Identity_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma:0 is NaN"
    }
  }
}
node {
  name: "Read_28/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_34"
  op: "Identity"
  input: "Read_28/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_25"
  op: "CheckNumerics"
  input: "Identity_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta:0 is NaN"
    }
  }
}
node {
  name: "Read_29/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_35"
  op: "Identity"
  input: "Read_29/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_26"
  op: "CheckNumerics"
  input: "Identity_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel:0 is NaN"
    }
  }
}
node {
  name: "Read_30/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_36"
  op: "Identity"
  input: "Read_30/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_27"
  op: "CheckNumerics"
  input: "Identity_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias:0 is NaN"
    }
  }
}
node {
  name: "Read_31/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_37"
  op: "Identity"
  input: "Read_31/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_28"
  op: "CheckNumerics"
  input: "Identity_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma:0 is NaN"
    }
  }
}
node {
  name: "Read_32/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_38"
  op: "Identity"
  input: "Read_32/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_29"
  op: "CheckNumerics"
  input: "Identity_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta:0 is NaN"
    }
  }
}
node {
  name: "Read_33/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_39"
  op: "Identity"
  input: "Read_33/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_30"
  op: "CheckNumerics"
  input: "Identity_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel:0 is NaN"
    }
  }
}
node {
  name: "Read_34/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_40"
  op: "Identity"
  input: "Read_34/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_31"
  op: "CheckNumerics"
  input: "Identity_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias:0 is NaN"
    }
  }
}
node {
  name: "Read_35/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_41"
  op: "Identity"
  input: "Read_35/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_32"
  op: "CheckNumerics"
  input: "Identity_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/compressor/compressor/conv1/kernel:0 is NaN"
    }
  }
}
node {
  name: "Read_36/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/bias"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_42"
  op: "Identity"
  input: "Read_36/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_33"
  op: "CheckNumerics"
  input: "Identity_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/compressor/compressor/conv1/bias:0 is NaN"
    }
  }
}
node {
  name: "Read_37/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_43"
  op: "Identity"
  input: "Read_37/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_34"
  op: "CheckNumerics"
  input: "Identity_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/compressor/compressor/conv2/kernel:0 is NaN"
    }
  }
}
node {
  name: "Read_38/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/bias"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_44"
  op: "Identity"
  input: "Read_38/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_35"
  op: "CheckNumerics"
  input: "Identity_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/compressor/compressor/conv2/bias:0 is NaN"
    }
  }
}
node {
  name: "Read_39/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_45"
  op: "Identity"
  input: "Read_39/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_36"
  op: "CheckNumerics"
  input: "Identity_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/compressor/compressor/conv3/kernel:0 is NaN"
    }
  }
}
node {
  name: "Read_40/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/bias"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_46"
  op: "Identity"
  input: "Read_40/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_37"
  op: "CheckNumerics"
  input: "Identity_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/compressor/compressor/conv3/bias:0 is NaN"
    }
  }
}
node {
  name: "Read_41/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_47"
  op: "Identity"
  input: "Read_41/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_38"
  op: "CheckNumerics"
  input: "Identity_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/uncompressor/uncompressor/conv1/kernel:0 is NaN"
    }
  }
}
node {
  name: "Read_42/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_48"
  op: "Identity"
  input: "Read_42/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_39"
  op: "CheckNumerics"
  input: "Identity_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/uncompressor/uncompressor/conv1/bias:0 is NaN"
    }
  }
}
node {
  name: "Read_43/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_49"
  op: "Identity"
  input: "Read_43/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_40"
  op: "CheckNumerics"
  input: "Identity_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/uncompressor/uncompressor/conv2/kernel:0 is NaN"
    }
  }
}
node {
  name: "Read_44/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_50"
  op: "Identity"
  input: "Read_44/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_41"
  op: "CheckNumerics"
  input: "Identity_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/uncompressor/uncompressor/conv2/bias:0 is NaN"
    }
  }
}
node {
  name: "Read_45/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_51"
  op: "Identity"
  input: "Read_45/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_42"
  op: "CheckNumerics"
  input: "Identity_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/uncompressor/uncompressor/conv3/kernel:0 is NaN"
    }
  }
}
node {
  name: "Read_46/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_52"
  op: "Identity"
  input: "Read_46/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_43"
  op: "CheckNumerics"
  input: "Identity_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for fast_style_transfer/uncompressor/uncompressor/conv3/bias:0 is NaN"
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^CheckNumerics"
  input: "^CheckNumerics_1"
  input: "^CheckNumerics_10"
  input: "^CheckNumerics_11"
  input: "^CheckNumerics_12"
  input: "^CheckNumerics_13"
  input: "^CheckNumerics_14"
  input: "^CheckNumerics_15"
  input: "^CheckNumerics_16"
  input: "^CheckNumerics_17"
  input: "^CheckNumerics_18"
  input: "^CheckNumerics_19"
  input: "^CheckNumerics_2"
  input: "^CheckNumerics_20"
  input: "^CheckNumerics_21"
  input: "^CheckNumerics_22"
  input: "^CheckNumerics_23"
  input: "^CheckNumerics_24"
  input: "^CheckNumerics_25"
  input: "^CheckNumerics_26"
  input: "^CheckNumerics_27"
  input: "^CheckNumerics_28"
  input: "^CheckNumerics_29"
  input: "^CheckNumerics_3"
  input: "^CheckNumerics_30"
  input: "^CheckNumerics_31"
  input: "^CheckNumerics_32"
  input: "^CheckNumerics_33"
  input: "^CheckNumerics_34"
  input: "^CheckNumerics_35"
  input: "^CheckNumerics_36"
  input: "^CheckNumerics_37"
  input: "^CheckNumerics_38"
  input: "^CheckNumerics_39"
  input: "^CheckNumerics_4"
  input: "^CheckNumerics_40"
  input: "^CheckNumerics_41"
  input: "^CheckNumerics_42"
  input: "^CheckNumerics_43"
  input: "^CheckNumerics_5"
  input: "^CheckNumerics_6"
  input: "^CheckNumerics_7"
  input: "^CheckNumerics_8"
  input: "^CheckNumerics_9"
}
node {
  name: "ConfigureDistributedTPU"
  op: "ConfigureDistributedTPU"
  device: "/job:worker/device:TPU_SYSTEM:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "embedding_config"
    value {
      s: ""
    }
  }
  attr {
    key: "is_global_init"
    value {
      b: false
    }
  }
  attr {
    key: "tpu_embedding_config"
    value {
      s: ""
    }
  }
}
node {
  name: "ShutdownDistributedTPU"
  op: "ShutdownDistributedTPU"
  device: "/job:worker/device:TPU_SYSTEM:0"
}
node {
  name: "init"
  op: "NoOp"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fast_style_transfer/compressor/compressor/conv1/bias/Adam/Assign"
  input: "^fast_style_transfer/compressor/compressor/conv1/bias/Adam_1/Assign"
  input: "^fast_style_transfer/compressor/compressor/conv1/bias/Assign"
  input: "^fast_style_transfer/compressor/compressor/conv1/kernel/Adam/Assign"
  input: "^fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1/Assign"
  input: "^fast_style_transfer/compressor/compressor/conv1/kernel/Assign"
  input: "^fast_style_transfer/compressor/compressor/conv2/bias/Adam/Assign"
  input: "^fast_style_transfer/compressor/compressor/conv2/bias/Adam_1/Assign"
  input: "^fast_style_transfer/compressor/compressor/conv2/bias/Assign"
  input: "^fast_style_transfer/compressor/compressor/conv2/kernel/Adam/Assign"
  input: "^fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1/Assign"
  input: "^fast_style_transfer/compressor/compressor/conv2/kernel/Assign"
  input: "^fast_style_transfer/compressor/compressor/conv3/bias/Adam/Assign"
  input: "^fast_style_transfer/compressor/compressor/conv3/bias/Adam_1/Assign"
  input: "^fast_style_transfer/compressor/compressor/conv3/bias/Assign"
  input: "^fast_style_transfer/compressor/compressor/conv3/kernel/Adam/Assign"
  input: "^fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1/Assign"
  input: "^fast_style_transfer/compressor/compressor/conv3/kernel/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1/Assign"
  input: "^fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Assign"
  input: "^fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam/Assign"
  input: "^fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam_1/Assign"
  input: "^fast_style_transfer/uncompressor/uncompressor/conv1/bias/Assign"
  input: "^fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam/Assign"
  input: "^fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1/Assign"
  input: "^fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Assign"
  input: "^fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam/Assign"
  input: "^fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam_1/Assign"
  input: "^fast_style_transfer/uncompressor/uncompressor/conv2/bias/Assign"
  input: "^fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam/Assign"
  input: "^fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1/Assign"
  input: "^fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Assign"
  input: "^fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam/Assign"
  input: "^fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam_1/Assign"
  input: "^fast_style_transfer/uncompressor/uncompressor/conv3/bias/Assign"
  input: "^fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam/Assign"
  input: "^fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1/Assign"
  input: "^fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Assign"
  input: "^global_step/Assign"
  input: "^vgg19_decoder/block1_conv1_decoder/bias/Adam/Assign"
  input: "^vgg19_decoder/block1_conv1_decoder/bias/Adam_1/Assign"
  input: "^vgg19_decoder/block1_conv1_decoder/bias/Assign"
  input: "^vgg19_decoder/block1_conv1_decoder/kernel/Adam/Assign"
  input: "^vgg19_decoder/block1_conv1_decoder/kernel/Adam_1/Assign"
  input: "^vgg19_decoder/block1_conv1_decoder/kernel/Assign"
  input: "^vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam/Assign"
  input: "^vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam_1/Assign"
  input: "^vgg19_decoder/block1_conv2_transpose_decoder/bias/Assign"
  input: "^vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam/Assign"
  input: "^vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1/Assign"
  input: "^vgg19_decoder/block1_conv2_transpose_decoder/kernel/Assign"
  input: "^vgg19_decoder/block2_conv1_decoder/bias/Adam/Assign"
  input: "^vgg19_decoder/block2_conv1_decoder/bias/Adam_1/Assign"
  input: "^vgg19_decoder/block2_conv1_decoder/bias/Assign"
  input: "^vgg19_decoder/block2_conv1_decoder/kernel/Adam/Assign"
  input: "^vgg19_decoder/block2_conv1_decoder/kernel/Adam_1/Assign"
  input: "^vgg19_decoder/block2_conv1_decoder/kernel/Assign"
  input: "^vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam/Assign"
  input: "^vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam_1/Assign"
  input: "^vgg19_decoder/block2_conv2_transpose_decoder/bias/Assign"
  input: "^vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam/Assign"
  input: "^vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1/Assign"
  input: "^vgg19_decoder/block2_conv2_transpose_decoder/kernel/Assign"
  input: "^vgg19_decoder/block3_conv1_decoder/bias/Adam/Assign"
  input: "^vgg19_decoder/block3_conv1_decoder/bias/Adam_1/Assign"
  input: "^vgg19_decoder/block3_conv1_decoder/bias/Assign"
  input: "^vgg19_decoder/block3_conv1_decoder/kernel/Adam/Assign"
  input: "^vgg19_decoder/block3_conv1_decoder/kernel/Adam_1/Assign"
  input: "^vgg19_decoder/block3_conv1_decoder/kernel/Assign"
  input: "^vgg19_encoder/block1_conv1/bias/Assign"
  input: "^vgg19_encoder/block1_conv1/kernel/Assign"
  input: "^vgg19_encoder/block1_conv2/bias/Assign"
  input: "^vgg19_encoder/block1_conv2/kernel/Assign"
  input: "^vgg19_encoder/block2_conv1/bias/Assign"
  input: "^vgg19_encoder/block2_conv1/kernel/Assign"
  input: "^vgg19_encoder/block2_conv2/bias/Assign"
  input: "^vgg19_encoder/block2_conv2/kernel/Assign"
  input: "^vgg19_encoder/block3_conv1/bias/Assign"
  input: "^vgg19_encoder/block3_conv1/kernel/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block1_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block1_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block1_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block1_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block2_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block2_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block2_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block2_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block3_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block3_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_40"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_41"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_42"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_43"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_44"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_45"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_46"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_47"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_48"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_49"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_50"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_51"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_52"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_53"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_54"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_55"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_56"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_57"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_58"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_59"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_60"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_61"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_62"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_63"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block3_conv1_decoder/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_64"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block3_conv1_decoder/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_65"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_66"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_67"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv1_decoder/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_68"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv1_decoder/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_69"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_70"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_71"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv1_decoder/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_72"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv1_decoder/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_73"
  op: "VarIsInitializedOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_74"
  op: "VarIsInitializedOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_75"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_76"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_77"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_78"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_79"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_80"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_81"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_82"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_83"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_84"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_85"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_86"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_87"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_88"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_89"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_90"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_91"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_92"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_93"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_94"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_95"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_96"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_97"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_98"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_99"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_100"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_101"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_102"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_103"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_104"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_105"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_106"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_107"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_108"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_109"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_110"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_111"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_112"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_113"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_114"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_115"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_116"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_117"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_118"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_119"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_120"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_121"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_122"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_123"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_124"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_125"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_126"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_127"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_128"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_129"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_130"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_131"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_132"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_133"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_134"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_135"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_136"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_137"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_138"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_139"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_140"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_141"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_142"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_143"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_144"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_145"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_146"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_147"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_148"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_149"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_150"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_151"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_152"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_153"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_154"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_155"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_156"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_157"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_158"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_159"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_160"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_161"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_162"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_163"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_164"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_165"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv3/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_166"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv3/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_167"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_168"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_169"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_170"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_171"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_172"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_173"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_174"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_175"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_176"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_177"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_178"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_179"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_180"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_181"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block3_conv1_decoder/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_182"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block3_conv1_decoder/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_183"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_184"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_185"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_186"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_187"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_188"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_189"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv1_decoder/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_190"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv1_decoder/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_191"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_192"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_193"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_194"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_195"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_196"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_197"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv1_decoder/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_198"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv1_decoder/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_199"
  op: "VarIsInitializedOp"
  input: "tpu_estimator/iterations_per_loop"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/VarIsInitializedOp"
  input: "report_uninitialized_variables/VarIsInitializedOp_1"
  input: "report_uninitialized_variables/VarIsInitializedOp_2"
  input: "report_uninitialized_variables/VarIsInitializedOp_3"
  input: "report_uninitialized_variables/VarIsInitializedOp_4"
  input: "report_uninitialized_variables/VarIsInitializedOp_5"
  input: "report_uninitialized_variables/VarIsInitializedOp_6"
  input: "report_uninitialized_variables/VarIsInitializedOp_7"
  input: "report_uninitialized_variables/VarIsInitializedOp_8"
  input: "report_uninitialized_variables/VarIsInitializedOp_9"
  input: "report_uninitialized_variables/VarIsInitializedOp_10"
  input: "report_uninitialized_variables/VarIsInitializedOp_11"
  input: "report_uninitialized_variables/VarIsInitializedOp_12"
  input: "report_uninitialized_variables/VarIsInitializedOp_13"
  input: "report_uninitialized_variables/VarIsInitializedOp_14"
  input: "report_uninitialized_variables/VarIsInitializedOp_15"
  input: "report_uninitialized_variables/VarIsInitializedOp_16"
  input: "report_uninitialized_variables/VarIsInitializedOp_17"
  input: "report_uninitialized_variables/VarIsInitializedOp_18"
  input: "report_uninitialized_variables/VarIsInitializedOp_19"
  input: "report_uninitialized_variables/VarIsInitializedOp_20"
  input: "report_uninitialized_variables/VarIsInitializedOp_21"
  input: "report_uninitialized_variables/VarIsInitializedOp_22"
  input: "report_uninitialized_variables/VarIsInitializedOp_23"
  input: "report_uninitialized_variables/VarIsInitializedOp_24"
  input: "report_uninitialized_variables/VarIsInitializedOp_25"
  input: "report_uninitialized_variables/VarIsInitializedOp_26"
  input: "report_uninitialized_variables/VarIsInitializedOp_27"
  input: "report_uninitialized_variables/VarIsInitializedOp_28"
  input: "report_uninitialized_variables/VarIsInitializedOp_29"
  input: "report_uninitialized_variables/VarIsInitializedOp_30"
  input: "report_uninitialized_variables/VarIsInitializedOp_31"
  input: "report_uninitialized_variables/VarIsInitializedOp_32"
  input: "report_uninitialized_variables/VarIsInitializedOp_33"
  input: "report_uninitialized_variables/VarIsInitializedOp_34"
  input: "report_uninitialized_variables/VarIsInitializedOp_35"
  input: "report_uninitialized_variables/VarIsInitializedOp_36"
  input: "report_uninitialized_variables/VarIsInitializedOp_37"
  input: "report_uninitialized_variables/VarIsInitializedOp_38"
  input: "report_uninitialized_variables/VarIsInitializedOp_39"
  input: "report_uninitialized_variables/VarIsInitializedOp_40"
  input: "report_uninitialized_variables/VarIsInitializedOp_41"
  input: "report_uninitialized_variables/VarIsInitializedOp_42"
  input: "report_uninitialized_variables/VarIsInitializedOp_43"
  input: "report_uninitialized_variables/VarIsInitializedOp_44"
  input: "report_uninitialized_variables/VarIsInitializedOp_45"
  input: "report_uninitialized_variables/VarIsInitializedOp_46"
  input: "report_uninitialized_variables/VarIsInitializedOp_47"
  input: "report_uninitialized_variables/VarIsInitializedOp_48"
  input: "report_uninitialized_variables/VarIsInitializedOp_49"
  input: "report_uninitialized_variables/VarIsInitializedOp_50"
  input: "report_uninitialized_variables/VarIsInitializedOp_51"
  input: "report_uninitialized_variables/VarIsInitializedOp_52"
  input: "report_uninitialized_variables/VarIsInitializedOp_53"
  input: "report_uninitialized_variables/VarIsInitializedOp_54"
  input: "report_uninitialized_variables/VarIsInitializedOp_55"
  input: "report_uninitialized_variables/VarIsInitializedOp_56"
  input: "report_uninitialized_variables/VarIsInitializedOp_57"
  input: "report_uninitialized_variables/VarIsInitializedOp_58"
  input: "report_uninitialized_variables/VarIsInitializedOp_59"
  input: "report_uninitialized_variables/VarIsInitializedOp_60"
  input: "report_uninitialized_variables/VarIsInitializedOp_61"
  input: "report_uninitialized_variables/VarIsInitializedOp_62"
  input: "report_uninitialized_variables/VarIsInitializedOp_63"
  input: "report_uninitialized_variables/VarIsInitializedOp_64"
  input: "report_uninitialized_variables/VarIsInitializedOp_65"
  input: "report_uninitialized_variables/VarIsInitializedOp_66"
  input: "report_uninitialized_variables/VarIsInitializedOp_67"
  input: "report_uninitialized_variables/VarIsInitializedOp_68"
  input: "report_uninitialized_variables/VarIsInitializedOp_69"
  input: "report_uninitialized_variables/VarIsInitializedOp_70"
  input: "report_uninitialized_variables/VarIsInitializedOp_71"
  input: "report_uninitialized_variables/VarIsInitializedOp_72"
  input: "report_uninitialized_variables/VarIsInitializedOp_73"
  input: "report_uninitialized_variables/VarIsInitializedOp_74"
  input: "report_uninitialized_variables/VarIsInitializedOp_75"
  input: "report_uninitialized_variables/VarIsInitializedOp_76"
  input: "report_uninitialized_variables/VarIsInitializedOp_77"
  input: "report_uninitialized_variables/VarIsInitializedOp_78"
  input: "report_uninitialized_variables/VarIsInitializedOp_79"
  input: "report_uninitialized_variables/VarIsInitializedOp_80"
  input: "report_uninitialized_variables/VarIsInitializedOp_81"
  input: "report_uninitialized_variables/VarIsInitializedOp_82"
  input: "report_uninitialized_variables/VarIsInitializedOp_83"
  input: "report_uninitialized_variables/VarIsInitializedOp_84"
  input: "report_uninitialized_variables/VarIsInitializedOp_85"
  input: "report_uninitialized_variables/VarIsInitializedOp_86"
  input: "report_uninitialized_variables/VarIsInitializedOp_87"
  input: "report_uninitialized_variables/VarIsInitializedOp_88"
  input: "report_uninitialized_variables/VarIsInitializedOp_89"
  input: "report_uninitialized_variables/VarIsInitializedOp_90"
  input: "report_uninitialized_variables/VarIsInitializedOp_91"
  input: "report_uninitialized_variables/VarIsInitializedOp_92"
  input: "report_uninitialized_variables/VarIsInitializedOp_93"
  input: "report_uninitialized_variables/VarIsInitializedOp_94"
  input: "report_uninitialized_variables/VarIsInitializedOp_95"
  input: "report_uninitialized_variables/VarIsInitializedOp_96"
  input: "report_uninitialized_variables/VarIsInitializedOp_97"
  input: "report_uninitialized_variables/VarIsInitializedOp_98"
  input: "report_uninitialized_variables/VarIsInitializedOp_99"
  input: "report_uninitialized_variables/VarIsInitializedOp_100"
  input: "report_uninitialized_variables/VarIsInitializedOp_101"
  input: "report_uninitialized_variables/VarIsInitializedOp_102"
  input: "report_uninitialized_variables/VarIsInitializedOp_103"
  input: "report_uninitialized_variables/VarIsInitializedOp_104"
  input: "report_uninitialized_variables/VarIsInitializedOp_105"
  input: "report_uninitialized_variables/VarIsInitializedOp_106"
  input: "report_uninitialized_variables/VarIsInitializedOp_107"
  input: "report_uninitialized_variables/VarIsInitializedOp_108"
  input: "report_uninitialized_variables/VarIsInitializedOp_109"
  input: "report_uninitialized_variables/VarIsInitializedOp_110"
  input: "report_uninitialized_variables/VarIsInitializedOp_111"
  input: "report_uninitialized_variables/VarIsInitializedOp_112"
  input: "report_uninitialized_variables/VarIsInitializedOp_113"
  input: "report_uninitialized_variables/VarIsInitializedOp_114"
  input: "report_uninitialized_variables/VarIsInitializedOp_115"
  input: "report_uninitialized_variables/VarIsInitializedOp_116"
  input: "report_uninitialized_variables/VarIsInitializedOp_117"
  input: "report_uninitialized_variables/VarIsInitializedOp_118"
  input: "report_uninitialized_variables/VarIsInitializedOp_119"
  input: "report_uninitialized_variables/VarIsInitializedOp_120"
  input: "report_uninitialized_variables/VarIsInitializedOp_121"
  input: "report_uninitialized_variables/VarIsInitializedOp_122"
  input: "report_uninitialized_variables/VarIsInitializedOp_123"
  input: "report_uninitialized_variables/VarIsInitializedOp_124"
  input: "report_uninitialized_variables/VarIsInitializedOp_125"
  input: "report_uninitialized_variables/VarIsInitializedOp_126"
  input: "report_uninitialized_variables/VarIsInitializedOp_127"
  input: "report_uninitialized_variables/VarIsInitializedOp_128"
  input: "report_uninitialized_variables/VarIsInitializedOp_129"
  input: "report_uninitialized_variables/VarIsInitializedOp_130"
  input: "report_uninitialized_variables/VarIsInitializedOp_131"
  input: "report_uninitialized_variables/VarIsInitializedOp_132"
  input: "report_uninitialized_variables/VarIsInitializedOp_133"
  input: "report_uninitialized_variables/VarIsInitializedOp_134"
  input: "report_uninitialized_variables/VarIsInitializedOp_135"
  input: "report_uninitialized_variables/VarIsInitializedOp_136"
  input: "report_uninitialized_variables/VarIsInitializedOp_137"
  input: "report_uninitialized_variables/VarIsInitializedOp_138"
  input: "report_uninitialized_variables/VarIsInitializedOp_139"
  input: "report_uninitialized_variables/VarIsInitializedOp_140"
  input: "report_uninitialized_variables/VarIsInitializedOp_141"
  input: "report_uninitialized_variables/VarIsInitializedOp_142"
  input: "report_uninitialized_variables/VarIsInitializedOp_143"
  input: "report_uninitialized_variables/VarIsInitializedOp_144"
  input: "report_uninitialized_variables/VarIsInitializedOp_145"
  input: "report_uninitialized_variables/VarIsInitializedOp_146"
  input: "report_uninitialized_variables/VarIsInitializedOp_147"
  input: "report_uninitialized_variables/VarIsInitializedOp_148"
  input: "report_uninitialized_variables/VarIsInitializedOp_149"
  input: "report_uninitialized_variables/VarIsInitializedOp_150"
  input: "report_uninitialized_variables/VarIsInitializedOp_151"
  input: "report_uninitialized_variables/VarIsInitializedOp_152"
  input: "report_uninitialized_variables/VarIsInitializedOp_153"
  input: "report_uninitialized_variables/VarIsInitializedOp_154"
  input: "report_uninitialized_variables/VarIsInitializedOp_155"
  input: "report_uninitialized_variables/VarIsInitializedOp_156"
  input: "report_uninitialized_variables/VarIsInitializedOp_157"
  input: "report_uninitialized_variables/VarIsInitializedOp_158"
  input: "report_uninitialized_variables/VarIsInitializedOp_159"
  input: "report_uninitialized_variables/VarIsInitializedOp_160"
  input: "report_uninitialized_variables/VarIsInitializedOp_161"
  input: "report_uninitialized_variables/VarIsInitializedOp_162"
  input: "report_uninitialized_variables/VarIsInitializedOp_163"
  input: "report_uninitialized_variables/VarIsInitializedOp_164"
  input: "report_uninitialized_variables/VarIsInitializedOp_165"
  input: "report_uninitialized_variables/VarIsInitializedOp_166"
  input: "report_uninitialized_variables/VarIsInitializedOp_167"
  input: "report_uninitialized_variables/VarIsInitializedOp_168"
  input: "report_uninitialized_variables/VarIsInitializedOp_169"
  input: "report_uninitialized_variables/VarIsInitializedOp_170"
  input: "report_uninitialized_variables/VarIsInitializedOp_171"
  input: "report_uninitialized_variables/VarIsInitializedOp_172"
  input: "report_uninitialized_variables/VarIsInitializedOp_173"
  input: "report_uninitialized_variables/VarIsInitializedOp_174"
  input: "report_uninitialized_variables/VarIsInitializedOp_175"
  input: "report_uninitialized_variables/VarIsInitializedOp_176"
  input: "report_uninitialized_variables/VarIsInitializedOp_177"
  input: "report_uninitialized_variables/VarIsInitializedOp_178"
  input: "report_uninitialized_variables/VarIsInitializedOp_179"
  input: "report_uninitialized_variables/VarIsInitializedOp_180"
  input: "report_uninitialized_variables/VarIsInitializedOp_181"
  input: "report_uninitialized_variables/VarIsInitializedOp_182"
  input: "report_uninitialized_variables/VarIsInitializedOp_183"
  input: "report_uninitialized_variables/VarIsInitializedOp_184"
  input: "report_uninitialized_variables/VarIsInitializedOp_185"
  input: "report_uninitialized_variables/VarIsInitializedOp_186"
  input: "report_uninitialized_variables/VarIsInitializedOp_187"
  input: "report_uninitialized_variables/VarIsInitializedOp_188"
  input: "report_uninitialized_variables/VarIsInitializedOp_189"
  input: "report_uninitialized_variables/VarIsInitializedOp_190"
  input: "report_uninitialized_variables/VarIsInitializedOp_191"
  input: "report_uninitialized_variables/VarIsInitializedOp_192"
  input: "report_uninitialized_variables/VarIsInitializedOp_193"
  input: "report_uninitialized_variables/VarIsInitializedOp_194"
  input: "report_uninitialized_variables/VarIsInitializedOp_195"
  input: "report_uninitialized_variables/VarIsInitializedOp_196"
  input: "report_uninitialized_variables/VarIsInitializedOp_197"
  input: "report_uninitialized_variables/VarIsInitializedOp_198"
  input: "report_uninitialized_variables/VarIsInitializedOp_199"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 200
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 200
          }
        }
        string_val: "global_step"
        string_val: "vgg19_encoder/block1_conv1/kernel"
        string_val: "vgg19_encoder/block1_conv1/bias"
        string_val: "vgg19_encoder/block1_conv2/kernel"
        string_val: "vgg19_encoder/block1_conv2/bias"
        string_val: "vgg19_encoder/block2_conv1/kernel"
        string_val: "vgg19_encoder/block2_conv1/bias"
        string_val: "vgg19_encoder/block2_conv2/kernel"
        string_val: "vgg19_encoder/block2_conv2/bias"
        string_val: "vgg19_encoder/block3_conv1/kernel"
        string_val: "vgg19_encoder/block3_conv1/bias"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias"
        string_val: "fast_style_transfer/compressor/compressor/conv1/kernel"
        string_val: "fast_style_transfer/compressor/compressor/conv1/bias"
        string_val: "fast_style_transfer/compressor/compressor/conv2/kernel"
        string_val: "fast_style_transfer/compressor/compressor/conv2/bias"
        string_val: "fast_style_transfer/compressor/compressor/conv3/kernel"
        string_val: "fast_style_transfer/compressor/compressor/conv3/bias"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv1/bias"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv2/bias"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv3/bias"
        string_val: "vgg19_decoder/block3_conv1_decoder/kernel"
        string_val: "vgg19_decoder/block3_conv1_decoder/bias"
        string_val: "vgg19_decoder/block2_conv2_transpose_decoder/kernel"
        string_val: "vgg19_decoder/block2_conv2_transpose_decoder/bias"
        string_val: "vgg19_decoder/block2_conv1_decoder/kernel"
        string_val: "vgg19_decoder/block2_conv1_decoder/bias"
        string_val: "vgg19_decoder/block1_conv2_transpose_decoder/kernel"
        string_val: "vgg19_decoder/block1_conv2_transpose_decoder/bias"
        string_val: "vgg19_decoder/block1_conv1_decoder/kernel"
        string_val: "vgg19_decoder/block1_conv1_decoder/bias"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam_1"
        string_val: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam"
        string_val: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1"
        string_val: "fast_style_transfer/compressor/compressor/conv1/bias/Adam"
        string_val: "fast_style_transfer/compressor/compressor/conv1/bias/Adam_1"
        string_val: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam"
        string_val: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1"
        string_val: "fast_style_transfer/compressor/compressor/conv2/bias/Adam"
        string_val: "fast_style_transfer/compressor/compressor/conv2/bias/Adam_1"
        string_val: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam"
        string_val: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1"
        string_val: "fast_style_transfer/compressor/compressor/conv3/bias/Adam"
        string_val: "fast_style_transfer/compressor/compressor/conv3/bias/Adam_1"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam_1"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam_1"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam_1"
        string_val: "vgg19_decoder/block3_conv1_decoder/kernel/Adam"
        string_val: "vgg19_decoder/block3_conv1_decoder/kernel/Adam_1"
        string_val: "vgg19_decoder/block3_conv1_decoder/bias/Adam"
        string_val: "vgg19_decoder/block3_conv1_decoder/bias/Adam_1"
        string_val: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam"
        string_val: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1"
        string_val: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam"
        string_val: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam_1"
        string_val: "vgg19_decoder/block2_conv1_decoder/kernel/Adam"
        string_val: "vgg19_decoder/block2_conv1_decoder/kernel/Adam_1"
        string_val: "vgg19_decoder/block2_conv1_decoder/bias/Adam"
        string_val: "vgg19_decoder/block2_conv1_decoder/bias/Adam_1"
        string_val: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam"
        string_val: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1"
        string_val: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam"
        string_val: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam_1"
        string_val: "vgg19_decoder/block1_conv1_decoder/kernel/Adam"
        string_val: "vgg19_decoder/block1_conv1_decoder/kernel/Adam_1"
        string_val: "vgg19_decoder/block1_conv1_decoder/bias/Adam"
        string_val: "vgg19_decoder/block1_conv1_decoder/bias/Adam_1"
        string_val: "tpu_estimator/iterations_per_loop"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 200
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 200
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 200
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block1_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block1_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block1_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block1_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block2_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block2_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block2_conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block2_conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block3_conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "vgg19_encoder/block3_conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_40"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_41"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_42"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_43"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_44"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_45"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_46"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_47"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_48"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_49"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_50"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_51"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_52"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_53"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_54"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_55"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_56"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_57"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_58"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_59"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_60"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_61"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_62"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_63"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block3_conv1_decoder/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_64"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block3_conv1_decoder/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_65"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_66"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_67"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv1_decoder/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_68"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv1_decoder/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_69"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_70"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_71"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv1_decoder/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_72"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv1_decoder/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_73"
  op: "VarIsInitializedOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_74"
  op: "VarIsInitializedOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_75"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_76"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_77"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_78"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_79"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_80"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_81"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_82"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_83"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_84"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_85"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_86"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_87"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_88"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_89"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_90"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_91"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_92"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_93"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_94"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_95"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_96"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_97"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_98"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_99"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_100"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_101"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_102"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_103"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_104"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_105"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_106"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_107"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_108"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_109"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_110"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_111"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_112"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_113"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_114"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_115"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_116"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_117"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_118"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_119"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_120"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_121"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_122"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_123"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_124"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_125"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_126"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_127"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_128"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_129"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_130"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_131"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_132"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_133"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_134"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_135"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_136"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_137"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_138"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_139"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_140"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_141"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_142"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_143"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_144"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_145"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_146"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_147"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_148"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_149"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_150"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_151"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_152"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_153"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_154"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_155"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_156"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_157"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_158"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_159"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_160"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_161"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_162"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_163"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_164"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_165"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv3/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_166"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/compressor/compressor/conv3/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_167"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_168"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_169"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_170"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_171"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_172"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_173"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_174"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_175"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_176"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_177"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_178"
  op: "VarIsInitializedOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_179"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_180"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_181"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block3_conv1_decoder/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_182"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block3_conv1_decoder/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_183"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_184"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_185"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_186"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_187"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_188"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_189"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv1_decoder/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_190"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block2_conv1_decoder/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_191"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_192"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_193"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_194"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_195"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_196"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_197"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv1_decoder/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_198"
  op: "VarIsInitializedOp"
  input: "vgg19_decoder/block1_conv1_decoder/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/VarIsInitializedOp"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_29"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_30"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_31"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_32"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_33"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_34"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_35"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_36"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_37"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_38"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_39"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_40"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_41"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_42"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_43"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_44"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_45"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_46"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_47"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_48"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_49"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_50"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_51"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_52"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_53"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_54"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_55"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_56"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_57"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_58"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_59"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_60"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_61"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_62"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_63"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_64"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_65"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_66"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_67"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_68"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_69"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_70"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_71"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_72"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_73"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_74"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_75"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_76"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_77"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_78"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_79"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_80"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_81"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_82"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_83"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_84"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_85"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_86"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_87"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_88"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_89"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_90"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_91"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_92"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_93"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_94"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_95"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_96"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_97"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_98"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_99"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_100"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_101"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_102"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_103"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_104"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_105"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_106"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_107"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_108"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_109"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_110"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_111"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_112"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_113"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_114"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_115"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_116"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_117"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_118"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_119"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_120"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_121"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_122"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_123"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_124"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_125"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_126"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_127"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_128"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_129"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_130"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_131"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_132"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_133"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_134"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_135"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_136"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_137"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_138"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_139"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_140"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_141"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_142"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_143"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_144"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_145"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_146"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_147"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_148"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_149"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_150"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_151"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_152"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_153"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_154"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_155"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_156"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_157"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_158"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_159"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_160"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_161"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_162"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_163"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_164"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_165"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_166"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_167"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_168"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_169"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_170"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_171"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_172"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_173"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_174"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_175"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_176"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_177"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_178"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_179"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_180"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_181"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_182"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_183"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_184"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_185"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_186"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_187"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_188"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_189"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_190"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_191"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_192"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_193"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_194"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_195"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_196"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_197"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_198"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 199
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 199
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 199
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 199
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 199
          }
        }
        string_val: "global_step"
        string_val: "vgg19_encoder/block1_conv1/kernel"
        string_val: "vgg19_encoder/block1_conv1/bias"
        string_val: "vgg19_encoder/block1_conv2/kernel"
        string_val: "vgg19_encoder/block1_conv2/bias"
        string_val: "vgg19_encoder/block2_conv1/kernel"
        string_val: "vgg19_encoder/block2_conv1/bias"
        string_val: "vgg19_encoder/block2_conv2/kernel"
        string_val: "vgg19_encoder/block2_conv2/bias"
        string_val: "vgg19_encoder/block3_conv1/kernel"
        string_val: "vgg19_encoder/block3_conv1/bias"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias"
        string_val: "fast_style_transfer/compressor/compressor/conv1/kernel"
        string_val: "fast_style_transfer/compressor/compressor/conv1/bias"
        string_val: "fast_style_transfer/compressor/compressor/conv2/kernel"
        string_val: "fast_style_transfer/compressor/compressor/conv2/bias"
        string_val: "fast_style_transfer/compressor/compressor/conv3/kernel"
        string_val: "fast_style_transfer/compressor/compressor/conv3/bias"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv1/bias"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv2/bias"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv3/bias"
        string_val: "vgg19_decoder/block3_conv1_decoder/kernel"
        string_val: "vgg19_decoder/block3_conv1_decoder/bias"
        string_val: "vgg19_decoder/block2_conv2_transpose_decoder/kernel"
        string_val: "vgg19_decoder/block2_conv2_transpose_decoder/bias"
        string_val: "vgg19_decoder/block2_conv1_decoder/kernel"
        string_val: "vgg19_decoder/block2_conv1_decoder/bias"
        string_val: "vgg19_decoder/block1_conv2_transpose_decoder/kernel"
        string_val: "vgg19_decoder/block1_conv2_transpose_decoder/bias"
        string_val: "vgg19_decoder/block1_conv1_decoder/kernel"
        string_val: "vgg19_decoder/block1_conv1_decoder/bias"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam_1"
        string_val: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam"
        string_val: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1"
        string_val: "fast_style_transfer/compressor/compressor/conv1/bias/Adam"
        string_val: "fast_style_transfer/compressor/compressor/conv1/bias/Adam_1"
        string_val: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam"
        string_val: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1"
        string_val: "fast_style_transfer/compressor/compressor/conv2/bias/Adam"
        string_val: "fast_style_transfer/compressor/compressor/conv2/bias/Adam_1"
        string_val: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam"
        string_val: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1"
        string_val: "fast_style_transfer/compressor/compressor/conv3/bias/Adam"
        string_val: "fast_style_transfer/compressor/compressor/conv3/bias/Adam_1"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam_1"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam_1"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam_1"
        string_val: "vgg19_decoder/block3_conv1_decoder/kernel/Adam"
        string_val: "vgg19_decoder/block3_conv1_decoder/kernel/Adam_1"
        string_val: "vgg19_decoder/block3_conv1_decoder/bias/Adam"
        string_val: "vgg19_decoder/block3_conv1_decoder/bias/Adam_1"
        string_val: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam"
        string_val: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1"
        string_val: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam"
        string_val: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam_1"
        string_val: "vgg19_decoder/block2_conv1_decoder/kernel/Adam"
        string_val: "vgg19_decoder/block2_conv1_decoder/kernel/Adam_1"
        string_val: "vgg19_decoder/block2_conv1_decoder/bias/Adam"
        string_val: "vgg19_decoder/block2_conv1_decoder/bias/Adam_1"
        string_val: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam"
        string_val: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1"
        string_val: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam"
        string_val: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam_1"
        string_val: "vgg19_decoder/block1_conv1_decoder/kernel/Adam"
        string_val: "vgg19_decoder/block1_conv1_decoder/kernel/Adam_1"
        string_val: "vgg19_decoder/block1_conv1_decoder/bias/Adam"
        string_val: "vgg19_decoder/block1_conv1_decoder/bias/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 199
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 199
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 199
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 199
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 199
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^tpu_estimator/iterations_per_loop/Assign"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_2"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "Merge_2/MergeSummary"
  op: "MergeSummary"
  input: "loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_f3f9448897314776be5e4a8baceeacc9/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 199
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 199
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fast_style_transfer/compressor/compressor/conv1/bias"
        string_val: "fast_style_transfer/compressor/compressor/conv1/bias/Adam"
        string_val: "fast_style_transfer/compressor/compressor/conv1/bias/Adam_1"
        string_val: "fast_style_transfer/compressor/compressor/conv1/kernel"
        string_val: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam"
        string_val: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1"
        string_val: "fast_style_transfer/compressor/compressor/conv2/bias"
        string_val: "fast_style_transfer/compressor/compressor/conv2/bias/Adam"
        string_val: "fast_style_transfer/compressor/compressor/conv2/bias/Adam_1"
        string_val: "fast_style_transfer/compressor/compressor/conv2/kernel"
        string_val: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam"
        string_val: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1"
        string_val: "fast_style_transfer/compressor/compressor/conv3/bias"
        string_val: "fast_style_transfer/compressor/compressor/conv3/bias/Adam"
        string_val: "fast_style_transfer/compressor/compressor/conv3/bias/Adam_1"
        string_val: "fast_style_transfer/compressor/compressor/conv3/kernel"
        string_val: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam"
        string_val: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv1/bias"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam_1"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv2/bias"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam_1"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv3/bias"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam_1"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1"
        string_val: "global_step"
        string_val: "vgg19_decoder/block1_conv1_decoder/bias"
        string_val: "vgg19_decoder/block1_conv1_decoder/bias/Adam"
        string_val: "vgg19_decoder/block1_conv1_decoder/bias/Adam_1"
        string_val: "vgg19_decoder/block1_conv1_decoder/kernel"
        string_val: "vgg19_decoder/block1_conv1_decoder/kernel/Adam"
        string_val: "vgg19_decoder/block1_conv1_decoder/kernel/Adam_1"
        string_val: "vgg19_decoder/block1_conv2_transpose_decoder/bias"
        string_val: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam"
        string_val: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam_1"
        string_val: "vgg19_decoder/block1_conv2_transpose_decoder/kernel"
        string_val: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam"
        string_val: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1"
        string_val: "vgg19_decoder/block2_conv1_decoder/bias"
        string_val: "vgg19_decoder/block2_conv1_decoder/bias/Adam"
        string_val: "vgg19_decoder/block2_conv1_decoder/bias/Adam_1"
        string_val: "vgg19_decoder/block2_conv1_decoder/kernel"
        string_val: "vgg19_decoder/block2_conv1_decoder/kernel/Adam"
        string_val: "vgg19_decoder/block2_conv1_decoder/kernel/Adam_1"
        string_val: "vgg19_decoder/block2_conv2_transpose_decoder/bias"
        string_val: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam"
        string_val: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam_1"
        string_val: "vgg19_decoder/block2_conv2_transpose_decoder/kernel"
        string_val: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam"
        string_val: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1"
        string_val: "vgg19_decoder/block3_conv1_decoder/bias"
        string_val: "vgg19_decoder/block3_conv1_decoder/bias/Adam"
        string_val: "vgg19_decoder/block3_conv1_decoder/bias/Adam_1"
        string_val: "vgg19_decoder/block3_conv1_decoder/kernel"
        string_val: "vgg19_decoder/block3_conv1_decoder/kernel/Adam"
        string_val: "vgg19_decoder/block3_conv1_decoder/kernel/Adam_1"
        string_val: "vgg19_encoder/block1_conv1/bias"
        string_val: "vgg19_encoder/block1_conv1/kernel"
        string_val: "vgg19_encoder/block1_conv2/bias"
        string_val: "vgg19_encoder/block1_conv2/kernel"
        string_val: "vgg19_encoder/block2_conv1/bias"
        string_val: "vgg19_encoder/block2_conv1/kernel"
        string_val: "vgg19_encoder/block2_conv2/bias"
        string_val: "vgg19_encoder/block2_conv2/kernel"
        string_val: "vgg19_encoder/block3_conv1/bias"
        string_val: "vgg19_encoder/block3_conv1/kernel"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 199
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 199
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "beta1_power/Read/ReadVariableOp"
  input: "beta2_power/Read/ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/bias/Read/ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/bias/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/bias/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Read/ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/bias/Read/ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/bias/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/bias/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Read/ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/bias/Read/ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/bias/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/bias/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Read/ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Read/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Read/ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Read/ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Read/ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Read/ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Read/ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam_1/Read_1/ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Read/ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam/Read_1/ReadVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "global_step/Read/ReadVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/bias/Read/ReadVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/bias/Adam/Read_1/ReadVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/bias/Adam_1/Read_1/ReadVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Read/ReadVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Adam/Read_1/ReadVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Read/ReadVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam/Read_1/ReadVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam_1/Read_1/ReadVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Read/ReadVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam/Read_1/ReadVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/bias/Read/ReadVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/bias/Adam/Read_1/ReadVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/bias/Adam_1/Read_1/ReadVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Read/ReadVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Adam/Read_1/ReadVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Read/ReadVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam/Read_1/ReadVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam_1/Read_1/ReadVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Read/ReadVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam/Read_1/ReadVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/bias/Read/ReadVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/bias/Adam/Read_1/ReadVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/bias/Adam_1/Read_1/ReadVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Read/ReadVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Adam/Read_1/ReadVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Adam_1/Read_1/ReadVariableOp"
  input: "vgg19_encoder/block1_conv1/bias/Read/ReadVariableOp"
  input: "vgg19_encoder/block1_conv1/kernel/Read/ReadVariableOp"
  input: "vgg19_encoder/block1_conv2/bias/Read/ReadVariableOp"
  input: "vgg19_encoder/block1_conv2/kernel/Read/ReadVariableOp"
  input: "vgg19_encoder/block2_conv1/bias/Read/ReadVariableOp"
  input: "vgg19_encoder/block2_conv1/kernel/Read/ReadVariableOp"
  input: "vgg19_encoder/block2_conv2/bias/Read/ReadVariableOp"
  input: "vgg19_encoder/block2_conv2/kernel/Read/ReadVariableOp"
  input: "vgg19_encoder/block3_conv1/bias/Read/ReadVariableOp"
  input: "vgg19_encoder/block3_conv1/kernel/Read/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 199
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 199
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fast_style_transfer/compressor/compressor/conv1/bias"
        string_val: "fast_style_transfer/compressor/compressor/conv1/bias/Adam"
        string_val: "fast_style_transfer/compressor/compressor/conv1/bias/Adam_1"
        string_val: "fast_style_transfer/compressor/compressor/conv1/kernel"
        string_val: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam"
        string_val: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1"
        string_val: "fast_style_transfer/compressor/compressor/conv2/bias"
        string_val: "fast_style_transfer/compressor/compressor/conv2/bias/Adam"
        string_val: "fast_style_transfer/compressor/compressor/conv2/bias/Adam_1"
        string_val: "fast_style_transfer/compressor/compressor/conv2/kernel"
        string_val: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam"
        string_val: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1"
        string_val: "fast_style_transfer/compressor/compressor/conv3/bias"
        string_val: "fast_style_transfer/compressor/compressor/conv3/bias/Adam"
        string_val: "fast_style_transfer/compressor/compressor/conv3/bias/Adam_1"
        string_val: "fast_style_transfer/compressor/compressor/conv3/kernel"
        string_val: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam"
        string_val: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam_1"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam"
        string_val: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv1/bias"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam_1"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv2/bias"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam_1"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv3/bias"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam_1"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam"
        string_val: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1"
        string_val: "global_step"
        string_val: "vgg19_decoder/block1_conv1_decoder/bias"
        string_val: "vgg19_decoder/block1_conv1_decoder/bias/Adam"
        string_val: "vgg19_decoder/block1_conv1_decoder/bias/Adam_1"
        string_val: "vgg19_decoder/block1_conv1_decoder/kernel"
        string_val: "vgg19_decoder/block1_conv1_decoder/kernel/Adam"
        string_val: "vgg19_decoder/block1_conv1_decoder/kernel/Adam_1"
        string_val: "vgg19_decoder/block1_conv2_transpose_decoder/bias"
        string_val: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam"
        string_val: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam_1"
        string_val: "vgg19_decoder/block1_conv2_transpose_decoder/kernel"
        string_val: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam"
        string_val: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1"
        string_val: "vgg19_decoder/block2_conv1_decoder/bias"
        string_val: "vgg19_decoder/block2_conv1_decoder/bias/Adam"
        string_val: "vgg19_decoder/block2_conv1_decoder/bias/Adam_1"
        string_val: "vgg19_decoder/block2_conv1_decoder/kernel"
        string_val: "vgg19_decoder/block2_conv1_decoder/kernel/Adam"
        string_val: "vgg19_decoder/block2_conv1_decoder/kernel/Adam_1"
        string_val: "vgg19_decoder/block2_conv2_transpose_decoder/bias"
        string_val: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam"
        string_val: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam_1"
        string_val: "vgg19_decoder/block2_conv2_transpose_decoder/kernel"
        string_val: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam"
        string_val: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1"
        string_val: "vgg19_decoder/block3_conv1_decoder/bias"
        string_val: "vgg19_decoder/block3_conv1_decoder/bias/Adam"
        string_val: "vgg19_decoder/block3_conv1_decoder/bias/Adam_1"
        string_val: "vgg19_decoder/block3_conv1_decoder/kernel"
        string_val: "vgg19_decoder/block3_conv1_decoder/kernel/Adam"
        string_val: "vgg19_decoder/block3_conv1_decoder/kernel/Adam_1"
        string_val: "vgg19_encoder/block1_conv1/bias"
        string_val: "vgg19_encoder/block1_conv1/kernel"
        string_val: "vgg19_encoder/block1_conv2/bias"
        string_val: "vgg19_encoder/block1_conv2/kernel"
        string_val: "vgg19_encoder/block2_conv1/bias"
        string_val: "vgg19_encoder/block2_conv1/kernel"
        string_val: "vgg19_encoder/block2_conv2/bias"
        string_val: "vgg19_encoder/block2_conv2/kernel"
        string_val: "vgg19_encoder/block3_conv1/bias"
        string_val: "vgg19_encoder/block3_conv1/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 199
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 199
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "beta1_power"
  input: "save/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "beta2_power"
  input: "save/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/bias"
  input: "save/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/bias/Adam"
  input: "save/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/bias/Adam_1"
  input: "save/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel"
  input: "save/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam"
  input: "save/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv1/kernel/Adam_1"
  input: "save/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/bias"
  input: "save/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/bias/Adam"
  input: "save/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/bias/Adam_1"
  input: "save/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel"
  input: "save/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam"
  input: "save/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv2/kernel/Adam_1"
  input: "save/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/bias"
  input: "save/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/bias/Adam"
  input: "save/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/bias/Adam_1"
  input: "save/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel"
  input: "save/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_19"
  op: "Identity"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam"
  input: "save/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_20"
  op: "Identity"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "fast_style_transfer/compressor/compressor/conv3/kernel/Adam_1"
  input: "save/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_21"
  op: "Identity"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta"
  input: "save/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_22"
  op: "Identity"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam"
  input: "save/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_23"
  op: "Identity"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/beta/Adam_1"
  input: "save/Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_24"
  op: "Identity"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma"
  input: "save/Identity_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_25"
  op: "Identity"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam"
  input: "save/Identity_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_26"
  op: "Identity"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/gamma/Adam_1"
  input: "save/Identity_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_27"
  op: "Identity"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean"
  input: "save/Identity_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_28"
  op: "Identity"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam"
  input: "save/Identity_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_29"
  op: "Identity"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_mean/Adam_1"
  input: "save/Identity_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_30"
  op: "Identity"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance"
  input: "save/Identity_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_31"
  op: "Identity"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam"
  input: "save/Identity_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_32"
  op: "Identity"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization/moving_variance/Adam_1"
  input: "save/Identity_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_33"
  op: "Identity"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta"
  input: "save/Identity_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_34"
  op: "Identity"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam"
  input: "save/Identity_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_35"
  op: "Identity"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/beta/Adam_1"
  input: "save/Identity_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_36"
  op: "Identity"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma"
  input: "save/Identity_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_37"
  op: "Identity"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam"
  input: "save/Identity_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_38"
  op: "Identity"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/gamma/Adam_1"
  input: "save/Identity_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_39"
  op: "Identity"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean"
  input: "save/Identity_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_40"
  op: "Identity"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam"
  input: "save/Identity_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_41"
  op: "Identity"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_mean/Adam_1"
  input: "save/Identity_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_42"
  op: "Identity"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance"
  input: "save/Identity_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_43"
  op: "Identity"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_42"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam"
  input: "save/Identity_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_44"
  op: "Identity"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_43"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/batch_normalization_1/moving_variance/Adam_1"
  input: "save/Identity_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_45"
  op: "Identity"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_44"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias"
  input: "save/Identity_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_46"
  op: "Identity"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_45"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam"
  input: "save/Identity_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_47"
  op: "Identity"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_46"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/bias/Adam_1"
  input: "save/Identity_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_48"
  op: "Identity"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_47"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel"
  input: "save/Identity_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_49"
  op: "Identity"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_48"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam"
  input: "save/Identity_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_50"
  op: "Identity"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_49"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv1/kernel/Adam_1"
  input: "save/Identity_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_51"
  op: "Identity"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_50"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias"
  input: "save/Identity_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_52"
  op: "Identity"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_51"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam"
  input: "save/Identity_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_53"
  op: "Identity"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_52"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/bias/Adam_1"
  input: "save/Identity_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_54"
  op: "Identity"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_53"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel"
  input: "save/Identity_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_55"
  op: "Identity"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_54"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam"
  input: "save/Identity_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_56"
  op: "Identity"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_55"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv2/kernel/Adam_1"
  input: "save/Identity_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_57"
  op: "Identity"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_56"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias"
  input: "save/Identity_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_58"
  op: "Identity"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_57"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam"
  input: "save/Identity_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_59"
  op: "Identity"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_58"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/bias/Adam_1"
  input: "save/Identity_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_60"
  op: "Identity"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_59"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel"
  input: "save/Identity_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_61"
  op: "Identity"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_60"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam"
  input: "save/Identity_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_62"
  op: "Identity"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_61"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/conv3/kernel/Adam_1"
  input: "save/Identity_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_63"
  op: "Identity"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_62"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias"
  input: "save/Identity_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_64"
  op: "Identity"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_63"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam"
  input: "save/Identity_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_65"
  op: "Identity"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_64"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/bias/Adam_1"
  input: "save/Identity_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_66"
  op: "Identity"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_65"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel"
  input: "save/Identity_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_67"
  op: "Identity"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_66"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam"
  input: "save/Identity_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_68"
  op: "Identity"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_67"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense1/kernel/Adam_1"
  input: "save/Identity_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_69"
  op: "Identity"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_68"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias"
  input: "save/Identity_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_70"
  op: "Identity"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_69"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam"
  input: "save/Identity_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_71"
  op: "Identity"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_70"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/bias/Adam_1"
  input: "save/Identity_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_72"
  op: "Identity"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_71"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel"
  input: "save/Identity_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_73"
  op: "Identity"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_72"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam"
  input: "save/Identity_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_74"
  op: "Identity"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_73"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense2/kernel/Adam_1"
  input: "save/Identity_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_75"
  op: "Identity"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_74"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias"
  input: "save/Identity_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_76"
  op: "Identity"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_75"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam"
  input: "save/Identity_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_77"
  op: "Identity"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_76"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/bias/Adam_1"
  input: "save/Identity_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_78"
  op: "Identity"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_77"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel"
  input: "save/Identity_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_79"
  op: "Identity"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_78"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam"
  input: "save/Identity_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_80"
  op: "Identity"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_79"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/base_image_transform/transformation/base_image_transform/dense_out/kernel/Adam_1"
  input: "save/Identity_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_81"
  op: "Identity"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_80"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta"
  input: "save/Identity_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_82"
  op: "Identity"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_81"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam"
  input: "save/Identity_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_83"
  op: "Identity"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_82"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/beta/Adam_1"
  input: "save/Identity_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_84"
  op: "Identity"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_83"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma"
  input: "save/Identity_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_85"
  op: "Identity"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_84"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam"
  input: "save/Identity_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_86"
  op: "Identity"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_85"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/gamma/Adam_1"
  input: "save/Identity_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_87"
  op: "Identity"
  input: "save/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_86"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean"
  input: "save/Identity_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_88"
  op: "Identity"
  input: "save/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_87"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam"
  input: "save/Identity_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_89"
  op: "Identity"
  input: "save/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_88"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_mean/Adam_1"
  input: "save/Identity_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_90"
  op: "Identity"
  input: "save/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_89"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance"
  input: "save/Identity_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_91"
  op: "Identity"
  input: "save/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_90"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam"
  input: "save/Identity_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_92"
  op: "Identity"
  input: "save/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_91"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization/moving_variance/Adam_1"
  input: "save/Identity_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_93"
  op: "Identity"
  input: "save/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_92"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta"
  input: "save/Identity_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_94"
  op: "Identity"
  input: "save/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_93"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam"
  input: "save/Identity_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_95"
  op: "Identity"
  input: "save/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_94"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/beta/Adam_1"
  input: "save/Identity_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_96"
  op: "Identity"
  input: "save/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_95"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma"
  input: "save/Identity_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_97"
  op: "Identity"
  input: "save/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_96"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam"
  input: "save/Identity_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_98"
  op: "Identity"
  input: "save/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_97"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/gamma/Adam_1"
  input: "save/Identity_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_99"
  op: "Identity"
  input: "save/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_98"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean"
  input: "save/Identity_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_100"
  op: "Identity"
  input: "save/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_99"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam"
  input: "save/Identity_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_101"
  op: "Identity"
  input: "save/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_100"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_mean/Adam_1"
  input: "save/Identity_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_102"
  op: "Identity"
  input: "save/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_101"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance"
  input: "save/Identity_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_103"
  op: "Identity"
  input: "save/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_102"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam"
  input: "save/Identity_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_104"
  op: "Identity"
  input: "save/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_103"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/batch_normalization_1/moving_variance/Adam_1"
  input: "save/Identity_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_105"
  op: "Identity"
  input: "save/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_104"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias"
  input: "save/Identity_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_106"
  op: "Identity"
  input: "save/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_105"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam"
  input: "save/Identity_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_107"
  op: "Identity"
  input: "save/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_106"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/bias/Adam_1"
  input: "save/Identity_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_108"
  op: "Identity"
  input: "save/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_107"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel"
  input: "save/Identity_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_109"
  op: "Identity"
  input: "save/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_108"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam"
  input: "save/Identity_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_110"
  op: "Identity"
  input: "save/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_109"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv1/kernel/Adam_1"
  input: "save/Identity_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_111"
  op: "Identity"
  input: "save/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_110"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias"
  input: "save/Identity_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_112"
  op: "Identity"
  input: "save/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_111"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam"
  input: "save/Identity_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_113"
  op: "Identity"
  input: "save/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_112"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/bias/Adam_1"
  input: "save/Identity_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_114"
  op: "Identity"
  input: "save/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_113"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel"
  input: "save/Identity_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_115"
  op: "Identity"
  input: "save/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_114"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam"
  input: "save/Identity_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_116"
  op: "Identity"
  input: "save/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_115"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv2/kernel/Adam_1"
  input: "save/Identity_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_117"
  op: "Identity"
  input: "save/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_116"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias"
  input: "save/Identity_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_118"
  op: "Identity"
  input: "save/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_117"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam"
  input: "save/Identity_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_119"
  op: "Identity"
  input: "save/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_118"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/bias/Adam_1"
  input: "save/Identity_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_120"
  op: "Identity"
  input: "save/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_119"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel"
  input: "save/Identity_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_121"
  op: "Identity"
  input: "save/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_120"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam"
  input: "save/Identity_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_122"
  op: "Identity"
  input: "save/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_121"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/conv3/kernel/Adam_1"
  input: "save/Identity_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_123"
  op: "Identity"
  input: "save/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_122"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias"
  input: "save/Identity_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_124"
  op: "Identity"
  input: "save/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_123"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam"
  input: "save/Identity_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_125"
  op: "Identity"
  input: "save/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_124"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/bias/Adam_1"
  input: "save/Identity_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_126"
  op: "Identity"
  input: "save/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_125"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel"
  input: "save/Identity_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_127"
  op: "Identity"
  input: "save/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_126"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam"
  input: "save/Identity_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_128"
  op: "Identity"
  input: "save/RestoreV2:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_127"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense1/kernel/Adam_1"
  input: "save/Identity_128"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_129"
  op: "Identity"
  input: "save/RestoreV2:128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_128"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias"
  input: "save/Identity_129"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_130"
  op: "Identity"
  input: "save/RestoreV2:129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_129"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam"
  input: "save/Identity_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_131"
  op: "Identity"
  input: "save/RestoreV2:130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_130"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/bias/Adam_1"
  input: "save/Identity_131"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_132"
  op: "Identity"
  input: "save/RestoreV2:131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_131"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel"
  input: "save/Identity_132"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_133"
  op: "Identity"
  input: "save/RestoreV2:132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_132"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam"
  input: "save/Identity_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_134"
  op: "Identity"
  input: "save/RestoreV2:133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_133"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense2/kernel/Adam_1"
  input: "save/Identity_134"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_135"
  op: "Identity"
  input: "save/RestoreV2:134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_134"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias"
  input: "save/Identity_135"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_136"
  op: "Identity"
  input: "save/RestoreV2:135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_135"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam"
  input: "save/Identity_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_137"
  op: "Identity"
  input: "save/RestoreV2:136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_136"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/bias/Adam_1"
  input: "save/Identity_137"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_138"
  op: "Identity"
  input: "save/RestoreV2:137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_137"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel"
  input: "save/Identity_138"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_139"
  op: "Identity"
  input: "save/RestoreV2:138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_138"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam"
  input: "save/Identity_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_140"
  op: "Identity"
  input: "save/RestoreV2:139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_139"
  op: "AssignVariableOp"
  input: "fast_style_transfer/transformation/transformation/style_image_transform/transformation/style_image_transform/dense_out/kernel/Adam_1"
  input: "save/Identity_140"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_141"
  op: "Identity"
  input: "save/RestoreV2:140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_140"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias"
  input: "save/Identity_141"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_142"
  op: "Identity"
  input: "save/RestoreV2:141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_141"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam"
  input: "save/Identity_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_143"
  op: "Identity"
  input: "save/RestoreV2:142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_142"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/bias/Adam_1"
  input: "save/Identity_143"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_144"
  op: "Identity"
  input: "save/RestoreV2:143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_143"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel"
  input: "save/Identity_144"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_145"
  op: "Identity"
  input: "save/RestoreV2:144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_144"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam"
  input: "save/Identity_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_146"
  op: "Identity"
  input: "save/RestoreV2:145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_145"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv1/kernel/Adam_1"
  input: "save/Identity_146"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_147"
  op: "Identity"
  input: "save/RestoreV2:146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_146"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias"
  input: "save/Identity_147"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_148"
  op: "Identity"
  input: "save/RestoreV2:147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_147"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam"
  input: "save/Identity_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_149"
  op: "Identity"
  input: "save/RestoreV2:148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_148"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/bias/Adam_1"
  input: "save/Identity_149"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_150"
  op: "Identity"
  input: "save/RestoreV2:149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_149"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel"
  input: "save/Identity_150"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_151"
  op: "Identity"
  input: "save/RestoreV2:150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_150"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam"
  input: "save/Identity_151"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_152"
  op: "Identity"
  input: "save/RestoreV2:151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_151"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv2/kernel/Adam_1"
  input: "save/Identity_152"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_153"
  op: "Identity"
  input: "save/RestoreV2:152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_152"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias"
  input: "save/Identity_153"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_154"
  op: "Identity"
  input: "save/RestoreV2:153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_153"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam"
  input: "save/Identity_154"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_155"
  op: "Identity"
  input: "save/RestoreV2:154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_154"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/bias/Adam_1"
  input: "save/Identity_155"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_156"
  op: "Identity"
  input: "save/RestoreV2:155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_155"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel"
  input: "save/Identity_156"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_157"
  op: "Identity"
  input: "save/RestoreV2:156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_156"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam"
  input: "save/Identity_157"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_158"
  op: "Identity"
  input: "save/RestoreV2:157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_157"
  op: "AssignVariableOp"
  input: "fast_style_transfer/uncompressor/uncompressor/conv3/kernel/Adam_1"
  input: "save/Identity_158"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_159"
  op: "Identity"
  input: "save/RestoreV2:158"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_158"
  op: "AssignVariableOp"
  input: "global_step"
  input: "save/Identity_159"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/Identity_160"
  op: "Identity"
  input: "save/RestoreV2:159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_159"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/bias"
  input: "save/Identity_160"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_161"
  op: "Identity"
  input: "save/RestoreV2:160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_160"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/bias/Adam"
  input: "save/Identity_161"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_162"
  op: "Identity"
  input: "save/RestoreV2:161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_161"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/bias/Adam_1"
  input: "save/Identity_162"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_163"
  op: "Identity"
  input: "save/RestoreV2:162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_162"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/kernel"
  input: "save/Identity_163"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_164"
  op: "Identity"
  input: "save/RestoreV2:163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_163"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Adam"
  input: "save/Identity_164"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_165"
  op: "Identity"
  input: "save/RestoreV2:164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_164"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block1_conv1_decoder/kernel/Adam_1"
  input: "save/Identity_165"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_166"
  op: "Identity"
  input: "save/RestoreV2:165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_165"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias"
  input: "save/Identity_166"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_167"
  op: "Identity"
  input: "save/RestoreV2:166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_166"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam"
  input: "save/Identity_167"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_168"
  op: "Identity"
  input: "save/RestoreV2:167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_167"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/bias/Adam_1"
  input: "save/Identity_168"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_169"
  op: "Identity"
  input: "save/RestoreV2:168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_168"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel"
  input: "save/Identity_169"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_170"
  op: "Identity"
  input: "save/RestoreV2:169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_169"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam"
  input: "save/Identity_170"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_171"
  op: "Identity"
  input: "save/RestoreV2:170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_170"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block1_conv2_transpose_decoder/kernel/Adam_1"
  input: "save/Identity_171"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_172"
  op: "Identity"
  input: "save/RestoreV2:171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_171"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/bias"
  input: "save/Identity_172"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_173"
  op: "Identity"
  input: "save/RestoreV2:172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_172"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/bias/Adam"
  input: "save/Identity_173"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_174"
  op: "Identity"
  input: "save/RestoreV2:173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_173"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/bias/Adam_1"
  input: "save/Identity_174"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_175"
  op: "Identity"
  input: "save/RestoreV2:174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_174"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/kernel"
  input: "save/Identity_175"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_176"
  op: "Identity"
  input: "save/RestoreV2:175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_175"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Adam"
  input: "save/Identity_176"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_177"
  op: "Identity"
  input: "save/RestoreV2:176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_176"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block2_conv1_decoder/kernel/Adam_1"
  input: "save/Identity_177"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_178"
  op: "Identity"
  input: "save/RestoreV2:177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_177"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias"
  input: "save/Identity_178"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_179"
  op: "Identity"
  input: "save/RestoreV2:178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_178"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam"
  input: "save/Identity_179"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_180"
  op: "Identity"
  input: "save/RestoreV2:179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_179"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/bias/Adam_1"
  input: "save/Identity_180"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_181"
  op: "Identity"
  input: "save/RestoreV2:180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_180"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel"
  input: "save/Identity_181"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_182"
  op: "Identity"
  input: "save/RestoreV2:181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_181"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam"
  input: "save/Identity_182"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_183"
  op: "Identity"
  input: "save/RestoreV2:182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_182"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block2_conv2_transpose_decoder/kernel/Adam_1"
  input: "save/Identity_183"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_184"
  op: "Identity"
  input: "save/RestoreV2:183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_183"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/bias"
  input: "save/Identity_184"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_185"
  op: "Identity"
  input: "save/RestoreV2:184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_184"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/bias/Adam"
  input: "save/Identity_185"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_186"
  op: "Identity"
  input: "save/RestoreV2:185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_185"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/bias/Adam_1"
  input: "save/Identity_186"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_187"
  op: "Identity"
  input: "save/RestoreV2:186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_186"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/kernel"
  input: "save/Identity_187"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_188"
  op: "Identity"
  input: "save/RestoreV2:187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_187"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Adam"
  input: "save/Identity_188"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_189"
  op: "Identity"
  input: "save/RestoreV2:188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_188"
  op: "AssignVariableOp"
  input: "vgg19_decoder/block3_conv1_decoder/kernel/Adam_1"
  input: "save/Identity_189"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_190"
  op: "Identity"
  input: "save/RestoreV2:189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_189"
  op: "AssignVariableOp"
  input: "vgg19_encoder/block1_conv1/bias"
  input: "save/Identity_190"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_191"
  op: "Identity"
  input: "save/RestoreV2:190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_190"
  op: "AssignVariableOp"
  input: "vgg19_encoder/block1_conv1/kernel"
  input: "save/Identity_191"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_192"
  op: "Identity"
  input: "save/RestoreV2:191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_191"
  op: "AssignVariableOp"
  input: "vgg19_encoder/block1_conv2/bias"
  input: "save/Identity_192"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_193"
  op: "Identity"
  input: "save/RestoreV2:192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_192"
  op: "AssignVariableOp"
  input: "vgg19_encoder/block1_conv2/kernel"
  input: "save/Identity_193"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_194"
  op: "Identity"
  input: "save/RestoreV2:193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_193"
  op: "AssignVariableOp"
  input: "vgg19_encoder/block2_conv1/bias"
  input: "save/Identity_194"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_195"
  op: "Identity"
  input: "save/RestoreV2:194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_194"
  op: "AssignVariableOp"
  input: "vgg19_encoder/block2_conv1/kernel"
  input: "save/Identity_195"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_196"
  op: "Identity"
  input: "save/RestoreV2:195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_195"
  op: "AssignVariableOp"
  input: "vgg19_encoder/block2_conv2/bias"
  input: "save/Identity_196"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_197"
  op: "Identity"
  input: "save/RestoreV2:196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_196"
  op: "AssignVariableOp"
  input: "vgg19_encoder/block2_conv2/kernel"
  input: "save/Identity_197"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_198"
  op: "Identity"
  input: "save/RestoreV2:197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_197"
  op: "AssignVariableOp"
  input: "vgg19_encoder/block3_conv1/bias"
  input: "save/Identity_198"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_199"
  op: "Identity"
  input: "save/RestoreV2:198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_198"
  op: "AssignVariableOp"
  input: "vgg19_encoder/block3_conv1/kernel"
  input: "save/Identity_199"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_100"
  input: "^save/AssignVariableOp_101"
  input: "^save/AssignVariableOp_102"
  input: "^save/AssignVariableOp_103"
  input: "^save/AssignVariableOp_104"
  input: "^save/AssignVariableOp_105"
  input: "^save/AssignVariableOp_106"
  input: "^save/AssignVariableOp_107"
  input: "^save/AssignVariableOp_108"
  input: "^save/AssignVariableOp_109"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_110"
  input: "^save/AssignVariableOp_111"
  input: "^save/AssignVariableOp_112"
  input: "^save/AssignVariableOp_113"
  input: "^save/AssignVariableOp_114"
  input: "^save/AssignVariableOp_115"
  input: "^save/AssignVariableOp_116"
  input: "^save/AssignVariableOp_117"
  input: "^save/AssignVariableOp_118"
  input: "^save/AssignVariableOp_119"
  input: "^save/AssignVariableOp_12"
  input: "^save/AssignVariableOp_120"
  input: "^save/AssignVariableOp_121"
  input: "^save/AssignVariableOp_122"
  input: "^save/AssignVariableOp_123"
  input: "^save/AssignVariableOp_124"
  input: "^save/AssignVariableOp_125"
  input: "^save/AssignVariableOp_126"
  input: "^save/AssignVariableOp_127"
  input: "^save/AssignVariableOp_128"
  input: "^save/AssignVariableOp_129"
  input: "^save/AssignVariableOp_13"
  input: "^save/AssignVariableOp_130"
  input: "^save/AssignVariableOp_131"
  input: "^save/AssignVariableOp_132"
  input: "^save/AssignVariableOp_133"
  input: "^save/AssignVariableOp_134"
  input: "^save/AssignVariableOp_135"
  input: "^save/AssignVariableOp_136"
  input: "^save/AssignVariableOp_137"
  input: "^save/AssignVariableOp_138"
  input: "^save/AssignVariableOp_139"
  input: "^save/AssignVariableOp_14"
  input: "^save/AssignVariableOp_140"
  input: "^save/AssignVariableOp_141"
  input: "^save/AssignVariableOp_142"
  input: "^save/AssignVariableOp_143"
  input: "^save/AssignVariableOp_144"
  input: "^save/AssignVariableOp_145"
  input: "^save/AssignVariableOp_146"
  input: "^save/AssignVariableOp_147"
  input: "^save/AssignVariableOp_148"
  input: "^save/AssignVariableOp_149"
  input: "^save/AssignVariableOp_15"
  input: "^save/AssignVariableOp_150"
  input: "^save/AssignVariableOp_151"
  input: "^save/AssignVariableOp_152"
  input: "^save/AssignVariableOp_153"
  input: "^save/AssignVariableOp_154"
  input: "^save/AssignVariableOp_155"
  input: "^save/AssignVariableOp_156"
  input: "^save/AssignVariableOp_157"
  input: "^save/AssignVariableOp_158"
  input: "^save/AssignVariableOp_159"
  input: "^save/AssignVariableOp_16"
  input: "^save/AssignVariableOp_160"
  input: "^save/AssignVariableOp_161"
  input: "^save/AssignVariableOp_162"
  input: "^save/AssignVariableOp_163"
  input: "^save/AssignVariableOp_164"
  input: "^save/AssignVariableOp_165"
  input: "^save/AssignVariableOp_166"
  input: "^save/AssignVariableOp_167"
  input: "^save/AssignVariableOp_168"
  input: "^save/AssignVariableOp_169"
  input: "^save/AssignVariableOp_17"
  input: "^save/AssignVariableOp_170"
  input: "^save/AssignVariableOp_171"
  input: "^save/AssignVariableOp_172"
  input: "^save/AssignVariableOp_173"
  input: "^save/AssignVariableOp_174"
  input: "^save/AssignVariableOp_175"
  input: "^save/AssignVariableOp_176"
  input: "^save/AssignVariableOp_177"
  input: "^save/AssignVariableOp_178"
  input: "^save/AssignVariableOp_179"
  input: "^save/AssignVariableOp_18"
  input: "^save/AssignVariableOp_180"
  input: "^save/AssignVariableOp_181"
  input: "^save/AssignVariableOp_182"
  input: "^save/AssignVariableOp_183"
  input: "^save/AssignVariableOp_184"
  input: "^save/AssignVariableOp_185"
  input: "^save/AssignVariableOp_186"
  input: "^save/AssignVariableOp_187"
  input: "^save/AssignVariableOp_188"
  input: "^save/AssignVariableOp_189"
  input: "^save/AssignVariableOp_19"
  input: "^save/AssignVariableOp_190"
  input: "^save/AssignVariableOp_191"
  input: "^save/AssignVariableOp_192"
  input: "^save/AssignVariableOp_193"
  input: "^save/AssignVariableOp_194"
  input: "^save/AssignVariableOp_195"
  input: "^save/AssignVariableOp_196"
  input: "^save/AssignVariableOp_197"
  input: "^save/AssignVariableOp_198"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_20"
  input: "^save/AssignVariableOp_21"
  input: "^save/AssignVariableOp_22"
  input: "^save/AssignVariableOp_23"
  input: "^save/AssignVariableOp_24"
  input: "^save/AssignVariableOp_25"
  input: "^save/AssignVariableOp_26"
  input: "^save/AssignVariableOp_27"
  input: "^save/AssignVariableOp_28"
  input: "^save/AssignVariableOp_29"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_30"
  input: "^save/AssignVariableOp_31"
  input: "^save/AssignVariableOp_32"
  input: "^save/AssignVariableOp_33"
  input: "^save/AssignVariableOp_34"
  input: "^save/AssignVariableOp_35"
  input: "^save/AssignVariableOp_36"
  input: "^save/AssignVariableOp_37"
  input: "^save/AssignVariableOp_38"
  input: "^save/AssignVariableOp_39"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_40"
  input: "^save/AssignVariableOp_41"
  input: "^save/AssignVariableOp_42"
  input: "^save/AssignVariableOp_43"
  input: "^save/AssignVariableOp_44"
  input: "^save/AssignVariableOp_45"
  input: "^save/AssignVariableOp_46"
  input: "^save/AssignVariableOp_47"
  input: "^save/AssignVariableOp_48"
  input: "^save/AssignVariableOp_49"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_50"
  input: "^save/AssignVariableOp_51"
  input: "^save/AssignVariableOp_52"
  input: "^save/AssignVariableOp_53"
  input: "^save/AssignVariableOp_54"
  input: "^save/AssignVariableOp_55"
  input: "^save/AssignVariableOp_56"
  input: "^save/AssignVariableOp_57"
  input: "^save/AssignVariableOp_58"
  input: "^save/AssignVariableOp_59"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_60"
  input: "^save/AssignVariableOp_61"
  input: "^save/AssignVariableOp_62"
  input: "^save/AssignVariableOp_63"
  input: "^save/AssignVariableOp_64"
  input: "^save/AssignVariableOp_65"
  input: "^save/AssignVariableOp_66"
  input: "^save/AssignVariableOp_67"
  input: "^save/AssignVariableOp_68"
  input: "^save/AssignVariableOp_69"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_70"
  input: "^save/AssignVariableOp_71"
  input: "^save/AssignVariableOp_72"
  input: "^save/AssignVariableOp_73"
  input: "^save/AssignVariableOp_74"
  input: "^save/AssignVariableOp_75"
  input: "^save/AssignVariableOp_76"
  input: "^save/AssignVariableOp_77"
  input: "^save/AssignVariableOp_78"
  input: "^save/AssignVariableOp_79"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_80"
  input: "^save/AssignVariableOp_81"
  input: "^save/AssignVariableOp_82"
  input: "^save/AssignVariableOp_83"
  input: "^save/AssignVariableOp_84"
  input: "^save/AssignVariableOp_85"
  input: "^save/AssignVariableOp_86"
  input: "^save/AssignVariableOp_87"
  input: "^save/AssignVariableOp_88"
  input: "^save/AssignVariableOp_89"
  input: "^save/AssignVariableOp_9"
  input: "^save/AssignVariableOp_90"
  input: "^save/AssignVariableOp_91"
  input: "^save/AssignVariableOp_92"
  input: "^save/AssignVariableOp_93"
  input: "^save/AssignVariableOp_94"
  input: "^save/AssignVariableOp_95"
  input: "^save/AssignVariableOp_96"
  input: "^save/AssignVariableOp_97"
  input: "^save/AssignVariableOp_98"
  input: "^save/AssignVariableOp_99"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
library {
  function {
    signature {
      name: "tf_data_structured_function_wrapper_nJHqYUuU33c"
      input_arg {
        name: "arg0"
        type: DT_STRING
      }
      output_arg {
        name: "reshape_2"
        type: DT_FLOAT
      }
      description: "Wrapper for passing nested structures to and from tf.data functions."
      is_stateful: true
    }
    node_def {
      name: "ParseSingleExample/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/Const_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/Const_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/ParseSingleExample"
      op: "ParseSingleExample"
      input: "arg0"
      input: "ParseSingleExample/Const:output:0"
      input: "ParseSingleExample/Const_1:output:0"
      input: "ParseSingleExample/Const_2:output:0"
      attr {
        key: "Tdense"
        value {
          list {
            type: DT_STRING
            type: DT_INT64
            type: DT_INT64
          }
        }
      }
      attr {
        key: "dense_keys"
        value {
          list {
            s: "image/encoded"
            s: "image/height"
            s: "image/width"
          }
        }
      }
      attr {
        key: "dense_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "num_sparse"
        value {
          i: 0
        }
      }
      attr {
        key: "sparse_keys"
        value {
          list {
          }
        }
      }
      attr {
        key: "sparse_types"
        value {
          list {
          }
        }
      }
    }
    node_def {
      name: "DecodeJpeg"
      op: "DecodeJpeg"
      input: "ParseSingleExample/ParseSingleExample:dense_values:0"
      attr {
        key: "acceptable_fraction"
        value {
          f: 1.0
        }
      }
      attr {
        key: "channels"
        value {
          i: 3
        }
      }
      attr {
        key: "dct_method"
        value {
          s: ""
        }
      }
      attr {
        key: "fancy_upscaling"
        value {
          b: true
        }
      }
      attr {
        key: "ratio"
        value {
          i: 1
        }
      }
      attr {
        key: "try_recover_truncated"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "Reshape/Cast"
      op: "Cast"
      input: "ParseSingleExample/ParseSingleExample:dense_values:1"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "Reshape/Cast_1"
      op: "Cast"
      input: "ParseSingleExample/ParseSingleExample:dense_values:2"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "Reshape/shape/2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "Reshape/shape"
      op: "Pack"
      input: "Reshape/Cast:y:0"
      input: "Reshape/Cast_1:y:0"
      input: "Reshape/shape/2:output:0"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "Reshape"
      op: "Reshape"
      input: "DecodeJpeg:image:0"
      input: "Reshape/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "random_uniform/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "random_uniform/min"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.800000011920929
          }
        }
      }
    }
    node_def {
      name: "random_uniform/max"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.8999999761581421
          }
        }
      }
    }
    node_def {
      name: "random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "random_uniform/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "random_uniform/sub"
      op: "Sub"
      input: "random_uniform/max:output:0"
      input: "random_uniform/min:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "random_uniform/mul"
      op: "Mul"
      input: "random_uniform/RandomUniform:output:0"
      input: "random_uniform/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "random_uniform"
      op: "Add"
      input: "random_uniform/mul:z:0"
      input: "random_uniform/min:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sub/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "sub"
      op: "Sub"
      input: "sub/x:output:0"
      input: "random_uniform:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "random_uniform_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "random_uniform_1/min"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "random_uniform_1/RandomUniform"
      op: "RandomUniform"
      input: "random_uniform_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "random_uniform_1/sub"
      op: "Sub"
      input: "sub:z:0"
      input: "random_uniform_1/min:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "random_uniform_1/mul"
      op: "Mul"
      input: "random_uniform_1/RandomUniform:output:0"
      input: "random_uniform_1/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "random_uniform_1"
      op: "Add"
      input: "random_uniform_1/mul:z:0"
      input: "random_uniform_1/min:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "add"
      op: "Add"
      input: "random_uniform_1:z:0"
      input: "random_uniform:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "concat/axis"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "concat"
      op: "ConcatV2"
      input: "random_uniform_1:z:0"
      input: "add:z:0"
      input: "concat/axis:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "ExpandDims/dim"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "ExpandDims"
      op: "ExpandDims"
      input: "Reshape:output:0"
      input: "ExpandDims/dim:output:0"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "CropAndResize/crop_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\001\000\000\000\001\000\000"
          }
        }
      }
    }
    node_def {
      name: "CropAndResize"
      op: "CropAndResize"
      input: "ExpandDims:output:0"
      input: "concat:output:0"
      input: "Const:output:0"
      input: "CropAndResize/crop_size:output:0"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "extrapolation_value"
        value {
          f: 0.0
        }
      }
      attr {
        key: "method"
        value {
          s: "bilinear"
        }
      }
    }
    node_def {
      name: "Squeeze"
      op: "Squeeze"
      input: "CropAndResize:crops:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
          }
        }
      }
    }
    node_def {
      name: "random_flip_left_right/Shape"
      op: "Shape"
      input: "Squeeze:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "random_flip_left_right/assert_positive/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "random_flip_left_right/assert_positive/assert_less/Less"
      op: "Less"
      input: "random_flip_left_right/assert_positive/Const:output:0"
      input: "random_flip_left_right/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "random_flip_left_right/assert_positive/assert_less/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "random_flip_left_right/assert_positive/assert_less/All"
      op: "All"
      input: "random_flip_left_right/assert_positive/assert_less/Less:z:0"
      input: "random_flip_left_right/assert_positive/assert_less/Const:output:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "random_flip_left_right/assert_positive/assert_less/Assert/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "all dims of \'image.shape\' must be > 0."
          }
        }
      }
    }
    node_def {
      name: "random_flip_left_right/assert_positive/assert_less/Assert/Assert/data_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "all dims of \'image.shape\' must be > 0."
          }
        }
      }
    }
    node_def {
      name: "random_flip_left_right/assert_positive/assert_less/Assert/Assert"
      op: "Assert"
      input: "random_flip_left_right/assert_positive/assert_less/All:output:0"
      input: "random_flip_left_right/assert_positive/assert_less/Assert/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "random_flip_left_right/control_dependency"
      op: "Identity"
      input: "Squeeze:output:0"
      input: "^random_flip_left_right/assert_positive/assert_less/Assert/Assert"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Squeeze"
          }
        }
      }
    }
    node_def {
      name: "random_flip_left_right/random_uniform/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "random_flip_left_right/random_uniform/min"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "random_flip_left_right/random_uniform/max"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "random_flip_left_right/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "random_flip_left_right/random_uniform/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "random_flip_left_right/random_uniform/sub"
      op: "Sub"
      input: "random_flip_left_right/random_uniform/max:output:0"
      input: "random_flip_left_right/random_uniform/min:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "random_flip_left_right/random_uniform/mul"
      op: "Mul"
      input: "random_flip_left_right/random_uniform/RandomUniform:output:0"
      input: "random_flip_left_right/random_uniform/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "random_flip_left_right/random_uniform"
      op: "Add"
      input: "random_flip_left_right/random_uniform/mul:z:0"
      input: "random_flip_left_right/random_uniform/min:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "random_flip_left_right/Less/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "random_flip_left_right/Less"
      op: "Less"
      input: "random_flip_left_right/random_uniform:z:0"
      input: "random_flip_left_right/Less/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "random_flip_left_right/Switch"
      op: "Switch"
      input: "random_flip_left_right/Less:z:0"
      input: "random_flip_left_right/Less:z:0"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
    }
    node_def {
      name: "random_flip_left_right/switch_t"
      op: "Identity"
      input: "random_flip_left_right/Switch:output_true:0"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
    }
    node_def {
      name: "random_flip_left_right/switch_f"
      op: "Identity"
      input: "random_flip_left_right/Switch:output_false:0"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
    }
    node_def {
      name: "random_flip_left_right/pred_id"
      op: "Identity"
      input: "random_flip_left_right/Less:z:0"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
    }
    node_def {
      name: "random_flip_left_right/ReverseV2/axis"
      op: "Const"
      input: "^random_flip_left_right/switch_t"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "random_flip_left_right/ReverseV2"
      op: "ReverseV2"
      input: "random_flip_left_right/ReverseV2/Switch:output_true:0"
      input: "random_flip_left_right/ReverseV2/axis:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "random_flip_left_right/ReverseV2/Switch"
      op: "Switch"
      input: "random_flip_left_right/control_dependency:output:0"
      input: "random_flip_left_right/pred_id:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Squeeze"
          }
        }
      }
    }
    node_def {
      name: "random_flip_left_right/Switch_1"
      op: "Switch"
      input: "random_flip_left_right/control_dependency:output:0"
      input: "random_flip_left_right/pred_id:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Squeeze"
          }
        }
      }
    }
    node_def {
      name: "random_flip_left_right/Merge"
      op: "Merge"
      input: "random_flip_left_right/Switch_1:output_false:0"
      input: "random_flip_left_right/ReverseV2:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\377\377\377\377"
          }
        }
      }
    }
    node_def {
      name: "strided_slice"
      op: "StridedSlice"
      input: "random_flip_left_right/Merge:output:0"
      input: "strided_slice/stack:output:0"
      input: "strided_slice/stack_1:output:0"
      input: "strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 2
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 2
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "Const_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\305\340\317\302\331\216\351\302)\\\367\302"
          }
        }
      }
    }
    node_def {
      name: "Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "Reshape_1"
      op: "Reshape"
      input: "Const_1:output:0"
      input: "Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "add_1"
      op: "Add"
      input: "strided_slice:output:0"
      input: "Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\000\001\000\000\000\001\000\000\003\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "Reshape_2"
      op: "Reshape"
      input: "add_1:z:0"
      input: "Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Cast/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    ret {
      key: "reshape_2"
      value: "Reshape_2:output:0"
    }
  }
  function {
    signature {
      name: "tf_data_structured_function_wrapper_62iz4XpaPAY"
      input_arg {
        name: "arg0"
        type: DT_STRING
      }
      output_arg {
        name: "flatmapdataset"
        type: DT_VARIANT
      }
      description: "Wrapper for passing nested structures to and from tf.data functions."
      is_stateful: true
    }
    node_def {
      name: "flat_filenames/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "flat_filenames"
      op: "Reshape"
      input: "arg0"
      input: "flat_filenames/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "TensorSliceDataset"
      op: "TensorSliceDataset"
      input: "flat_filenames:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "FlatMapDataset"
      op: "FlatMapDataset"
      input: "TensorSliceDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_data_structured_function_wrapper_Qky8TA5ITQU"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
    }
    ret {
      key: "flatmapdataset"
      value: "FlatMapDataset:handle:0"
    }
  }
  function {
    signature {
      name: "tf_data_structured_function_wrapper_BQ6MGAseyxA"
      input_arg {
        name: "arg0"
        type: DT_STRING
      }
      input_arg {
        name: "reshape_1_placeholder"
        type: DT_FLOAT
      }
      output_arg {
        name: "reshape_2"
        type: DT_FLOAT
      }
      description: "Wrapper for passing nested structures to and from tf.data functions."
      is_stateful: true
    }
    node_def {
      name: "ParseSingleExample/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/Const_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/Const_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/ParseSingleExample"
      op: "ParseSingleExample"
      input: "arg0"
      input: "ParseSingleExample/Const:output:0"
      input: "ParseSingleExample/Const_1:output:0"
      input: "ParseSingleExample/Const_2:output:0"
      attr {
        key: "Tdense"
        value {
          list {
            type: DT_STRING
            type: DT_INT64
            type: DT_INT64
          }
        }
      }
      attr {
        key: "dense_keys"
        value {
          list {
            s: "image/encoded"
            s: "image/height"
            s: "image/width"
          }
        }
      }
      attr {
        key: "dense_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "num_sparse"
        value {
          i: 0
        }
      }
      attr {
        key: "sparse_keys"
        value {
          list {
          }
        }
      }
      attr {
        key: "sparse_types"
        value {
          list {
          }
        }
      }
    }
    node_def {
      name: "DecodeJpeg"
      op: "DecodeJpeg"
      input: "ParseSingleExample/ParseSingleExample:dense_values:0"
      attr {
        key: "acceptable_fraction"
        value {
          f: 1.0
        }
      }
      attr {
        key: "channels"
        value {
          i: 3
        }
      }
      attr {
        key: "dct_method"
        value {
          s: ""
        }
      }
      attr {
        key: "fancy_upscaling"
        value {
          b: true
        }
      }
      attr {
        key: "ratio"
        value {
          i: 1
        }
      }
      attr {
        key: "try_recover_truncated"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "Reshape/Cast"
      op: "Cast"
      input: "ParseSingleExample/ParseSingleExample:dense_values:1"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "Reshape/Cast_1"
      op: "Cast"
      input: "ParseSingleExample/ParseSingleExample:dense_values:2"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "Reshape/shape/2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "Reshape/shape"
      op: "Pack"
      input: "Reshape/Cast:y:0"
      input: "Reshape/Cast_1:y:0"
      input: "Reshape/shape/2:output:0"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "Reshape"
      op: "Reshape"
      input: "DecodeJpeg:image:0"
      input: "Reshape/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "random_uniform/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "random_uniform/min"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.800000011920929
          }
        }
      }
    }
    node_def {
      name: "random_uniform/max"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.8999999761581421
          }
        }
      }
    }
    node_def {
      name: "random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "random_uniform/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "random_uniform/sub"
      op: "Sub"
      input: "random_uniform/max:output:0"
      input: "random_uniform/min:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "random_uniform/mul"
      op: "Mul"
      input: "random_uniform/RandomUniform:output:0"
      input: "random_uniform/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "random_uniform"
      op: "Add"
      input: "random_uniform/mul:z:0"
      input: "random_uniform/min:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sub/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "sub"
      op: "Sub"
      input: "sub/x:output:0"
      input: "random_uniform:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "random_uniform_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "random_uniform_1/min"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "random_uniform_1/RandomUniform"
      op: "RandomUniform"
      input: "random_uniform_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "random_uniform_1/sub"
      op: "Sub"
      input: "sub:z:0"
      input: "random_uniform_1/min:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "random_uniform_1/mul"
      op: "Mul"
      input: "random_uniform_1/RandomUniform:output:0"
      input: "random_uniform_1/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "random_uniform_1"
      op: "Add"
      input: "random_uniform_1/mul:z:0"
      input: "random_uniform_1/min:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "add"
      op: "Add"
      input: "random_uniform_1:z:0"
      input: "random_uniform:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "concat/axis"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "concat"
      op: "ConcatV2"
      input: "random_uniform_1:z:0"
      input: "add:z:0"
      input: "concat/axis:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "ExpandDims/dim"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "ExpandDims"
      op: "ExpandDims"
      input: "Reshape:output:0"
      input: "ExpandDims/dim:output:0"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "CropAndResize/crop_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\001\000\000\000\001\000\000"
          }
        }
      }
    }
    node_def {
      name: "CropAndResize"
      op: "CropAndResize"
      input: "ExpandDims:output:0"
      input: "concat:output:0"
      input: "Const:output:0"
      input: "CropAndResize/crop_size:output:0"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "extrapolation_value"
        value {
          f: 0.0
        }
      }
      attr {
        key: "method"
        value {
          s: "bilinear"
        }
      }
    }
    node_def {
      name: "Squeeze"
      op: "Squeeze"
      input: "CropAndResize:crops:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
          }
        }
      }
    }
    node_def {
      name: "random_flip_left_right/Shape"
      op: "Shape"
      input: "Squeeze:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "random_flip_left_right/assert_positive/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "random_flip_left_right/assert_positive/assert_less/Less"
      op: "Less"
      input: "random_flip_left_right/assert_positive/Const:output:0"
      input: "random_flip_left_right/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "random_flip_left_right/assert_positive/assert_less/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "random_flip_left_right/assert_positive/assert_less/All"
      op: "All"
      input: "random_flip_left_right/assert_positive/assert_less/Less:z:0"
      input: "random_flip_left_right/assert_positive/assert_less/Const:output:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "random_flip_left_right/assert_positive/assert_less/Assert/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "all dims of \'image.shape\' must be > 0."
          }
        }
      }
    }
    node_def {
      name: "random_flip_left_right/assert_positive/assert_less/Assert/Assert/data_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "all dims of \'image.shape\' must be > 0."
          }
        }
      }
    }
    node_def {
      name: "random_flip_left_right/assert_positive/assert_less/Assert/Assert"
      op: "Assert"
      input: "random_flip_left_right/assert_positive/assert_less/All:output:0"
      input: "random_flip_left_right/assert_positive/assert_less/Assert/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "random_flip_left_right/control_dependency"
      op: "Identity"
      input: "Squeeze:output:0"
      input: "^random_flip_left_right/assert_positive/assert_less/Assert/Assert"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Squeeze"
          }
        }
      }
    }
    node_def {
      name: "random_flip_left_right/random_uniform/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "random_flip_left_right/random_uniform/min"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "random_flip_left_right/random_uniform/max"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "random_flip_left_right/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "random_flip_left_right/random_uniform/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "random_flip_left_right/random_uniform/sub"
      op: "Sub"
      input: "random_flip_left_right/random_uniform/max:output:0"
      input: "random_flip_left_right/random_uniform/min:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "random_flip_left_right/random_uniform/mul"
      op: "Mul"
      input: "random_flip_left_right/random_uniform/RandomUniform:output:0"
      input: "random_flip_left_right/random_uniform/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "random_flip_left_right/random_uniform"
      op: "Add"
      input: "random_flip_left_right/random_uniform/mul:z:0"
      input: "random_flip_left_right/random_uniform/min:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "random_flip_left_right/Less/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "random_flip_left_right/Less"
      op: "Less"
      input: "random_flip_left_right/random_uniform:z:0"
      input: "random_flip_left_right/Less/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "random_flip_left_right/Switch"
      op: "Switch"
      input: "random_flip_left_right/Less:z:0"
      input: "random_flip_left_right/Less:z:0"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
    }
    node_def {
      name: "random_flip_left_right/switch_t"
      op: "Identity"
      input: "random_flip_left_right/Switch:output_true:0"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
    }
    node_def {
      name: "random_flip_left_right/switch_f"
      op: "Identity"
      input: "random_flip_left_right/Switch:output_false:0"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
    }
    node_def {
      name: "random_flip_left_right/pred_id"
      op: "Identity"
      input: "random_flip_left_right/Less:z:0"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
    }
    node_def {
      name: "random_flip_left_right/ReverseV2/axis"
      op: "Const"
      input: "^random_flip_left_right/switch_t"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "random_flip_left_right/ReverseV2"
      op: "ReverseV2"
      input: "random_flip_left_right/ReverseV2/Switch:output_true:0"
      input: "random_flip_left_right/ReverseV2/axis:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "random_flip_left_right/ReverseV2/Switch"
      op: "Switch"
      input: "random_flip_left_right/control_dependency:output:0"
      input: "random_flip_left_right/pred_id:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Squeeze"
          }
        }
      }
    }
    node_def {
      name: "random_flip_left_right/Switch_1"
      op: "Switch"
      input: "random_flip_left_right/control_dependency:output:0"
      input: "random_flip_left_right/pred_id:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Squeeze"
          }
        }
      }
    }
    node_def {
      name: "random_flip_left_right/Merge"
      op: "Merge"
      input: "random_flip_left_right/Switch_1:output_false:0"
      input: "random_flip_left_right/ReverseV2:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\377\377\377\377"
          }
        }
      }
    }
    node_def {
      name: "strided_slice"
      op: "StridedSlice"
      input: "random_flip_left_right/Merge:output:0"
      input: "strided_slice/stack:output:0"
      input: "strided_slice/stack_1:output:0"
      input: "strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 2
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 2
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "Reshape_1"
      op: "Reshape"
      input: "reshape_1_placeholder"
      input: "Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "add_1"
      op: "Add"
      input: "strided_slice:output:0"
      input: "Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\000\001\000\000\000\001\000\000\003\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "Reshape_2"
      op: "Reshape"
      input: "add_1:z:0"
      input: "Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Cast/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    ret {
      key: "reshape_2"
      value: "Reshape_2:output:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_yFWJkZd1cJs"
      output_arg {
        name: "prefetchdataset"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "TensorSliceDataset/list_files_1/file_pattern"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "gs://coco-tfrecords/wiki*"
          }
        }
      }
    }
    node_def {
      name: "TensorSliceDataset/list_files_1/MatchingFiles"
      op: "MatchingFiles"
      input: "TensorSliceDataset/list_files_1/file_pattern:output:0"
      device: "/job:worker/task:0/device:CPU:0"
    }
    node_def {
      name: "TensorSliceDataset/list_files_1/Identity"
      op: "Identity"
      input: "TensorSliceDataset/list_files_1/MatchingFiles:filenames:0"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
    }
    node_def {
      name: "TensorSliceDataset"
      op: "TensorSliceDataset"
      input: "TensorSliceDataset/list_files_1/Identity:output:0"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/list_files_1/file_pattern"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "gs://coco-tfrecords/wiki*"
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/list_files_1/MatchingFiles"
      op: "MatchingFiles"
      input: "ShuffleDataset/list_files_1/file_pattern:output:0"
      device: "/job:worker/task:0/device:CPU:0"
    }
    node_def {
      name: "ShuffleDataset/list_files_1/Identity"
      op: "Identity"
      input: "ShuffleDataset/list_files_1/MatchingFiles:filenames:0"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
    }
    node_def {
      name: "ShuffleDataset/list_files_1/Shape_1"
      op: "Shape"
      input: "ShuffleDataset/list_files_1/Identity:output:0"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT64
        }
      }
    }
    node_def {
      name: "ShuffleDataset/list_files_1/strided_slice_1/stack"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/list_files_1/strided_slice_1/stack_1"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/list_files_1/strided_slice_1/stack_2"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/list_files_1/strided_slice_1"
      op: "StridedSlice"
      input: "ShuffleDataset/list_files_1/Shape_1:output:0"
      input: "ShuffleDataset/list_files_1/strided_slice_1/stack:output:0"
      input: "ShuffleDataset/list_files_1/strided_slice_1/stack_1:output:0"
      input: "ShuffleDataset/list_files_1/strided_slice_1/stack_2:output:0"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "ShuffleDataset/list_files_1/Maximum/y"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/list_files_1/Maximum"
      op: "Maximum"
      input: "ShuffleDataset/list_files_1/strided_slice_1:output:0"
      input: "ShuffleDataset/list_files_1/Maximum/y:output:0"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
    }
    node_def {
      name: "ShuffleDataset/list_files_1/seed"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/list_files_1/seed2"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "TensorSliceDataset:handle:0"
      input: "ShuffleDataset/list_files_1/Maximum:z:0"
      input: "ShuffleDataset/list_files_1/seed:output:0"
      input: "ShuffleDataset/list_files_1/seed2:output:0"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "reshuffle_each_iteration"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "ShuffleAndRepeatDataset/buffer_size_2"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 100
          }
        }
      }
    }
    node_def {
      name: "ShuffleAndRepeatDataset/seed_1"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleAndRepeatDataset/seed2_1"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleAndRepeatDataset/count_1"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "ShuffleAndRepeatDataset"
      op: "ShuffleAndRepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "ShuffleAndRepeatDataset/buffer_size_2:output:0"
      input: "ShuffleAndRepeatDataset/seed_1:output:0"
      input: "ShuffleAndRepeatDataset/seed2_1:output:0"
      input: "ShuffleAndRepeatDataset/count_1:output:0"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
    }
    node_def {
      name: "ParallelInterleaveDataset/cycle_length_1"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 4
          }
        }
      }
    }
    node_def {
      name: "ParallelInterleaveDataset/block_length_1"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node_def {
      name: "ParallelInterleaveDataset/sloppy_1"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_BOOL
            tensor_shape {
            }
            bool_val: false
          }
        }
      }
    }
    node_def {
      name: "ParallelInterleaveDataset/buffer_output_elements_1"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 2
          }
        }
      }
    }
    node_def {
      name: "ParallelInterleaveDataset/prefetch_input_elements_1"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 8
          }
        }
      }
    }
    node_def {
      name: "ParallelInterleaveDataset"
      op: "ParallelInterleaveDataset"
      input: "ShuffleAndRepeatDataset:handle:0"
      input: "ParallelInterleaveDataset/cycle_length_1:output:0"
      input: "ParallelInterleaveDataset/block_length_1:output:0"
      input: "ParallelInterleaveDataset/sloppy_1:output:0"
      input: "ParallelInterleaveDataset/buffer_output_elements_1:output:0"
      input: "ParallelInterleaveDataset/prefetch_input_elements_1:output:0"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_data_structured_function_wrapper_62iz4XpaPAY"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
    }
    node_def {
      name: "ParallelMapDataset/Const_1"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\305\340\317\302\331\216\351\302)\\\367\302"
          }
        }
      }
    }
    node_def {
      name: "ParallelMapDataset/num_parallel_calls_1"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 8
          }
        }
      }
    }
    node_def {
      name: "ParallelMapDataset"
      op: "ParallelMapDataset"
      input: "ParallelInterleaveDataset:handle:0"
      input: "ParallelMapDataset/Const_1:output:0"
      input: "ParallelMapDataset/num_parallel_calls_1:output:0"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "Targuments"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_data_structured_function_wrapper_BQ6MGAseyxA"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 256
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "use_inter_op_parallelism"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "BatchDatasetV2/batch_size_1"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 128
          }
        }
      }
    }
    node_def {
      name: "BatchDatasetV2/drop_remainder_1"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_BOOL
            tensor_shape {
            }
            bool_val: true
          }
        }
      }
    }
    node_def {
      name: "BatchDatasetV2"
      op: "BatchDatasetV2"
      input: "ParallelMapDataset:handle:0"
      input: "BatchDatasetV2/batch_size_1:output:0"
      input: "BatchDatasetV2/drop_remainder_1:output:0"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 256
              }
              dim {
                size: 256
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node_def {
      name: "PrefetchDataset/buffer_size_3"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 128
          }
        }
      }
    }
    node_def {
      name: "PrefetchDataset"
      op: "PrefetchDataset"
      input: "BatchDatasetV2:handle:0"
      input: "PrefetchDataset/buffer_size_3:output:0"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 256
              }
              dim {
                size: 256
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    ret {
      key: "prefetchdataset"
      value: "PrefetchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_zTjIZOlRFUU"
      output_arg {
        name: "prefetchdataset"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "TensorSliceDataset/list_files/file_pattern"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "gs://coco-tfrecords/coco*"
          }
        }
      }
    }
    node_def {
      name: "TensorSliceDataset/list_files/MatchingFiles"
      op: "MatchingFiles"
      input: "TensorSliceDataset/list_files/file_pattern:output:0"
      device: "/job:worker/task:0/device:CPU:0"
    }
    node_def {
      name: "TensorSliceDataset/list_files/Identity"
      op: "Identity"
      input: "TensorSliceDataset/list_files/MatchingFiles:filenames:0"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
    }
    node_def {
      name: "TensorSliceDataset"
      op: "TensorSliceDataset"
      input: "TensorSliceDataset/list_files/Identity:output:0"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/list_files/file_pattern"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "gs://coco-tfrecords/coco*"
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/list_files/MatchingFiles"
      op: "MatchingFiles"
      input: "ShuffleDataset/list_files/file_pattern:output:0"
      device: "/job:worker/task:0/device:CPU:0"
    }
    node_def {
      name: "ShuffleDataset/list_files/Identity"
      op: "Identity"
      input: "ShuffleDataset/list_files/MatchingFiles:filenames:0"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
    }
    node_def {
      name: "ShuffleDataset/list_files/Shape_1"
      op: "Shape"
      input: "ShuffleDataset/list_files/Identity:output:0"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT64
        }
      }
    }
    node_def {
      name: "ShuffleDataset/list_files/strided_slice_1/stack"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/list_files/strided_slice_1/stack_1"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/list_files/strided_slice_1/stack_2"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/list_files/strided_slice_1"
      op: "StridedSlice"
      input: "ShuffleDataset/list_files/Shape_1:output:0"
      input: "ShuffleDataset/list_files/strided_slice_1/stack:output:0"
      input: "ShuffleDataset/list_files/strided_slice_1/stack_1:output:0"
      input: "ShuffleDataset/list_files/strided_slice_1/stack_2:output:0"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "ShuffleDataset/list_files/Maximum/y"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/list_files/Maximum"
      op: "Maximum"
      input: "ShuffleDataset/list_files/strided_slice_1:output:0"
      input: "ShuffleDataset/list_files/Maximum/y:output:0"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
    }
    node_def {
      name: "ShuffleDataset/list_files/seed"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/list_files/seed2"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "TensorSliceDataset:handle:0"
      input: "ShuffleDataset/list_files/Maximum:z:0"
      input: "ShuffleDataset/list_files/seed:output:0"
      input: "ShuffleDataset/list_files/seed2:output:0"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "reshuffle_each_iteration"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "ShuffleAndRepeatDataset/buffer_size"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 100
          }
        }
      }
    }
    node_def {
      name: "ShuffleAndRepeatDataset/seed"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleAndRepeatDataset/seed2"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleAndRepeatDataset/count"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "ShuffleAndRepeatDataset"
      op: "ShuffleAndRepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "ShuffleAndRepeatDataset/buffer_size:output:0"
      input: "ShuffleAndRepeatDataset/seed:output:0"
      input: "ShuffleAndRepeatDataset/seed2:output:0"
      input: "ShuffleAndRepeatDataset/count:output:0"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
    }
    node_def {
      name: "ParallelInterleaveDataset/cycle_length"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 4
          }
        }
      }
    }
    node_def {
      name: "ParallelInterleaveDataset/block_length"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node_def {
      name: "ParallelInterleaveDataset/sloppy"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_BOOL
            tensor_shape {
            }
            bool_val: false
          }
        }
      }
    }
    node_def {
      name: "ParallelInterleaveDataset/buffer_output_elements"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 2
          }
        }
      }
    }
    node_def {
      name: "ParallelInterleaveDataset/prefetch_input_elements"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 8
          }
        }
      }
    }
    node_def {
      name: "ParallelInterleaveDataset"
      op: "ParallelInterleaveDataset"
      input: "ShuffleAndRepeatDataset:handle:0"
      input: "ParallelInterleaveDataset/cycle_length:output:0"
      input: "ParallelInterleaveDataset/block_length:output:0"
      input: "ParallelInterleaveDataset/sloppy:output:0"
      input: "ParallelInterleaveDataset/buffer_output_elements:output:0"
      input: "ParallelInterleaveDataset/prefetch_input_elements:output:0"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_data_structured_function_wrapper_62iz4XpaPAY"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
    }
    node_def {
      name: "ParallelMapDataset/num_parallel_calls"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 8
          }
        }
      }
    }
    node_def {
      name: "ParallelMapDataset"
      op: "ParallelMapDataset"
      input: "ParallelInterleaveDataset:handle:0"
      input: "ParallelMapDataset/num_parallel_calls:output:0"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_data_structured_function_wrapper_nJHqYUuU33c"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 256
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "use_inter_op_parallelism"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "BatchDatasetV2/batch_size"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 128
          }
        }
      }
    }
    node_def {
      name: "BatchDatasetV2/drop_remainder"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_BOOL
            tensor_shape {
            }
            bool_val: true
          }
        }
      }
    }
    node_def {
      name: "BatchDatasetV2"
      op: "BatchDatasetV2"
      input: "ParallelMapDataset:handle:0"
      input: "BatchDatasetV2/batch_size:output:0"
      input: "BatchDatasetV2/drop_remainder:output:0"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 256
              }
              dim {
                size: 256
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node_def {
      name: "PrefetchDataset/buffer_size_1"
      op: "Const"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 128
          }
        }
      }
    }
    node_def {
      name: "PrefetchDataset"
      op: "PrefetchDataset"
      input: "BatchDatasetV2:handle:0"
      input: "PrefetchDataset/buffer_size_1:output:0"
      device: "/job:worker/task:0/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 256
              }
              dim {
                size: 256
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    ret {
      key: "prefetchdataset"
      value: "PrefetchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "tf_data_structured_function_wrapper_Qky8TA5ITQU"
      input_arg {
        name: "arg0"
        type: DT_STRING
      }
      output_arg {
        name: "tfrecorddataset"
        type: DT_VARIANT
      }
      description: "Wrapper for passing nested structures to and from tf.data functions."
      is_stateful: true
    }
    node_def {
      name: "compression_type"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "buffer_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 262144
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "arg0"
      input: "compression_type:output:0"
      input: "buffer_size:output:0"
    }
    ret {
      key: "tfrecorddataset"
      value: "TFRecordDataset:handle:0"
    }
  }
}
versions {
  producer: 27
  min_consumer: 12
}
